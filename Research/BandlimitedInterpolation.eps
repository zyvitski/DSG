%!PS-Adobe-2.0
%%Creator: dvips 5.491 Copyright 1986, 1992 Radical Eye Software
%%Pages: 13 1
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -f
%%BeginProcSet: tex.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N /X{S N}
B /TR{translate}N /isls false N /vsize 11 72 mul N /@rigin{isls{[0 -1 1 0 0 0]
concat}if 72 Resolution div 72 VResolution div neg scale isls{Resolution hsize
-72 div mul 0 TR}if Resolution VResolution vsize -72 div 1 add mul TR matrix
currentmatrix dup dup 4 get round 4 exch put dup dup 5 get round 5 exch put
setmatrix}N /@landscape{/isls true N}B /@manualfeed{statusdict /manualfeed
true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N
/IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix
fntrx N /FontBBox FBB N string /base X array /BitMaps X /BuildChar{
CharBuilder}N /Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn
put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0
0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data
dup length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128
ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127
sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp 0 N
/cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2 index get
S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff ch-height
sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height true[1 0 0
-1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{/cc X dup
type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1
ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}
B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/FV}{/RV}ifelse load def pop}N /eop{SI restore showpage userdict
/eop-hook known{eop-hook}if}N /@start{userdict /start-hook known{start-hook}
if /VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255{IE
S 1 string dup 0 3 index put cvn put}for 65781.76 div /vsize X 65781.76 div
/hsize X}N /p{show}N /RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley
0 N /v{/ruley X /rulex X V}B /V{}B /RV statusdict begin /product where{pop
product dup length 7 ge{0 7 getinterval dup(Display)eq exch 0 4 getinterval
(NeXT)eq or}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale
rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex
ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /FV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{-3 M}
B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B /w{0
rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{p 2 w}
B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save N}B
/eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen false N
/rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B /@scaleunit 100 N
/@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit div /vsc X}B /@hsize{/hs
X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{/CLIP 2 N}B /@hoffset{/ho X}B
/@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X /rwiSeen true N}B /@rhi
{10 div /rhi X /rhiSeen true N}B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B
/@ury{/ury X}B /magscale true def end /@MacSetUp{userdict /md known{userdict
/md get type /dicttype eq{userdict begin md length 10 add md maxlength ge{/md
md dup length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{
}N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath clippath
mark{transform{itransform moveto}}{transform{itransform lineto}}{6 -2 roll
transform 6 -2 roll transform 6 -2 roll transform{itransform 6 2 roll
itransform 6 2 roll itransform 6 2 roll curveto}}{{closepath}}pathforall
newpath counttomark array astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2
F/|______Courier fnt invertflag{PaintBlack}if}N /txpose{pxs pys scale ppr
aload pop por{noflips{pop S neg S TR pop 1 -1 scale}if xflip yflip and{pop S
neg S TR 180 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0
get neg sub neg TR}if xflip yflip not and{pop S neg S TR pop 180 rotate ppr 3
get ppr 1 get neg sub neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get
neg TR}if}{noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop
pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get
neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr 0
get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3
1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp{pop pop
showpage pm restore}N end}if}if}N /normalscale{Resolution 72 div VResolution
72 div neg scale magscale{DVImag dup scale}if 0 setgray}N /psfts{S 65781.76
div N}N /startTexFig{/psf$SavedState save N userdict maxlength dict begin
/magscale false def normalscale currentpoint TR /psf$ury psfts /psf$urx psfts
/psf$lly psfts /psf$llx psfts /psf$y psfts /psf$x psfts currentpoint /psf$cy X
/psf$cx X /psf$sx psf$x psf$urx psf$llx sub div N /psf$sy psf$y psf$ury
psf$lly sub div N psf$sx psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy
psf$sy div psf$ury sub TR /showpage{}N /erasepage{}N /copypage{}N /p 3 def
@MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath
clip newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial{CLIP
1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath
clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx sub div rhiSeen{
rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly
sub div dup scale llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly
moveto urx lly lineto urx ury lineto llx ury lineto closepath clip}if
/showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{count ocount
sub{pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B /li{lineto}B /rl{
rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1 setlinecap
newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY moveto}N
/ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 400 400 @start /Fa 5 111
df<70F0590C9A0C9C0C180C180C301830183018301860306030003000300060006000600E117C
8B15>17 D<07FC0001C00001C00001C00001C00003800003800003800003800007000007000007
00000700080E00100E00100E00200E00601C01E0FFFFC015137D921A>76
D<07C00C6010E0306060006000C000C000C000601020601F800C0C7C8B12>99
D<7C181818183030303060606060C0C8C8C8D07006137C920D>108 D<7078005984009A06009C
0600180600180600300C00300C80301880301880601900600E00110C7C8B18>110
D E /Fb 14 118 df<1C003E007F00FF80FF80FF807F003E001C0009097C8812>46
D<000E00001E0000FE001FFE00FFFE00FFFE00E0FE0000FE0000FE0000FE0000FE0000FE0000FE
0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE
0000FE0000FE0000FE0000FE0000FE0000FE0000FE007FFFFE7FFFFE7FFFFE17247CA320>49
D<01FF000007FFE0001FFFF8003E07FC007C01FE007E00FF00FF007F00FF007F80FF007F80FF00
3F807E003F803C003F8000007F8000007F0000007F000000FE000000FC000001F8000001F00000
03E0000007C000000F8000001F0000003C00000078038000F0038001C003800380070007000700
0FFFFF001FFFFF003FFFFF007FFFFF00FFFFFE00FFFFFE00FFFFFE0019247DA320>I<00FF0000
07FFE0000FFFF8001F01FC003E00FE007F00FE007F807F007F807F007F807F003F007F001E00FF
000C00FE000000FC000001F8000001F0000007E00001FF800001FFE0000003F8000000FC000000
FE0000007F0000007F0008007F803E007F807F007F80FF807F80FF807F80FF807F00FF807F007F
00FE007E00FE003F03FC001FFFF00007FFE00001FF000019247DA320>I<00003C0000003C0000
007C000000FC000001FC000003FC000003FC000007FC00000EFC00001CFC000038FC000078FC00
0070FC0000E0FC0001C0FC000380FC000700FC000700FC000E00FC001C00FC003800FC007000FC
00F000FC00FFFFFFE0FFFFFFE0FFFFFFE00001FC000001FC000001FC000001FC000001FC000001
FC000001FC00007FFFE0007FFFE0007FFFE01B247EA320>I<18000C001F007C001FFFF8001FFF
F0001FFFE0001FFFC0001FFF80001FFE00001C6000001C0000001C0000001C0000001C0000001C
0000001CFF80001FFFE0001F01F8001C00FC001800FE0000007F0000007F0000007F0000007F80
38007F807C007F80FE007F80FF007F80FF007F80FE007F00FC007F007800FE003800FC001E03F8
000FFFF00007FFC00001FE000019247DA320>I<000FE000007FF80001FFFC0003F81E0007E03F
000FC07F001F807F001F007F003F007F003F003E007E0000007E0000007E000000FE1F8000FE7F
E000FEE0F800FF807C00FF007E00FF003E00FF003F00FE003F00FE003F80FE003F80FE003F80FE
003F807E003F807E003F807E003F803F003F003F003F001F007E001F807C000FC0F80007FFF000
01FFE000007F800019247DA320>I<380000003E0000003FFFFFE03FFFFFE03FFFFFE07FFFFFC0
7FFFFF807FFFFF007FFFFE0070001C0070003800E0003800E0007000E000E0000001C000000380
000003800000070000000F0000000F0000001E0000003E0000003E0000007E0000007C0000007C
000000FC000000FC000000FC000000FC000001FC000001FC000001FC000001FC000001FC000001
FC000000F80000007000001B267DA520>I<FFFFFFFF00FFFFFFFF00FFFFFFFF0003FC007F0003
FC001F8003FC000F8003FC00078003FC00078003FC00038003FC00038003FC00038003FC0381C0
03FC0381C003FC0381C003FC03800003FC07800003FC0F800003FFFF800003FFFF800003FFFF80
0003FC0F800003FC07800003FC03800003FC03800003FC03800003FC03800003FC00000003FC00
000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC000000FFFF
F80000FFFFF80000FFFFF8000022267EA528>70 D<007F8003FFE007C1F00F80781F003C3F003E
7E003E7E001E7E001FFE001FFE001FFFFFFFFFFFFFFE0000FE0000FE00007E00007E00003F0007
3F00071F000E0F801C07E07801FFF0003FC018197E981D>101 D<00FF03C003FFCFE00F81FDF0
1F00F9F03E007CE03E007C407E007E007E007E007E007E007E007E007E007E003E007C003E007C
001F00F8000F81F0001BFFC00018FF00003800000038000000380000003C0000003FFFF0001FFF
FE000FFFFF0007FFFF801FFFFFC03C001FC0780007E0F80003E0F80003E0F80003E0F80003E07C
0007C03E000F801F803F0007FFFC0000FFE0001C257E9820>103 D<07000F801FC03FE03FE03F
E01FC00F80070000000000000000000000FFC0FFC0FFC00FC00FC00FC00FC00FC00FC00FC00FC0
0FC00FC00FC00FC00FC00FC00FC00FC00FC00FC00FC0FFF8FFF8FFF80D277EA611>105
D<FF83E0FF8FF8FF9C7C0FB0FE0FB0FE0FE0FE0FE07C0FE0380FC0000FC0000FC0000FC0000FC0
000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC000FFFE00FFFE00FFFE001719
7F981A>114 D<FFC03FF0FFC03FF0FFC03FF00FC003F00FC003F00FC003F00FC003F00FC003F0
0FC003F00FC003F00FC003F00FC003F00FC003F00FC003F00FC003F00FC003F00FC003F00FC003
F00FC003F00FC007F00FC007F007C00FF003E03BFF01FFF3FF007FC3FF20197E9823>117
D E /Fc 9 62 df<000300000003000000078000000FC000000BC0000013E0000011E0000021F0
000020F0000040F80000C07C0000807C0001003E0001001E0002001F0002000F0004000F800400
0780080007C0180003E0100001E0200001F0200000F07FFFFFF87FFFFFF8FFFFFFFC1E1A7E9924
>1 D<00800100020004000C00080018003000300030006000600060006000E000E000E000E000
E000E000E000E000E000E0006000600060006000300030003000180008000C0004000200010000
8009267C9C11>40 D<8000400020001000180008000C0006000600060003000300030003000380
03800380038003800380038003800380038003000300030003000600060006000C000800180010
0020004000800009267E9C11>I<00060000000600000006000000060000000600000006000000
060000000600000006000000060000000600000006000000060000FFFFFFF0FFFFFFF000060000
000600000006000000060000000600000006000000060000000600000006000000060000000600
0000060000000600001C1C7E9722>43 D<07E00C301818381C700E700E700EF00FF00FF00FF00F
F00FF00FF00FF00FF00FF00FF00F700E700E700E381C381C0C3007E010197E9816>48
D<03000700FF000700070007000700070007000700070007000700070007000700070007000700
07000700070007000700FFF80D197C9816>I<0FE01038601C601EF80FF80FF80F700F000F000E
001E001C00380030006000C00180030006010C01080110023FFE7FFEFFFE10197E9816>I<01F0
030C0E041C0E381E381E700C70007000F3E0F438F81CF80EF00EF00FF00FF00FF00F700F700F70
0E380E181C0C3803E010197E9816>54 D<7FFFFFE0FFFFFFF00000000000000000000000000000
000000000000000000000000000000000000FFFFFFF07FFFFFE01C0C7E8F22>61
D E /Fd 3 50 df<FFFFFF80FFFFFF8019027B8A23>0 D<03000780078007800F000F000E001E
001E001C001C003800380038007000700060006000E000C00009147E950D>48
D<07E0001F800FFC0070C0181E01C020200F03001040038600084001CC00088000F800048000F0
0004800078000480003C000480007C00044000CE00084001870008200303C010100E01E0600C38
00FFC007E0001F8026117D902C>I E /Fe 8 91 df<FFC0FFC0FFC0E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFC0FFC0FFC00A417581
17>2 D<FFC0FFC0FFC001C001C001C001C001C001C001C001C001C001C001C001C001C001C001
C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C0
01C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001
C001C001C001C001C001C0FFC0FFC0FFC00A417F8117>I<40E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0400325798112>12 D<FFFEFFFEFFFEFFFEF0
00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F0
00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F0
00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F0
00F000F000F000F000F000F000FFFEFFFEFFFEFFFE0F8473811D>20 D<FFFEFFFEFFFEFFFE001E
001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E00
1E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E
001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E00
1E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E
001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E00
1E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E001E
001E001E001E001E001E001EFFFEFFFEFFFEFFFE0F8480811D>I<000003E000000C1000001838
0000387C0000307C0000707C000070380000F0000000F0000000F0000000E0000001E0000001E0
000001E0000001E0000001E0000001E0000001E0000003E0000003E0000003E0000003E0000003
E0000003E0000003E0000003C0000007C0000007C0000007C0000007C0000007C0000007C00000
07C0000007C0000007C00000078000000F8000000F8000000F8000000F8000000F8000000F8000
000F8000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000E0000001E00
00001E0000001C0000701C0000F81C0000F8380000F83000007060000020C000001F8000001E3D
7D7F1A>82 D<FFFFFFFFFFFFFFFFC000FFFFFFFFFFFFFFFFE000FFFFFFFFFFFFFFFFE0007FC000
0000003FFFF0007FE00000000000FFF0003FF000000000000FF0001FF0000000000003F8000FF8
000000000000F8000FFC0000000000003C0007FC0000000000001C0003FE0000000000000E0001
FF000000000000060001FF800000000000020000FF8000000000000100007FC000000000000100
003FE000000000000080003FF000000000000000001FF000000000000000000FF8000000000000
000007FC000000000000000007FE000000000000000003FE000000000000000001FF0000000000
00000001FF800000000000000000FFC000000000000000007FC000000000000000003FE0000000
00000000003FF000000000000000001FF000000000000000000FF8000000000000000007FC0000
00000000000007FE000000000000000003FE000000000000000001FF000000000000000000FF80
0000000000000000FFC000000000000000007FC000000000000000003FE000000000000000001F
F000000000000000001FE000000000000000000FC0000000000000000007800000000000000000
0F8000000000000000001F0000000000000000003E0000000000000000007C0000000000000000
0078000000000000000000F0000000000000000001F0000000000000000003E000000000000000
0007C00000000000000000078000000000000000000F0000000000000000001E00000000000000
00003E0000000000000000007C000000000000000000F8000000000000000000F0000000000000
000001E0000000000000000003E0000000000000800007C000000000000100000F800000000000
0100000F0000000000000300001E0000000000000600003C0000000000000E00007C0000000000
001C0000F80000000000003C0001F0000000000000FC0001E0000000000003F80003C000000000
000FF80007C000000000007FF8000F80000000001FFFF0001FFFFFFFFFFFFFFFF0003FFFFFFFFF
FFFFFFE0003FFFFFFFFFFFFFFFE0007FFFFFFFFFFFFFFFE000FFFFFFFFFFFFFFFFC000494D7D7F
50>88 D<00000000007C000000000000C2000000000001870000000000038F8000000000038F80
00000000070F8000000000070700000000000F0000000000000E0000000000001E000000000000
1E0000000000001E0000000000003C0000000000003C0000000000003C0000000000007C000000
000000780000000000007800000000000078000000000000F8000000000000F8000000000000F0
000000000000F0000000000001F0000000000001F0000000000001F0000000000001E000000000
0003E0000000000003E0000000000003E0000000000003E0000000000007C0000000000007C000
0000000007C0000000000007C0000000000007C000000000000FC000000000000F800000000000
0F8000000000000F8000000000001F8000000000001F8000000000001F0000000000001F000000
0000001F0000000000003F0000000000003F0000000000003F0000000000003E0000000000007E
0000000000007E0000000000007E0000000000007E0000000000007E000000000000FC00000000
0000FC000000000000FC000000000000FC000000000000FC000000000001F8000000000001F800
0000000001F8000000000001F8000000000001F8000000000003F0000000000003F00000000000
03F0000000000003F0000000000003F0000000000007E0000000000007E0000000000007E00000
00000007E0000000000007E0000000000007C000000000000FC000000000000FC000000000000F
C000000000000F8000000000000F8000000000000F8000000000001F8000000000001F80000000
00001F0000000000001F0000000000001F0000000000003F0000000000003E0000000000003E00
00000000003E0000000000003E0000000000003E0000000000007C0000000000007C0000000000
007C0000000000007C00000000000078000000000000F8000000000000F8000000000000F80000
00000000F0000000000000F0000000000001F0000000000001F0000000000001E0000000000001
E0000000000001E0000000000003E0000000000003C0000000000003C0000000000003C0000000
00000780000000000007800000000000070000000000000F0000000000000E0000000000700E00
00000000F81C0000000000F81C0000000000F83800000000007070000000000020E00000000000
1F800000000000317B7D7F1F>90 D E /Ff 15 123 df<381F804C20C04EC0E08E80E08F00E08E
00E00E00E01C01C01C01C01C01C01C01C038038038038038038038038070070030070000070000
0700000E00000E00000E00000E00001C00000C0013197D9017>17 D<0FFFFC1FFFFC3FFFF86082
00C08600810400010400030400030400020400060E00060E000E0E000C0E001C07001C07001802
0016117D901A>25 D<080006100007100007200003400003400001401801801802801802803002
803004C0300CC0F018F3FCF07F9FE07F1FC03E0F8018117E901C>33 D<00008000018000030000
0300000300000600000600000C00000C00000C0000180000180000300000300000300000600000
600000C00000C0000180000180000180000300000300000600000600000600000C00000C000018
0000180000180000300000300000600000600000600000C00000C0000011277D9C17>61
D<01FFE0003C00003C00003C0000780000780000780000780000F00000F00000F00000F00001E0
0001E00001E00001E00003C00003C00103C00103C00207800207800607800C07801C0F0078FFFF
F8181A7D991E>76 D<01F807060C0E181E381E700C7000E000E000E000E000E000E00260046008
30300FC00F117D9014>99 D<1FC000038000038000038000038000070000070000070000070000
0E00000E3F000E41800F81C01D01C01E01C01C01C01C01C0380380380380380380380700700710
700710700E10700E20E00660600380141B7D9A1A>104 D<018003C003C0038000000000000000
00000000001C0026004700470087008E000E000E001C001C003800388038807080710032001C00
0A1B7D9A10>I<0006000F000F000E0000000000000000000000000070019C021C021C041C041C
001C0038003800380038007000700070007000E000E000E000E001C061C0F180F300E6007C0010
237F9A12>I<1F8007000700070007000E000E000E000E001C001C001C001C0038003800380038
007000700070007000E200E200E200E20064003800091B7D9A0E>108 D<381F804C20C04EC0E0
8E80E08F00E08E00E00E00E01C01C01C01C01C01C01C0380380388380388380708380710700320
3001C015117D901B>110 D<01E106130C0F180E380E700E700EE01CE01CE01CE01CE038E038E0
38607831F01E700070007000E000E000E000E001C00FF810197D9014>113
D<01F806060C06080E180E1C001FC00FF007FC00FC001C700CF00CF00CE01860701FC00F117D90
15>115 D<018001C003800380038003800700FFF0070007000E000E000E000E001C001C001C00
1C00382038203840384018800F000C187E9711>I<03808007E1000FFF00180200100400000800
0030000040000080000100000200000C0200100200200C003FFC0041F80080E00011117D9015>
122 D E /Fg 18 107 df<FFFFFFFFC0FFFFFFFFC0FFFFFFFFC022037C8E2B>0
D<78FCFCFCFC7806067C900F>I<00E00000E00000E00000E00000E000C0E060E0E0E0F041E07C
47C01E4F00075C0001F00001F000075C001E4F007C47C0F041E0E0E0E0C0E06000E00000E00000
E00000E00000E00013187C991C>3 D<0000600000000070000000007000000000700000000070
000000007000000000700000000070000000007000000000700000000070000000007000000000
7000000000700000000070000000007000000000700000FFFFFFFFF0FFFFFFFFF0FFFFFFFFF000
007000000000700000000070000000007000000000700000000070000000007000000000700000
000070000000007000000000700000000070000000007000000000700000FFFFFFFFF0FFFFFFFF
F0FFFFFFFFF024257DA32B>6 D<FFFFFFFFF0FFFFFFFFF07FFFFFFFE000000000000000000000
000000000000000000000000000000000000000000000000000000000000FFFFFFFFF0FFFFFFFF
F0FFFFFFFFF0000000000000000000000000000000000000000000000000000000000000000000
000000000000007FFFFFFFE0FFFFFFFFF0FFFFFFFFF024197D992B>17 D<00000001C000000007
C00000001FC00000007E00000001F800000007E00000001F800000007E00000001F800000007E0
0000001F800000007E00000001F800000007E00000001F800000007E00000000F800000000FE00
0000001F8000000007E000000001F8000000007E000000001F8000000007E000000001F8000000
007E000000001F8000000007E000000001F8000000007E000000001F8000000007C000000001C0
000000000000000000000000000000000000000000000000000000000000000000000000000000
007FFFFFFF80FFFFFFFFC0FFFFFFFFC0222C7CA22B>20 D<E000000000F800000000FE00000000
1F8000000007E000000001F8000000007E000000001F8000000007E000000001F8000000007E00
0000001F8000000007E000000001F8000000007E000000001FC000000007C00000001FC0000000
7E00000001F800000007E00000001F800000007E00000001F800000007E00000001F800000007E
00000001F800000007E00000001F800000007E00000000F800000000E000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000007FFFFFFF80
FFFFFFFFC0FFFFFFFFC0222C7CA22B>I<03F000001007FC0000301FFE0000303FFF8000303C0F
C000707803E000707001F800E0E0007C01E0E0003F03C0C0001FFFC0C00007FF80C00003FE0040
0000FC00240D7D932B>24 D<03F00000100FFE0000301FFF0000303FFFC000707C0FF000707001
F800E0E000FF03E0E0003FFFC0C0000FFF80C00007FF00C00000FC000000000000000000000003
F00000000FFE0000301FFF0000303FFFC000707C0FF000707001F800E0E000FF03E0E0003FFFC0
C0000FFF80C00007FF00C00000FC0024187D9A2B>I<001C00000000001C00000000001C000000
0000380000000000380000000000380000000000700000000000F00000000000E00000000001C0
0000000003C0000000000780000000001F00000000003FFFFFFFFFFEFFFFFFFFFFFF3FFFFFFFFF
FE1F000000000007800000000003C00000000001C00000000000E00000000000F0000000000070
00000000003800000000003800000000003800000000001C00000000001C00000000001C000000
00301D7D9B37>32 D<0007FFF0003FFFF000FFFFF003F8000007C000000F0000001E0000001C00
000038000000380000007000000070000000E0000000E0000000E0000000FFFFFFF0FFFFFFF0FF
FFFFF0E0000000E0000000E0000000700000007000000038000000380000001C0000001E000000
0F00000007C0000003F8000000FFFFF0003FFFF00007FFF01C217C9D25>50
D<6000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFFCFFFC7FFC0E39
77A919>98 D<000C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001CFFFCFF
FCFFFC0E397FA919>I<7FFCFFFCFFFCE000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E00060000E3977A919>I<FFFCFFFCFFFC001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C000C0E397FA919>I<0001E0000F00001C0000380000780000F00000F000
00F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F000
00F00000F00000F00000E00001E00003C000078000FE0000FE000007800003C00001E00000E000
00F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F000
00F00000F00000F00000F00000F000007800003800001C00000F000001E013387CA91C>I<F800
000F000003800001C00001E00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F000007000007800003C00001E
000007E00007E0001E00003C0000780000700000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00001E00001C0
000380000F0000F8000013387CA91C>I<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003387AA90F
>106 D E /Fh 35 123 df<001FC000FFC001E0000780000F00001E00003C0000380000780000
780000FFFF00FFFE00F00000F00000F00000F00000F000007000007000003000003800001C0080
06070001F80012187E9716>15 D<1E01FC0023060E00238807004390078043E0078043C0078087
C007808780078007800780078007800F000F000F000F000F000F000F000F001E001E001E001E00
1E001E001E001E003C003C003C003C003C003C003C003C00780078003000780000007800000078
000000F0000000F0000000F0000000F0000001E0000001E0000001E0000001E0000003C0000001
800019247E971B>17 D<03E0000000F0000000780000007C0000003C0000003E0000003E000000
1E0000001F0000001F0000000F0000000F800000078000000780000007C0000003C0000003C000
0003E0000001E0000001E0000001F0000003F0000006F800000CF8000018780000387C0000707C
0000E03C0001C03E0003803E0007801E000F001F001E000F003C000F0078000F80F8000780F000
07C0E00003C01A267DA520>21 D<03C000C07FC001E07F8003C0078003C0078003C0078007800F
0007800F0007000F000F000F001E001E001E001E003C001E0038001E0070003C00E0003C01C000
3C0380003C070000780C0000783800007860000079800000FE000000F00000001B187E971B>23
D<0004000004000004000004000003FC001E020079FC00F00001E00003C0000780000780000F00
000F00000F00000F00000F0000070000078000039FE000E02001BFC00700000C00001C00003800
00300000700000600000E00000E00000E00000E00000F00000F80000FC00007F80003FE0001FFC
0007FF0000FFC0003FC00007E00001E00000E00000C00081C0006180001E0017317EA518>I<03
FFFFF00FFFFFF81FFFFFF018101000301020006030200040202000802020000060600000606000
0040600000C0600000C0600001C060000180E0000180E0000380E0000380F0000700F0000700F0
000F00F8000F0078001E0078000C0030001D187E9720>I<0000FC0000038600000E0300001C03
80003801C0007001C0007001C000E001C001E001C001E001C003C003C003C003C003C003C003C0
03C007800780078007800780070007800E000F000E000F801C000F8038000F4070001E21C0001E
1F00001E0000001E0000003C0000003C0000003C0000003C000000780000007800000078000000
78000000F0000000600000001A2480971D>I<0400000C0800001E0800003E1000001E1000000E
200000062000000640000006400100024001800280030004800300048003000480020008800200
088006001880060030C00E0070C01F00E0E07383C0FFF3FF807FE3FF003F81FE001F00F8001F18
7E9722>33 D<78FCFCFCFC7806067C850F>58 D<78FCFCFEFE7A02020202040408081020400711
7C850F>I<00000001C000000007C00000001FC00000007E00000001F800000007E00000001F80
0000007E00000001F800000007E00000001F800000007E00000001F800000007E00000001F8000
0000FE00000000F800000000FE000000001F8000000007E000000001F8000000007E000000001F
8000000007E000000001F8000000007E000000001F8000000007E000000001F8000000007E0000
00001FC000000007C000000001C022217C9D2B>I<000018000038000038000070000070000070
0000E00000E00000E00001C00001C00001C0000380000380000380000700000700000700000E00
000E00000E00001C00001C00001C0000380000380000380000700000700000E00000E00000E000
01C00001C00001C0000380000380000380000700000700000700000E00000E00000E00001C0000
1C00001C0000380000380000380000700000700000700000E00000E00000C0000015387DA91C>
I<007FFFFFFE007FFFFFFE0003E0003E0003E0000E0007C0000E0007C000060007C000040007C0
0004000F800004000F800004000F800004000F800004001F001008001F001000001F001000001F
003000003E002000003E00E000003FFFE000003FFFE000007C00C000007C004000007C00400000
7C00400000F800800000F800800000F800000000F800000001F000000001F000000001F0000000
01F000000003E000000003E000000003E000000007E0000000FFFF800000FFFF80000027267EA5
24>70 D<007FFF81FFFE007FFF81FFFE0003E0000F800003E0000F800007C0001F000007C0001F
000007C0001F000007C0001F00000F80003E00000F80003E00000F80003E00000F80003E00001F
00007C00001F00007C00001F00007C00001F00007C00003E0000F800003FFFFFF800003FFFFFF8
00003E0000F800007C0001F000007C0001F000007C0001F000007C0001F00000F80003E00000F8
0003E00000F80003E00000F80003E00001F00007C00001F00007C00001F00007C00001F00007C0
0003E0000F800003E0000F800003E0000F800007E0001F8000FFFF03FFFC00FFFF03FFFC002F26
7EA52E>72 D<007FFFC000007FFFC0000003E000000003E000000007C000000007C000000007C0
00000007C00000000F800000000F800000000F800000000F800000001F000000001F000000001F
000000001F000000003E000000003E000000003E000000003E000000007C000000007C00000000
7C000000007C00000000F800008000F800008000F800008000F800010001F000010001F0000300
01F000020001F000060003E0000E0003E0001C0003E0003C0007E001FC00FFFFFFF800FFFFFFF8
0021267EA526>76 D<007FE0000007FF007FE000000FFF0003E0000017C00002F0000017C00004
F000002F800004F000004F800004F000004F800004F000008F800008F000009F000008F000011F
0000087800021F0000087800021F0000107800043E0000107800083E0000107800083E00001078
00103E0000207800207C0000203C00207C0000203C00407C0000203C00807C0000403C0080F800
00403C0100F80000403C0200F80000403C0200F80000801E0401F00000801E0401F00000801E08
01F00000801E1001F00001001E1003E00001001E2003E00001001E4003E00001000F4003E00002
000F8007C00002000F0007C00006000F0007C0000F000E000FC000FFF00C01FFFE00FFF00C01FF
FE0038267EA536>I<007FF0001FFE007FF0001FFE0003F80003E00002F80001800004FC000100
00047C00010000047C00010000043E00010000083E00020000083F00020000081F00020000081F
80020000100F80040000100FC00400001007C00400001007C00400002003E00800002003E00800
002001F00800002001F00800004001F81000004000F81000004000FC10000040007C1000008000
7E20000080003E20000080003E20000080001F20000100001F40000100000FC0000100000FC000
0100000FC0000200000780000200000780000600000380000F0000038000FFF000010000FFF000
0100002F267EA52C>I<007FFFFF80007FFFFFE00003E001F00003E000780007C0003C0007C000
3E0007C0003E0007C0003E000F80003E000F80003E000F80003E000F80003E001F00007C001F00
007C001F0000F8001F0000F0003E0001E0003E000780003E001F00003FFFF800007C000000007C
000000007C000000007C00000000F800000000F800000000F800000000F800000001F000000001
F000000001F000000001F000000003E000000003E000000003E000000007E0000000FFFF000000
FFFF00000027267EA524>80 D<0FFFFFFFF80FFFFFFFF80F003E00781C003E003818007C001810
007C001830007C001020007C00102000F800104000F800104000F800104000F800108001F00020
0001F000000001F000000001F000000003E000000003E000000003E000000003E000000007C000
000007C000000007C000000007C00000000F800000000F800000000F800000000F800000001F00
0000001F000000001F000000001F000000003E000000003E000000003E000000007E0000003FFF
FC00007FFFFC000025267FA520>84 D<003FFF807FFC003FFF807FFC0001FC000F800000F8000E
000000FC0008000000FC00100000007C00200000007E00400000003E00C00000003F0180000000
3F03000000001F02000000001F84000000000F88000000000FD0000000000FE00000000007C000
00000007E00000000003E00000000003F00000000007F00000000009F00000000011F800000000
30F80000000060FC00000000C0FC00000000807C00000001007E00000002003E00000004003F00
000008003F00000010001F00000020001F80000040000F800001C0000FC00007E0001FC0007FF8
00FFFE00FFF800FFFE002E267FA52E>88 D<003E0C00E11E0380BC07007C0E007C1C003C1C0078
380078780078780078F000F0F000F0F000F0F000F0E001E0E001E1E001E1E001E1E003C2E003C2
7005C23019C41820C40FC07818187E971D>97 D<03C0003FC0007FC00007C00007800007800007
80000780000F00000F00000F00000F00001E00001E00001E3F001E41803D80C03E00E03C00703C
0070780070780070780070780070F000F0F000F0F000F0F000F0E001E0E001E0E001C0E00380E0
0380E00700700E00301C001870000FC00014267EA518>I<000003C000003FC000007FC0000007
C00000078000000780000007800000078000000F0000000F0000000F0000000F0000001E000000
1E00003E1E0000E11E000380BC0007007C000E007C001C003C001C007800380078007800780078
007800F000F000F000F000F000F000F000F000E001E000E001E100E001E100E001E100E003C200
E003C2007005C2003019C4001820C4000FC078001A267EA51D>100 D<001F8000F06001C03007
00180E00181C00183C00303800307800E0780380FFFC00F00000F00000F00000F00000F00000E0
0000F000087000107000203000401801800C0E0003F00015187E971A>I<00000F000000308000
0071C00000E3C00000E7C00001E7C00001E3800001E0000003C0000003C0000003C0000003C000
0003C0000007800000FFFE0000FFFE00000780000007800000078000000F0000000F0000000F00
00000F0000000F0000001E0000001E0000001E0000001E0000001E0000003C0000003C0000003C
0000003C0000003C0000007800000078000000780000007800000070000000F0000000F0000000
E0000038E0000078E00000F9C00000F9800000F1800000430000003C0000001A317DA51B>I<00
78000007F800000FF8000000F8000000F0000000F0000000F0000000F0000001E0000001E00000
01E0000001E0000003C0000003C0000003C3F80003CC1C0007900E0007A00F0007C00F0007800F
000F800F000F000F000F000F000F000F001E001E001E001E001E001E001E003C003C003C003C00
3C203C0078203C007820780078407800F0407800708078007080F000310060001E001B267EA520
>104 D<0030007800F800F800700000000000000000000000000000000000000F00118021C021
C041E043C083C083C00780078007800F000F001E001E001E103C103C103C207820384038401880
0F000D267EA513>I<00F00FF00FF001F001E001E001E001E003C003C003C003C0078007800780
07800F000F000F000F001E001E001E001E003C003C003C003C007800784078407840F080F080F0
80710031001E000C267FA511>108 D<1E01FC01F80023060E060C00238807080E00439007900F
0043E007A00F0043C007C00F0087C007800F00878007800F00078007800F00078007800F000F00
0F001E000F000F001E000F000F001E000F000F003C001E001E003C001E001E003C201E001E0078
201E001E0078203C003C0078403C003C00F0403C003C0070803C003C0070807800780031003000
30001E002B187E9731>I<1E01FC0023060E00238807004390078043E0078043C0078087C00780
8780078007800780078007800F000F000F000F000F000F000F001E001E001E001E001E101E003C
101E003C103C003C203C0078203C0038403C0038407800188030000F001C187E9721>I<006000
F000F000F001E001E001E001E003C003C0FFFFFFFF07800780078007800F000F000F000F001E00
1E001E001E003C003C043C043C08780878103810382018400F8010227EA114>116
D<0F000C11801E21C03E21C01E41E00E43C00683C00683C0020780020780020780040F00040F00
040F00081E00081E00081E00101E00101E00201E00400E008007010003820000FC0017187E971B
>118 D<00F81F00030C2080040E43C0080787C0080787C010078780200F0300200F0000000F00
00000F0000001E0000001E0000001E0000001E0000003C0000003C0100003C0100303C01007878
0200F8780400F8780400F09C0800410C30003E07C0001A187E9720>120
D<0F0003001180078021C00F0021C00F0041E00F0043C00F0083C01E0083C01E0007801E000780
1E0007803C000F003C000F003C000F003C001E0078001E0078001E0078001E0078001E00F0001E
00F0000E01F0000E02F0000705E00001F9E0000001E0000001E0000003C0003803C0007C078000
7C070000F80E0000701C00004038000020E000001F80000019237E971B>I<00780100FC0203FE
0403FF9C0601E804001000002000004000008000030000040000080000100000200000C0000100
0002000804001808003017807038FFE0207FC0403F80801E0018187E971A>I
E /Fi 39 122 df<07800FC01FC01FC01FC01FC00F400040004000800080010001000200040004
0008001000600080000A147B8614>44 D<7FFF807FFF80FFFF007FFF0011047A8F18>I<3C7EFE
FEFCFC700707788614>I<00000400000C0000180000380000780000F80001F00007F0003EF000
F8F000C1E00001E00001E00001E00003C00003C00003C00003C000078000078000078000078000
0F00000F00000F00000F00001E00001E00001E00001E00003C00003C00003C00003C0000780000
780000780000780000F00000F00000F00001F000FFFFE0FFFFE0162C78AB22>49
D<00007F00000181C0000600E0000C007000180038003000380060003C0040003C00C1003E0181
003E0181003E0301003E0301003E0301003E0602007C0602007C0604007C060400F8060800F802
3001F001C003E0000003C00000078000000F0000003C00000078000001E00000038000000F0000
001C00000070000000E000000180002003000030060000600C0000600C0000E0180000C0300001
C03FC0038070FC0700603FFF00E00FFE00C007FC00C001F0001F2D7AAB22>I<00000060000000
F0000001E0000001E0000001E0000001E0000003C0000003C0000003C000000780000007800000
078000000F0000000F0000000E0000001E0000001C0000003C0000003800000038000000700000
0070000000E0000000E0000001C00000038000000380000007000000060600000E0F00001C1E00
00181E0000301E0000701E0000E03C0001C03C0003803C0007003C000E0078001C0078003FF078
00FFFE7800C01FF0408001FFE00000FF800000F0000001E0000001E0000001E0000001E0000003
C0000003C0000003C0000003C0000007800000078000000300001C397CAB22>52
D<00007F000001FFC0000781E0000E0070001C0038003800380070001C0060001C00E0001C00E0
001C01E0003801E0003801E0007001F0007001F800E001FC01C000FE038000FF0600007F9C0000
3FF000001FE0000007F800001BFC000061FE0001C0FF0003807F0007003F800E001F801C000F80
3800078038000780700003807000038070000380E0000700E0000700E0000600E0000E0070001C
0070001800780070003800E0001E07C0000FFF000001F800001E2D79AB22>56
D<00003F000001FF800003C1C0000700E0001E0070003C0070003800780078007800F0007801F0
007801E0007803E0007803E0007803E000F807C000F807C000F807C000F807C001F0078001F007
8001F0078003F0078003F0078007E0038007E003800BE001C013E000C027C00060C7C0003F0780
00000F8000000F0000000F0000001E0000001E0000003C0000003800780078007C00F000F800E0
00F801C000E0038000600F0000703C00003FF800000FC000001D2D79AB22>I<00000001800000
00000380000000000380000000000780000000000F80000000000F80000000001FC0000000001F
C00000000037C00000000077C00000000067C000000000C7C000000000C7C00000000187C00000
000187C00000000307C00000000707C00000000607C00000000C07C00000000C07C00000001803
E00000001803E00000003003E00000007003E00000006003E0000000C003E0000000C003E00000
018003E00000018003E0000003FFFFE0000007FFFFE00000060003E000000C0003E000000C0003
F00000180001F00000180001F00000300001F00000700001F00000600001F00000C00001F00000
C00001F00001C00001F00003C00001F0000FC00003F800FFF8003FFFC0FFF8007FFF802A2E7CAD
31>65 D<000000FF001000000FFFC03000003F80F0700000FC0038F00003F0001DE00007C0000F
E0000F800007E0001E000007E0007C000003C00078000003C000F8000003C001F0000003C003E0
0000018007E00000018007C0000001800F80000001801F80000003001F80000000003F00000000
003F00000000003E00000000007E00000000007E00000000007E0000000000FC0000000000FC00
00000000FC0000000000FC0000000000FC0000000000FC0000000000F80000000000F800000018
00F80000003000FC0000003000FC00000030007C00000060007C000000C0003C000000C0003E00
000180001E00000300001F00000600000F80000C000007C00038000003E000F0000000FC03C000
00007FFF000000000FF80000002C2F76AD30>67 D<001FFFFFF800001FFFFFFF000000FC001F80
0000F80007E00000F80001F00000F80000F00000F80000F80001F000007C0001F000007C0001F0
00003C0001F000003E0003E000003E0003E000003E0003E000003E0003E000003E0007C000003E
0007C000003E0007C000003E0007C000003E000F8000007E000F8000007E000F8000007E000F80
00007E001F0000007C001F000000FC001F000000FC001F000000F8003E000001F8003E000001F8
003E000001F0003E000003F0007C000003E0007C000007C0007C000007C0007C00000F8000F800
001F0000F800003E0000F800003C0000F80000F80001F00001F00001F00003E00001F0000F8000
03F0007F0000FFFFFFF80000FFFFFFC000002F2D7CAC32>I<001FFFFFFFF8001FFFFFFFF80000
FC0003F80000F80000F80000F80000780000F80000780000F80000300001F00000300001F00000
300001F00000300001F00000300003E00000300003E00000300003E00180300003E00180300007
C00300000007C00300000007C00300000007C0070000000F800E0000000F801E0000000FFFFE00
00000FFFFE0000001F003C0000001F001C0000001F001C0000001F001C0000003E00180000003E
00180180003E00180180003E00180300007C00000300007C00000300007C00000600007C000006
0000F800000C0000F800000C0000F800001C0000F80000380001F00000380001F00000F80001F0
0001F00003F0000FF000FFFFFFFFE000FFFFFFFFE0002D2D7CAC2D>I<001FFFF8003FFFF00000
FC000000F8000000F8000000F8000000F8000001F0000001F0000001F0000001F0000003E00000
03E0000003E0000003E0000007C0000007C0000007C0000007C000000F8000000F8000000F8000
000F8000001F0000001F0000001F0000001F0000003E0000003E0000003E0000003E0000007C00
00007C0000007C0000007C000000F8000000F8000000F8000000F8000001F0000001F0000001F0
000003F00000FFFFC000FFFFC0001D2D7BAC1A>73 D<001FFC0000003FF8001FFC0000007FF800
00FE0000007E000000DE000000FC000000DE000000FC000000DE000001BC000000DE0000033C00
00019E000003780000019E000006780000019E00000C780000019E00000C780000031E000018F0
0000030F000018F00000030F000030F00000030F000060F00000060F000061E00000060F0000C1
E00000060F0000C1E00000060F000181E000000C0F000303C000000C0F000303C000000C078006
03C000000C07800603C000001807800C0780000018078018078000001807801807800000180780
3007800000300780300F000000300780600F000000300780C00F000000300780C00F0000006003
C1801E0000006003C1801E0000006003C3001E0000006003C6001E000000C003C6003C000000C0
03CC003C000000C003CC003C000000C003D8003C0000018003F000780000018001F00078000003
C001E0007800000FE001E000F80000FFFE01C03FFFE000FFFC01803FFFC0003D2D7BAC3C>77
D<001FFFFFF800001FFFFFFE000000FC001F800000F80007C00000F80003E00000F80003F00000
F80001F00001F00001F00001F00001F00001F00001F80001F00001F80003E00003F00003E00003
F00003E00003F00003E00007E00007C00007E00007C00007C00007C0000F800007C0001F00000F
80003E00000F8000F800000F8003F000000FFFFF8000001F00000000001F00000000001F000000
00001F00000000003E00000000003E00000000003E00000000003E00000000007C00000000007C
00000000007C00000000007C0000000000F80000000000F80000000000F80000000000F8000000
0001F00000000001F00000000001F00000000003F000000000FFFFC0000000FFFF800000002D2D
7CAC2D>80 D<001FFFFFE000001FFFFFFC000000FC007E000000F8001F800000F8000FC00000F8
0007C00000F80003E00001F00003E00001F00003E00001F00003F00001F00003E00003E00007E0
0003E00007E00003E00007E00003E0000FC00007C0000FC00007C0001F800007C0001F000007C0
003C00000F80007800000F8001E000000F800F8000000FFFF80000001F001E0000001F00070000
001F00038000001F0003C000003E0001E000003E0001E000003E0001E000003E0001E000007C00
03E000007C0003E000007C0003E000007C0003E00000F80007E00000F80007E00000F80007E000
00F80007E02001F00007E06001F00007E06001F00007E06003F00007E0C0FFFF8003E080FFFF80
01E100000000007E002C2E7CAC30>82 D<00000FE01000007FF8300000F03C700003C00E700007
8007E0000F0003E0001E0003E0001C0001E0003C0001C000780001C000780001C000780001C000
F800018000F800018000F800018000F800000000F800000000FC000000007F000000007FE00000
003FFC0000003FFF8000000FFFE0000007FFF0000000FFF80000001FF800000001FC00000000FC
000000007C000000007C000000003C000000003C001800003C001800003C001800003C00180000
3C00380000780038000078003800007000380000E0007C0001E0007C0003C0007E000780007780
0F0000E1E03C0000C0FFF80000801FC00000242F7BAD25>I<0FFFFFFFFFC00FFFFFFFFFC01FC0
0FC00FC01E000F8003C01C000F80038018000F80038038000F80018030001F00018030001F0001
8060001F00038060001F00030060003E000300C0003E000300C0003E000300C0003E0003000000
7C00000000007C00000000007C00000000007C0000000000F80000000000F80000000000F80000
000000F80000000001F00000000001F00000000001F00000000001F00000000003E00000000003
E00000000003E00000000003E00000000007C00000000007C00000000007C00000000007C00000
00000F80000000000F80000000000F80000000000F80000000001F00000000001F00000000001F
00000000003F000000003FFFFF0000007FFFFF0000002A2D74AC30>I<000F80000038430000E0
278001C03F0003C01F0007801F000F001F000F001E001E001E001E001E003E001E003C003C007C
003C007C003C007C003C00F8007800F8007800F8007800F8007800F800F060F000F060F000F060
F001F0607001E0C07802E0C03806E080180861800C30730007C01E001B1D789C22>97
D<01F0001FF0003FF00001F00001E00001E00001E00001E00003C00003C00003C00003C0000780
000780000780000780000F00000F0F800F30E00F40701E80701F00381F00381E003C3C003C3C00
3C3C003C3C003C78007C78007C78007C78007CF000F8F000F8F000F8F000F0F001F0F001E0E003
E0F003C0700780700700300E00381C001C700007C000162E78AD1F>I<0007F0001C1C00700600
E00601C00F03801F07801F0F001E1F001C1E00003E00003C00007C00007C00007C0000F80000F8
0000F80000F80000F80000F80000F8000478000C78001C3800383800601C01C00E070003F80018
1D789C1F>I<0000007800000FF800001FF8000000F8000000F0000000F0000000F0000000F000
0001E0000001E0000001E0000001E0000003C0000003C0000003C0000003C000000780000F8780
0038478000E0278001C03F0003C01F0007801F000F001F000F001E001E001E001E001E003E001E
003C003C007C003C007C003C007C003C00F8007800F8007800F8007800F8007800F800F060F000
F060F000F060F001F0607001E0C07802E0C03806E080180861800C30730007C01E001D2E78AD22
>I<0007E0003C1800700C01E00C03C0060780060F00060F000C1E000C3E00183E00307C01E07F
FF007C00007C0000780000F80000F80000F80000F8000078000078000478000C78001C3800381C
00600C01C006070001F800171D789C1F>I<000001F00000071800000E1C00001C3C00001C7C00
003C7C00003C3800003800000078000000780000007800000078000000F0000000F0000000F000
0000F0000000F000003FFFC0003FFFC00001E0000001E0000001E0000003C0000003C0000003C0
000003C0000003C0000003C0000007800000078000000780000007800000078000000F0000000F
0000000F0000000F0000000F0000001E0000001E0000001E0000001E0000003E0000003C000000
3C0000003C0000003C00000078000000780000007800000070000000F0000070F00000F8E00000
F8E00000F1C00000E1800000630000003E0000001E3B81AD14>I<0000F80000038430000E0278
001C03F0003C01F0007801F000F001F000F001E001E001E001E001E003E001E003C003C007C003
C007C003C007C003C00F8007800F8007800F8007800F8007800F800F000F000F000F000F000F00
1F0007001E0007803E0003807E0001809E0000C33C00007C3C0000003C0000003C000000780000
00780000007800000078000000F0007000E000F801E000F803C000F0070000E01E00003FF00000
1D2A7C9C1F>I<001E000003FE000007FE0000003E0000003C0000003C0000003C0000003C0000
0078000000780000007800000078000000F0000000F0000000F0000000F0000001E0000001E0FC
0001E3070001EC038003D803C003F003C003E003C003E003C007C003C007C003C0078003C00780
03C00F0007800F0007800F0007800F000F001E000F001E000F001E001E001E001E003C001E0C3C
003C0C3C003C0C3C003C0878003818780038107800383078003820F00018C060000F801E2E7BAD
22>I<000E001F001F001E001C0000000000000000000000000000000000000000000003C00C60
187010703078607860F0C0F0C0F0C1E001E001E003C003C003C00780078007800F000F061E061E
061E0C1C0C1C081C181C300C600780102D7AAC14>I<00780FF80FF800F800F000F000F000F001
E001E001E001E003C003C003C003C007800780078007800F000F000F000F001E001E001E001E00
3C003C003C003C007800780078007800F060F060F060F060E0C0E0C0E080E18073001E000D2E79
AD11>108 D<0F003F001F800018C0C1C060E00030E300E180700030E600F300780060FC00F600
780060F800F400780060F800FC007800C1F000F8007800C1F000F8007800C1E000F000780001E0
00F000780003C001E000F00003C001E000F00003C001E000F00003C001E001E000078003C001E0
00078003C001E000078003C003C000078003C003C0000F00078003C1800F0007800781800F0007
800781800F0007800781001E000F000703001E000F000702001E000F000706001E000F00070400
3C001E0003180018000C0001F000311D7A9C36>I<0F003F0018C0C1C030E300E030E600F060FC
00F060F800F060F800F0C1F000F0C1F000F0C1E000F001E000F003C001E003C001E003C001E003
C003C0078003C0078003C007800780078007800F0007830F000F030F000F030F000F021E000E06
1E000E041E000E0C1E000E083C000630180003E0201D7A9C25>I<0007E000001C380000701C00
00E00E0001C00F0003800700078007800F0007801F0007801E0007803E000F803C000F807C000F
807C000F807C000F80F8001F00F8001F00F8001F00F8003E00F8003E00F8003C00F00078007800
78007800F0003801E0003803C0001C0700000E1E000003F00000191D789C22>I<007803F00000
C60E18000187180C000187300E000307E007000307C007000307800780060F000780060F000780
060F000780000F000780001E000F80001E000F80001E000F80001E000F80003C001F00003C001F
00003C001F00003C001E000078003E000078003C000078007800007800780000F800F00000FC00
E00000FC01C00000F603800001E30E000001E0F8000001E000000001E000000003C000000003C0
00000003C000000003C000000007800000000780000000078000000007800000000F80000000FF
FC000000FFF8000000212A7F9C22>I<0F007E0018C1818030E201C030E403C060FC07C060F807
C060F00380C1F00000C1E00000C1E0000001E0000003C0000003C0000003C0000003C000000780
00000780000007800000078000000F0000000F0000000F0000000F0000001E0000001E0000001E
0000001E0000003C000000180000001A1D7A9C1C>114 D<001FC000707000C01801800803001C
07003C07003C0F00380F00000F00000FC00007FC0007FF0003FF8001FFC0003FE00003E00001E0
0000E03000E07800E0F800E0F800C0F001C0C00180C00300600600381C000FE000161D7A9C1B>
I<001800003C00003C0000780000780000780000780000F00000F00000F00000F00001E000FFFF
C0FFFFC001E00003C00003C00003C00003C0000780000780000780000780000F00000F00000F00
000F00001E00001E00001E00001E00003C03003C03003C03003C0600380400380C003818003810
001C6000078000122979A816>I<03C000300C60007818700078307000F0307800F0607800F060
7800F0C0F001E0C0F001E0C1E001E001E001E001E003C003C003C003C003C003C003C007800780
0780078007800780078007800F000F060F000F060F000F060F000F0607001E0C07003E0C07802E
0C0380C61801C18730007E01E01F1D7A9C24>I<03C001800C6003C0187007E0307007E0307803
E0607801E0607801C0C0F001C0C0F001C0C1E000C001E001C001E0018003C0018003C0018003C0
018007800300078003000780030007800600070006000F0004000F000C000F0008000700180007
001000038020000380400001E18000003E00001B1D7A9C1F>I<03C000600C0C6000F01E187000
F03F307001E03F307801E01F607801E00F607801E00EC0F003C00EC0F003C00EC1E003C00601E0
03C00E01E007800C03C007800C03C007800C03C007800C07800F001807800F001807800F001807
800F001007001E00300F001E00300F001E006007001E006007001E004007803E00C003802F0180
018047010000E1838600003F00FC00281D7A9C2C>I<03C000600C6000F0187000F0307001E030
7801E0607801E0607001E0C0F003C0C0F003C0C1E003C001E003C001E0078003C0078003C00780
03C0078007800F0007800F0007800F0007800F000F001E000F001E000F001E000F001E000F003C
0007003C0007007C000380BC0001C37800007C780000007800000078000000F0000000F0001C01
E0003C01E0007C03C0007C03800078070000600E0000301C0000187000000FC000001C2A7A9C20
>121 D E /Fj 78 125 df<0000FF01FC00000780C78600001E003E0F00007800FE1F8000F801
FC1F8001F001FC1F8001E001F80F0003E000F8060003E000F8000003E000F8000003E000F80000
03E000F8000003E000F8000003E000F8000003E000F8000003E000F8000003E000F80000FFFFFF
FFF000FFFFFFFFF00003E000F8000003E000F8000003E000F8000003E000F8000003E000F80000
03E000F8000003E000F8000003E000F8000003E000F8000003E000F8000003E000F8000003E000
F8000003E000F8000003E000F8000003E000F8000003E000F8000003E000F8000003E000F80000
03E000F8000003E000F8000003E000F8000003E000F8000003E000F8000003E000F8000007F001
FC00007FFF1FFFE0007FFF1FFFE000292E7FAD27>11 D<0001FF0000000F01C000003C00600000
F800700001F000F80003E001F80003C001F80007C001F80007C000F00007C000000007C0000000
07C000000007C000000007C000000007C000000007C000000007C0000000FFFFFFF800FFFFFFF8
0007C001F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000
F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C0
00F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007
C000F8000FE001FC00FFFE1FFFC0FFFE1FFFC0222E7FAD25>I<0001FFB800000F00F800003C00
F80000F801F80001F001F80003E001F80003C000F80007C000F80007C000F80007C000F80007C0
00F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F800FFFFFFF800FF
FFFFF80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F800
07C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F8
0007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000
F80007C000F8000FE001FC00FFFE1FFFC0FFFE1FFFC0222E7FAD25>I<0001FE003FC000000F01
C1E07000003C006780180000F8007E001C0001F000FE003E0003E001FC007E0003C001F8007E00
07C001F8007E0007C000F8003C0007C000F800000007C000F800000007C000F800000007C000F8
00000007C000F800000007C000F800000007C000F800000007C000F8000000FFFFFFFFFFFE00FF
FFFFFFFFFE0007C000F8007E0007C000F8003E0007C000F8003E0007C000F8003E0007C000F800
3E0007C000F8003E0007C000F8003E0007C000F8003E0007C000F8003E0007C000F8003E0007C0
00F8003E0007C000F8003E0007C000F8003E0007C000F8003E0007C000F8003E0007C000F8003E
0007C000F8003E0007C000F8003E0007C000F8003E0007C000F8003E0007C000F8003E0007C000
F8003E0007C000F8003E0007C000F8003E000FE001FC007F00FFFE1FFFC7FFF0FFFE1FFFC7FFF0
342E7FAD37>I<3803807C07C0FE0FE0FE0FE0FF0FF07D07D03903900100100100100100100100
1002002002002002002004004004004008008010010020020040040014147EAD21>34
D<01F0000001800718000003800C04000007801C0700000F00180380001E00380160007E007801
9C039C00700183FC3800700180007800F000C0007000F000C000E000F000C001E000F000C001C0
00F000C0038000F000C0078000F000C0070000F000C00E0000F000C00E00007001801C00007001
803C0000780180380000380100700000180300F000001C0600E000000C0401C00000071803C000
0001F003800000000007001F0000000F00718000000E00C04000001C01C06000003C0180300000
380380100000700780180000700700180000E00700180001E00F000C0001C00F000C0003800F00
0C0007800F000C0007000F000C000E000F000C001E000F000C001C000F000C0038000F000C0078
0007001800700007001800E00007801801E00003801001C00001803003800001C06003800000C0
40070000007180030000001F002E367CB137>37 D<387CFEFEFF7D390101010102020204040810
204008147BAD12>39 D<00020004000800100030006000C001C001800380030007000F000E000E
001E001C003C003C003C00380078007800780078007800F800F000F000F000F000F000F000F000
F000F000F000F000F000F000F8007800780078007800780038003C003C003C001C001E000E000E
000F00070003000380018001C000C00060003000100008000400020F437AB11A>I<8000400020
00100018000C000600070003000380018001C001E000E000E000F000700078007800780038003C
003C003C003C003C003E001E001E001E001E001E001E001E001E001E001E001E001E001E003E00
3C003C003C003C003C0038007800780078007000F000E000E001E001C001800380030007000600
0C00180010002000400080000F437CB11A>I<387CFEFEFF7D3901010101020202040408102040
08147B8612>44 D<FFFFFFFFFFFFFFFF10047F9016>I<387CFEFEFE7C3807077B8612>I<000003
00000700000700000E00000E00000E00001C00001C00001C000038000038000038000070000070
0000700000E00000E00000E00001C00001C00001C0000380000380000380000700000700000700
000E00000E00000E00001C00001C00001C00003800003800003800003800007000007000007000
00E00000E00000E00001C00001C00001C0000380000380000380000700000700000700000E0000
0E00000E00001C00001C00001C0000380000380000380000700000700000700000E00000E00000
C0000018437CB121>I<003FC00000F0F00003C03C0007801E000F000F000F000F001E0007801E
0007803E0007C03C0003C07C0003E07C0003E07C0003E07C0003E07C0003E0FC0003F0FC0003F0
FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003
F0FC0003F0FC0003F0FC0003F0FC0003F07C0003E07C0003E07C0003E07C0003E03E0007C03E00
07C01E0007801E0007800F000F000F000F0007801E0003C03C0000F0F000003FC0001C2D7EAB21
>I<00180000380000F80003F800FFF800FCF80000F80000F80000F80000F80000F80000F80000
F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000
F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000
F80000F80000F80001FC00FFFFF8FFFFF8152C7AAB21>I<007F000003FFE0000703F8000C00FC
0018007E0030003F0060003F0060001F8078001F80FC001FC0FE001FC0FE000FC0FE000FC0FE00
0FC07C001FC000001FC000001F8000001F8000003F0000003F0000007E0000007C000000F80000
00F0000001E0000003C0000003800000070000000E0000001C0000003800000070000000600000
00C000C0018000C0030000C0060001800C000180180003801FFFFF803FFFFF807FFFFF00FFFFFF
00FFFFFF001A2C7DAB21>I<007F800003FFE0000F81F8001C007C0038003E0038003F007E003F
007E003F807F001F807E001F803E001F801C003F8000003F0000003F0000003E0000007E000000
7C000000F0000001E0000007800000FF00000001E0000000F80000007C0000003E0000003F0000
003F0000001F8000001F8000001FC000001FC038001FC07C001FC0FE001FC0FE001FC0FE001F80
FC001F80F8003F8060003F0030003E0038007E001C00F8000F81F00003FFE000007F00001A2D7D
AB21>I<00000C0000001C0000001C0000003C0000007C0000007C000000FC000001FC0000017C
0000037C0000067C0000047C00000C7C0000187C0000307C0000307C0000607C0000C07C000080
7C0001807C0003007C0002007C0006007C000C007C0008007C0018007C0030007C0020007C0060
007C00C0007C00FFFFFFF0FFFFFFF000007C0000007C0000007C0000007C0000007C0000007C00
00007C0000007C0000007C000000FE00001FFFF0001FFFF01C2C7EAB21>I<180006001F803C00
1FFFF8001FFFF0001FFFE0001FFFC0001FFF000018700000180000001800000018000000180000
0018000000180000001800000018000000183F800018C0E000190070001A003C001C001E001800
1E0000001F0000000F0000000F8000000F8000000FC000000FC000000FC000000FC078000FC0FC
000FC0FC000FC0FC000FC0FC000F80F8000F8060001F8060001F0070001E0030003E0018007C00
0E00F8000781F00003FFC000007E00001A2D7DAB21>I<0007F000001FFC00007C0E0000F00300
01E00F8003C01F8007801F800F001F800F001F801E000F001E0000003E0000003E0000007C0000
007C0000007C0000007C1F8000FC60E000FC807000FD003800FD001C00FE001E00FE001F00FE00
0F80FE000F80FC000F80FC000FC0FC000FC0FC000FC0FC000FC07C000FC07C000FC07C000FC07C
000FC07C000FC03C000F803E000F801E000F001E001F000F001E000F003C000780780003E0F000
00FFE000003F80001A2D7DAB21>I<300000003C0000003FFFFFE03FFFFFE03FFFFFC07FFFFFC0
7FFFFF80700003006000030060000600C0000C00C0001800C00018000000300000006000000060
000000C0000001800000018000000300000007000000060000000E0000000E0000001E0000001C
0000003C0000003C0000003C0000007C0000007800000078000000F8000000F8000000F8000000
F8000000F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000
00F000001B2E7CAC21>I<007F800001FFE00007C0F8000F003C001E001E001C000F0038000F00
380007807800078078000780780007807C0007807C0007007E000F003F800E003FC01C001FF038
000FF8700007FEE00003FF800001FFC000007FE00000FFF800038FFC000707FE000E01FF001C00
FF003C003F8078001F8078000FC0F00007C0F00007C0F00003C0F00003C0F00003C0F00003C0F0
00038078000380780007003C000F001E000E000F003C0007C0F80001FFE000007F80001A2D7DAB
21>I<003F000001FFC00003C0F000078078000F003C001E003C003E001E003E001E007C001F00
7C000F00FC000F80FC000F80FC000F80FC000F80FC000F80FC000FC0FC000FC0FC000FC0FC000F
C07C000FC07C001FC07C001FC03E001FC01E001FC00E002FC007002FC003804FC001C18FC0007E
0F8000000F8000000F8000000F8000001F0000001F0000001F003C001E007E003E007E003C007E
0078007E0070007C00F0003001E0001C0780000FFF000003FC00001A2D7DAB21>I<387CFEFEFE
7C38000000000000000000000000000000387CFEFEFE7C38071D7B9C12>I<387CFEFEFE7C3800
0000000000000000000000000000387CFCFEFE7E3A02020202040404080810102040072A7B9C12
>I<00000700000000000700000000000700000000000F80000000000F80000000001FC0000000
001FC0000000001FC0000000003FE00000000037E00000000037E00000000067F00000000063F0
0000000063F000000000C1F800000000C1F800000000C1F80000000180FC0000000180FC000000
0180FC00000003007E00000003007E00000007007F00000006003F00000006003F0000000E003F
8000000C001F8000000C001F80000018001FC000001FFFFFC000001FFFFFC00000300007E00000
300007E00000300007E00000600003F00000600003F00000600003F00000C00001F80000C00001
F80001C00001FC0001800000FC0003800000FC0003C00000FE000FE00001FF00FFFC001FFFF8FF
FC001FFFF82D2E7EAD32>65 D<FFFFFFF800FFFFFFFF0003F8001FC001F80007E001F80003F001
F80001F801F80001FC01F80000FC01F80000FE01F80000FE01F80000FE01F80000FE01F80000FE
01F80000FE01F80000FC01F80001FC01F80001F801F80003F001F80007E001F8000FC001F8003F
0001FFFFFC0001F8001F8001F80007E001F80003F001F80001F801F80000FC01F80000FE01F800
007E01F800007E01F800007F01F800007F01F800007F01F800007F01F800007F01F800007F01F8
00007E01F80000FE01F80000FC01F80001FC01F80003F801F80007F003F8001FE0FFFFFFFF80FF
FFFFFC00282D7EAC2F>I<00003FC0020001FFF8060007E01E0E001F80071E007E00019E00F800
00FE01F000007E03E000003E07E000003E07C000001E0FC000001E1F8000000E1F8000000E3F00
00000E3F000000067F000000067F000000067E000000007E00000000FE00000000FE00000000FE
00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007E00000000
7E000000007F000000007F000000063F000000063F000000061F800000061F8000000C0FC00000
0C07C000000C07E000001803E000003801F000003000FC000060007E0001C0001F8003800007F0
1E000001FFF80000003FE000272F7CAD30>I<FFFFFFF00000FFFFFFFE000003F8003F800001F8
0007E00001F80003F00001F80000F80001F800007C0001F800003E0001F800003F0001F800001F
0001F800001F8001F800000F8001F800000FC001F800000FC001F8000007E001F8000007E001F8
000007E001F8000007E001F8000007F001F8000007F001F8000007F001F8000007F001F8000007
F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007E001F8
000007E001F8000007E001F800000FC001F800000FC001F800000FC001F800001F8001F800001F
8001F800003F0001F800003E0001F800007C0001F80000F80001F80001F00001F80007E00003F8
003F8000FFFFFFFE0000FFFFFFF800002C2D7EAC33>I<FFFFFFFFF0FFFFFFFFF003F80007F001
F80001F001F80000F801F800007801F800003801F800003801F800001801F800001801F8000018
01F800001C01F800000C01F800600C01F800600C01F800600001F800600001F800600001F800E0
0001F800E00001F803E00001FFFFE00001FFFFE00001F803E00001F800E00001F800E00001F800
600001F800600001F800600301F800600301F800600301F800000601F800000601F800000601F8
00000601F800000E01F800000C01F800001C01F800001C01F800003C01F800007C01F80000FC03
F80007F8FFFFFFFFF8FFFFFFFFF8282D7EAC2D>I<FFFFFFFFE0FFFFFFFFE003F8000FE001F800
03E001F80000F001F80000F001F800007001F800007001F800003001F800003001F800003001F8
00003801F800001801F800601801F800601801F800600001F800600001F800600001F800E00001
F800E00001F803E00001FFFFE00001FFFFE00001F803E00001F800E00001F800E00001F8006000
01F800600001F800600001F800600001F800600001F800000001F800000001F800000001F80000
0001F800000001F800000001F800000001F800000001F800000001F800000001F800000003FC00
0000FFFFF80000FFFFF80000252D7EAC2B>I<00003FE001000001FFFC03000007F00E0700001F
80038F00003E0000CF0000FC00007F0001F800003F0003F000001F0007E000001F0007C000000F
000FC000000F001F80000007001F80000007003F00000007003F00000003007F00000003007F00
000003007E00000000007E0000000000FE0000000000FE0000000000FE0000000000FE00000000
00FE0000000000FE0000000000FE0000000000FE0000000000FE00003FFFF87E00003FFFF87E00
00007F807F0000003F007F0000003F003F0000003F003F0000003F001F8000003F001F8000003F
000FC000003F0007C000003F0007E000003F0003F000003F0001F800007F0000FC00007F00003E
0000CF00001F800187000007F00F03000001FFFC010000003FE000002D2F7CAD34>I<FFFFF07F
FFF8FFFFF07FFFF803FC0001FE0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001FFFFFFFC0001FFFFFFFC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001
F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07FFFF82D2D7EAC32>I<
FFFFF0FFFFF003FC0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80003FC00FFFFF0FFFFF0142D7EAC18>I<01FFFFE001FFFFE00001FE000000
FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC0000
00FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC
000000FC003800FC007C00FC00FE00FC00FE00FC00FE00F800FC01F8007801F0006001F0003003
E0001807C0000E0F000001FC00001B2E7DAC22>I<FFFFF001FFF8FFFFF001FFF803FC00007F80
01F800003E0001F80000380001F80000700001F80000600001F80000C00001F80003800001F800
07000001F8000E000001F8001C000001F80038000001F80070000001F800E0000001F801C00000
01F80380000001F80700000001F80F80000001F81FC0000001F83FC0000001F877E0000001F8E7
F0000001F9C3F0000001FB81F8000001FF01FC000001FE00FC000001FC007E000001F8007F0000
01F8003F000001F8001F800001F8001F800001F8000FC00001F8000FE00001F80007E00001F800
03F00001F80003F80001F80001F80001F80000FC0001F80000FE0001F800007E0001F800007F00
03FC0000FFC0FFFFF007FFFCFFFFF007FFFC2E2D7EAC34>I<FFFFF80000FFFFF8000003FC0000
0001F800000001F800000001F800000001F800000001F800000001F800000001F800000001F800
000001F800000001F800000001F800000001F800000001F800000001F800000001F800000001F8
00000001F800000001F800000001F800000001F800000001F800000001F800000001F800000001
F800000001F800000001F800003001F800003001F800003001F800003001F800006001F8000060
01F800006001F800006001F80000E001F80000E001F80001E001F80003E001F80007E001F8000F
C003F8007FC0FFFFFFFFC0FFFFFFFFC0242D7EAC2A>I<FFF80000001FFFFFFC0000003FFF03FC
0000003FC001FC0000003F8001BE0000006F8001BE0000006F80019F000000CF80019F000000CF
80019F000000CF80018F8000018F80018F8000018F80018F8000018F800187C000030F800187C0
00030F800183E000060F800183E000060F800183E000060F800181F0000C0F800181F0000C0F80
0180F800180F800180F800180F800180F800180F8001807C00300F8001807C00300F8001803E00
600F8001803E00600F8001803E00600F8001801F00C00F8001801F00C00F8001801F00C00F8001
800F81800F8001800F81800F80018007C3000F80018007C3000F80018007C3000F80018003E600
0F80018003E6000F80018001FC000F80018001FC000F80018001FC000F80018000F8000F8003C0
00F8000F800FF00070001FC0FFFF007007FFFFFFFF007007FFFF382D7EAC3D>I<FFF80007FFF8
FFFC0007FFF801FE00007F8001FE00001E0001BF00000C0001BF80000C00019F80000C00018FC0
000C00018FE0000C000187E0000C000183F0000C000183F8000C000181F8000C000180FC000C00
0180FE000C0001807E000C0001803F000C0001803F800C0001801F800C0001800FC00C0001800F
E00C00018007E00C00018007F00C00018003F00C00018001F80C00018001FC0C00018000FC0C00
0180007E0C000180007F0C000180003F0C000180001F8C000180001FCC000180000FCC00018000
07EC0001800007FC0001800003FC0001800001FC0001800001FC0001800000FC00018000007C00
018000007C0003C000003C000FF000001C00FFFF00001C00FFFF00000C002D2D7EAC32>I<0000
7FC000000003C0780000000F001E0000003C0007800000780003C00000F00001E00001E00000F0
0003E00000F80007C000007C000FC000007E000F8000003E001F8000003F001F0000001F003F00
00001F803F0000001F807F0000001FC07E0000000FC07E0000000FC07E0000000FC0FE0000000F
E0FE0000000FE0FE0000000FE0FE0000000FE0FE0000000FE0FE0000000FE0FE0000000FE0FE00
00000FE0FE0000000FE0FE0000000FE07E0000000FC07F0000001FC07F0000001FC03F0000001F
803F0000001F803F8000003F801F8000003F000F8000003E000FC000007E0007C000007C0003E0
0000F80001F00001F00000F80003E00000780003C000003E000F8000000F001E00000003C07800
0000007FC000002B2F7CAD34>I<FFFFFFE000FFFFFFFC0003F8007F0001F8000FC001F80007E0
01F80003F001F80003F001F80001F801F80001F801F80001FC01F80001FC01F80001FC01F80001
FC01F80001FC01F80001FC01F80001F801F80001F801F80003F001F80003E001F80007C001F800
0F8001F8007F0001FFFFF80001F800000001F800000001F800000001F800000001F800000001F8
00000001F800000001F800000001F800000001F800000001F800000001F800000001F800000001
F800000001F800000001F800000001F800000001F800000001F800000003FC000000FFFFF00000
FFFFF00000262D7EAC2D>I<00007FC000000003C0780000000F001E0000003E000F8000007800
03C00000F00001E00001F00001F00003E00000F80007C000007C000FC000007E000F8000003E00
1F8000003F001F8000003F003F0000001F803F0000001F807F0000001FC07F0000001FC07E0000
000FC07E0000000FC0FE0000000FE0FE0000000FE0FE0000000FE0FE0000000FE0FE0000000FE0
FE0000000FE0FE0000000FE0FE0000000FE0FE0000000FE0FE0000000FE07E0000000FC07F0000
001FC07F0000001FC03F0000001F803F0000001F803F0000001F801F8000003F000F8000003E00
0FC01F007E0007C020807C0003E04040F80001F08021F00000F08011E00000788013C000003C80
1F8000000F401E00000003E078002000007FCC00200000000C00200000000E00200000000E0060
0000000F00E000000007C1C000000007FFC000000007FFC000000007FF8000000003FF80000000
01FF0000000000FE00000000007C002B3B7CAD34>I<FFFFFFC00000FFFFFFF8000003F800FE00
0001F8001F800001F8000FC00001F80007E00001F80003F00001F80003F80001F80001F80001F8
0001FC0001F80001FC0001F80001FC0001F80001FC0001F80001FC0001F80001FC0001F80001F8
0001F80003F00001F80003F00001F80007E00001F8000F800001F8001F000001F800F8000001FF
FFC0000001F800F0000001F8003C000001F8001E000001F8000F800001F8000F800001F80007C0
0001F80007C00001F80007E00001F80007E00001F80007E00001F80007E00001F80007F00001F8
0007F00001F80007F00001F80007F00001F80007F00C01F80007F00C01F80003F80C01F80003F8
0C03FC0001F818FFFFF000FC18FFFFF0007E30000000000FC02E2E7EAC31>I<007F002001FFE0
600780F8E00E001CE01C000FE0380007E0380003E0700001E0700001E0F00000E0F00000E0F000
00E0F0000060F8000060F8000060FC0000007E0000007F0000007FE000003FFE00001FFFE0000F
FFF80007FFFE0003FFFF0000FFFF80000FFFC00000FFC000001FE0000007E0000003E0000001F0
000001F0C00001F0C00000F0C00000F0C00000F0E00000F0E00000E0E00000E0F00001E0F00001
C0F80003C0FE000380E7000F00E3E01E00C0FFF800801FE0001C2F7CAD25>I<7FFFFFFFFFC07F
FFFFFFFFC07F001F801FC07C001F8003C070001F8001C070001F8001C060001F8000C060001F80
00C0E0001F8000E0E0001F8000E0C0001F800060C0001F800060C0001F800060C0001F800060C0
001F80006000001F80000000001F80000000001F80000000001F80000000001F80000000001F80
000000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000
001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000001F80
000000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000000
001F80000000001F80000000003FC00000003FFFFFC000003FFFFFC0002B2D7EAC30>I<FFFFF0
07FFF8FFFFF007FFF803FC00007F8001F800001E0001F800000C0001F800000C0001F800000C00
01F800000C0001F800000C0001F800000C0001F800000C0001F800000C0001F800000C0001F800
000C0001F800000C0001F800000C0001F800000C0001F800000C0001F800000C0001F800000C00
01F800000C0001F800000C0001F800000C0001F800000C0001F800000C0001F800000C0001F800
000C0001F800000C0001F800000C0001F800000C0001F800000C0001F800000C0001F800000C00
01F800000C0000F80000180000F80000180000FC00001800007C00003000003C00003000003E00
006000001F0000C000000F800180000007C00700000001F01E000000007FF8000000001FE00000
2D2E7EAC32>I<FFFFC07FFFC01FFF80FFFFC07FFFC01FFF8007F80003FC0003FC0003F00003F8
0000F00003F00001F80000E00003F00001F80000600001F80001F80000C00001F80001FC0000C0
0001F80001FC0000C00000FC0001FC0001800000FC00037E0001800000FC00037E00018000007E
00037E00030000007E00063F00030000007E00063F00030000007F00063F00070000003F000C1F
80060000003F000C1F80060000003F800C1F800E0000001F801C1FC00C0000001F80180FC00C00
00001F80180FC00C0000000FC0380FE0180000000FC03007E0180000000FC03007E01800000007
E03007E03000000007E06003F03000000007E06003F03000000003F06003F06000000003F0C001
F86000000003F0C001F86000000001F8C001F8C000000001F98000FCC000000001F98000FCC000
000001FD8000FDC000000000FF00007F8000000000FF00007F8000000000FF00007F8000000000
7F00007F00000000007E00003F00000000007E00003F00000000003E00003E00000000003C0000
1E00000000003C00001E00000000001C00001C00000000001800000C000000412E7FAC44>87
D<7FFFE00FFFF07FFFE00FFFF001FF8001FF0000FE0000F800007F0000F000007F0000E000003F
8000C000001F80018000001FC0038000000FE00300000007E00600000007F00E00000003F80C00
000001F81800000001FC3800000000FE30000000007E60000000007FE0000000003FC000000000
1F80000000001FC0000000000FE00000000007E0000000000FF0000000000FF80000000019F800
00000039FC0000000030FE00000000607E00000000E07F00000000C03F80000001803F80000003
801FC0000003000FE0000006000FE000000E0007F000000C0003F80000180003F80000380001FC
0000300000FC0000700000FE0001F000007F0007FC0001FF80FFFF000FFFFEFFFF000FFFFE2F2D
7FAC32>I<FFFFC0003FFEFFFFC0003FFE07FC00000FF003F8000007C001FC0000070000FC0000
070000FE00000600007F00000C00007F00001C00003F80001800001FC0003800001FC000300000
0FE00060000007E000E0000007F000C0000003F801C0000003F80180000001FC0300000000FE07
00000000FE06000000007F0E000000003F0C000000003F98000000001FD8000000001FF0000000
000FF00000000007E00000000007E00000000007E00000000007E00000000007E00000000007E0
0000000007E00000000007E00000000007E00000000007E00000000007E00000000007E0000000
0007E00000000007E00000000007E00000000007E0000000000FF000000003FFFFC0000003FFFF
C0002F2D7FAC32>I<020020040040080080100100200200200200400400400400400400800800
8008008008008008009C09C0BE0BE0FF0FF07F07F07F07F03E03E01C01C0141476AD21>92
D<00FF00000701E0000C00F0001E0078003F003C003F003E003F001F003F001F000C001F000000
1F0000001F0000001F000007FF00007E1F0003F01F000FC01F001F801F003F001F007E001F007E
001F0CFC001F0CFC001F0CFC001F0CFC002F0CFC002F0C7E004F0C3E0087981F8303F003FC01E0
1E1D7E9C21>97 D<07C0000000FFC0000000FFC00000000FC000000007C000000007C000000007
C000000007C000000007C000000007C000000007C000000007C000000007C000000007C0000000
07C000000007C000000007C000000007C1FC000007C707800007D801E00007F000F00007E00078
0007C0003C0007C0003E0007C0003E0007C0001F0007C0001F0007C0001F0007C0001F8007C000
1F8007C0001F8007C0001F8007C0001F8007C0001F8007C0001F8007C0001F0007C0001F0007C0
003F0007C0003E0007C0003C0007C0007C0007E000780007B000F000071801C000070607800006
01FC0000212E7FAD25>I<001FE00000F0380003C00C0007801E000F003F001F003F003E003F00
3E003F007E000C007C0000007C000000FC000000FC000000FC000000FC000000FC000000FC0000
00FC0000007C0000007C0000007E0000003E0001803E0001801F0003000F0003000780060003C0
0C0000F03000001FC000191D7E9C1E>I<000001F00000003FF00000003FF000000003F0000000
01F000000001F000000001F000000001F000000001F000000001F000000001F000000001F00000
0001F000000001F000000001F000000001F000000001F000001FC1F00000F031F00001C00DF000
078007F0000F0003F0001F0001F0001E0001F0003E0001F0007E0001F0007C0001F0007C0001F0
00FC0001F000FC0001F000FC0001F000FC0001F000FC0001F000FC0001F000FC0001F0007C0001
F0007C0001F0007C0001F0003E0001F0003E0001F0001E0003F0000F0003F000078007F00003C0
19F80000F071FF80001FC1FF80212E7EAD25>I<003F800000E0F0000380780007003C000F001E
001E001E003E001F003E000F007C000F807C000F807C000F80FC000F80FFFFFF80FC000000FC00
0000FC000000FC000000FC0000007C0000007C0000007C0000003E0001803E0001801E0003000F
0003000780060003C01C0000F07000001FC000191D7E9C1E>I<000FE0003C3000707801F0FC01
E0FC03E0FC07C07807C03007C00007C00007C00007C00007C00007C00007C00007C00007C000FF
FF80FFFF8007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007
C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0000F
E000FFFF00FFFF00162E7FAD14>I<000001E0007F061001C1C8780380F078070070780F007830
1E003C001E003C003E003E003E003E003E003E003E003E003E003E001E003C001E003C000F0078
00070070000780E0000DC1C000087F0000180000001800000018000000180000001C0000001E00
00000FFFF0000FFFFE0007FFFF8003FFFFC01E001FC0380003E0780001E0700000F0F00000F0F0
0000F0F00000F0F00000F0780001E0380001C01C0003800F000F0003C03C00007FE0001D2C7E9D
21>I<07C0000000FFC0000000FFC00000000FC000000007C000000007C000000007C000000007
C000000007C000000007C000000007C000000007C000000007C000000007C000000007C0000000
07C000000007C000000007C0FF000007C303C00007C401E00007C801F00007D000F00007D000F8
0007E000F80007E000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000
F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C0
00F80007C000F80007C000F80007C000F80007C000F8000FE001FC00FFFE1FFFC0FFFE1FFFC022
2E7FAD25>I<07000F801FC01FC01FC00F80070000000000000000000000000000000000000007
C0FFC0FFC00FC007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C00FE0FFFCFFFC0E2D7FAC12>I<000E00001F00003F80003F80003F
80001F00000E00000000000000000000000000000000000000000000000000000000000F8001FF
8001FF80001F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F
80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F
80000F80000F80000F80000F80000F80000F80300F80780F80FC0F00FC1F00FC1E00783C003078
000FE000113A83AC14>I<07C00000FFC00000FFC000000FC0000007C0000007C0000007C00000
07C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C0000007C000
0007C03FFC07C03FFC07C01FE007C00F8007C00E0007C01C0007C0380007C0700007C0E00007C1
C00007C3800007C7800007CFC00007DBE00007F1E00007E1F00007C0F80007C0780007C03C0007
C03E0007C01F0007C00F0007C00F8007C007C007C007C007C003E00FE007F8FFFE1FFFFFFE1FFF
202E7FAD23>I<07C0FFC0FFC00FC007C007C007C007C007C007C007C007C007C007C007C007C0
07C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C007C007C00FE0FFFEFFFE0F2E7FAD12>I<07C0FF001FE000FFC303C0
607800FFC401E0803C000FC801F1003E0007D000F2001E0007D000FA001F0007E000FC001F0007
E000FC001F0007C000F8001F0007C000F8001F0007C000F8001F0007C000F8001F0007C000F800
1F0007C000F8001F0007C000F8001F0007C000F8001F0007C000F8001F0007C000F8001F0007C0
00F8001F0007C000F8001F0007C000F8001F0007C000F8001F0007C000F8001F0007C000F8001F
0007C000F8001F0007C000F8001F000FE001FC003F80FFFE1FFFC3FFF8FFFE1FFFC3FFF8351D7F
9C38>I<07C0FF0000FFC303C000FFC401E0000FC801F00007D000F00007D000F80007E000F800
07E000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F8
0007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000
F80007C000F80007C000F80007C000F8000FE001FC00FFFE1FFFC0FFFE1FFFC0221D7F9C25>I<
003FC00000E0700003C03C0007801E000F000F001E0007803E0007C03C0003C07C0003E07C0003
E07C0003E0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F07C0003E07C00
03E07C0003E03E0007C03E0007C01E0007800F000F0007801E0003C03C0000E07000003FC0001C
1D7E9C21>I<07C1FC0000FFC7078000FFD801E0000FF000F00007E000F80007C0007C0007C000
7E0007C0003E0007C0003F0007C0003F0007C0001F0007C0001F8007C0001F8007C0001F8007C0
001F8007C0001F8007C0001F8007C0001F8007C0001F0007C0003F0007C0003F0007C0003E0007
C0007C0007C0007C0007E000F80007F001F00007D803C00007C607800007C1FC000007C0000000
07C000000007C000000007C000000007C000000007C000000007C000000007C000000007C00000
0007C00000000FE0000000FFFE000000FFFE000000212A7F9C25>I<001FC0300000F030700001
E018700007C004F0000F8006F0001F0003F0001F0003F0003E0001F0007E0001F0007E0001F000
7C0001F000FC0001F000FC0001F000FC0001F000FC0001F000FC0001F000FC0001F000FC0001F0
007C0001F0007E0001F0007E0001F0003E0001F0003F0001F0001F0003F0000F8007F000078005
F00003C019F00000F071F000001F81F000000001F000000001F000000001F000000001F0000000
01F000000001F000000001F000000001F000000001F000000001F000000003F80000003FFF8000
003FFF80212A7E9C23>I<0781F0FF8618FF883C0F907E07907E07A07E07A03C07A00007C00007
C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007
C00007C00007C00007C0000FE000FFFF00FFFF00171D7F9C1A>I<03FC200E07E01001E03000E0
6000E0E00060E00060E00060F00060FC00007F80007FFC003FFF001FFF800FFFE001FFE0001FF0
0001F8C000F8C00078C00038E00038E00038F00030F00030F80060EC00C0C7038081FE00151D7E
9C1A>I<00C00000C00000C00000C00000C00001C00001C00001C00003C00003C00007C0000FC0
001FFFE0FFFFE007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0
0007C00007C00007C00007C00007C03007C03007C03007C03007C03007C03007C03003C02003E0
6001E04000F080003F0014297FA81A>I<07C000F800FFC01FF800FFC01FF8000FC001F80007C0
00F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007
C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F80007C000F800
07C000F80007C000F80007C001F80007C001F80003C002F80003C002F80001E004FC00007818FF
C0001FE0FFC0221D7F9C25>I<FFFC07FFFFFC07FF0FE001F807C000F007E000E003E000C003E0
00C001F0018001F0018001F8018000F8030000F80300007C0600007C0600007C0600003E0C0000
3E0C00003F1C00001F1800001F1800000FB000000FB000000FF0000007E0000007E0000003C000
0003C0000003C00000018000201D7F9C23>I<FFF8FFF83FF8FFF8FFF83FF80FE00FC00FC007C0
0780078007C007C0070007C007C0030003E007C0060003E007E0060003E007E0060001F00DE00C
0001F00DF00C0001F81DF01C0000F818F0180000F818F8180000FC38F83800007C30783000007C
307C3000007E707C7000003E603C6000003E603E6000001FC01EC000001FC01EC000001FC01FC0
00000F800F8000000F800F8000000F800F80000007000700000007000700000007000700002D1D
7F9C30>I<FFFC1FFE00FFFC1FFE000FF007F00003E007C00003F007000001F006000000F80E00
00007C1C0000007C180000003E300000001F700000001FE00000000FC000000007C000000003E0
00000007F000000007F00000000CF80000001CFC000000387C000000303E000000601F000000E0
1F800001C00F800001C007C00007C007E0001FC007F000FFF01FFF80FFF01FFF80211D7F9C23>
I<FFFC07FFFFFC07FF0FE001F807C000F007E000E003E000C003E000C001F0018001F0018001F8
018000F8030000F80300007C0600007C0600007C0600003E0C00003E0C00003F1C00001F180000
1F1800000FB000000FB000000FF0000007E0000007E0000003C0000003C0000003C00000018000
000180000003000000030000000300000006000078060000FC0E0000FC0C0000FC180000FC1800
007830000030E000001F800000202A7F9C23>I<3FFFFF3E003E3C007E38007C3000F87001F860
01F06003E06007E06007C0000F80001F80001F00003E00007E00007C0000F80001F80301F00303
E00307E00307C0070F80071F80061F00063E000E7E001E7C007EFFFFFE181D7E9C1E>I<FFFFFF
FF2001809121>I<FFFFFFFFFFFFFFFF804101809142>I E /Fk 62 127
df<000FF00000780C0001E0020003C00F0007801F000F001F000F001F000F000E000F0000000F
0000000F0000000F0000000F0000000F000000FFFFFF00FFFFFF000F001F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F00FFF0FFF0FFF0FFF01C26
7FA51F>12 D<000800100020004000C001800300030006000E000C001C001C0018003800380030
0070007000700070007000F000E000E000E000E000E000E000E000E000E000E000E000F0007000
700070007000700030003800380018001C001C000C000E00060003000300018000C00040002000
1000080D397BA916>40 D<800040002000100018000C000600060003000380018001C001C000C0
00E000E00060007000700070007000700078003800380038003800380038003800380038003800
38007800700070007000700070006000E000E000C001C001C0018003800300060006000C001800
10002000400080000D397DA916>I<000070000000007000000000700000000070000000007000
000000700000000070000000007000000000700000000070000000007000000000700000000070
00000000700000000070000000007000000000700000FFFFFFFFF0FFFFFFFFF0FFFFFFFFF00000
700000000070000000007000000000700000000070000000007000000000700000000070000000
007000000000700000000070000000007000000000700000000070000000007000000000700000
000070000024257D9F2B>43 D<78FCFCFEFE7A020202020404080810204007117C850F>I<FFF8
FFF8FFF80D037F8D12>I<78FCFCFCFC7806067C850F>I<00001800003800003800007000007000
00700000E00000E00000E00001C00001C00001C000038000038000038000070000070000070000
0E00000E00000E00001C00001C00001C0000380000380000380000700000700000E00000E00000
E00001C00001C00001C0000380000380000380000700000700000700000E00000E00000E00001C
00001C00001C0000380000380000380000700000700000700000E00000E00000C0000015387DA9
1C>I<00FE000383800701C00E00E01C00701C00703C007838003878003C78003C78003C78003C
F8003EF8003EF8003EF8003EF8003EF8003EF8003EF8003EF8003EF8003EF8003EF8003EF8003E
F8003EF8003E78003C78003C78003C3C00783C00783C00781C00700E00E00701C003838000FE00
17267EA41C>I<00600000E00003E0003FE000FDE000C1E00001E00001E00001E00001E00001E0
0001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E0
0001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00003F000FFFFC0FFFF
C012257BA41C>I<01F80007FF001C1F801007C02003E04001F04001F0F801F8FC01F8FC00F8FC
00F8FC00F87801F80001F80001F00001F00003E00003C00007C0000780000F00001E00001C0000
380000600000C0000180000100000200080400080C00081800183000103FFFF07FFFF0FFFFF0FF
FFF015257DA41C>I<00FE0003FF800F07C01801E01001F03E01F03E01F83E00F83E00F81C01F8
0001F80001F00001F00001E00003C0000780000E0001FE000007800001E00000F00000F80000FC
00007C00007E00007E30007E78007EFC007EFC007EFC007CF800FC4000F86000F83001F01E07E0
07FF8000FE0017267EA41C>I<0000C00000C00001C00003C00003C00007C0000FC0000BC00013
C00033C00023C00043C000C3C00083C00103C00303C00203C00403C00C03C00803C01003C03003
C02003C04003C0C003C0FFFFFFFFFFFF0003C00003C00003C00003C00003C00003C00003C00003
C0007FFE007FFE18257EA41C>I<1000201E01C01FFFC01FFF801FFE001FFC0013E00010000010
000010000010000010000010000010000010FC001307001C03801801C01001E00001E00000F000
00F00000F80000F80000F87000F8F800F8F800F8F800F8F800F08000F04001F04001E02003C030
07801C0F0007FE0003F00015267DA41C>I<001F80007FE001F03003C0300780780F00F80E00F8
1E00703C00003C00003C0000780000780000787E00F88380F900C0FA00E0FC0070FC0078FC003C
F8003CF8003EF8003EF8003EF8003EF8003E78003E78003E78003E78003C3C003C3C007C1C0078
1E00700F00E00783C001FF80007E0017267EA41C>I<2000003800003FFFFE3FFFFE7FFFFC7FFF
FC400008400010400020800020800040000080000080000100000200000200000400000C000008
0000180000180000300000300000700000700000E00000E00001E00001E00001E00001E00003E0
0003E00003E00003E00003E00003E00003E00001C00017277DA51C>I<007E0003FF800783C00E
00E01C00701800703800383800383800383800383C00383E00701F00701FC0E00FE1C007FB0003
FE0001FF0000FF80033FE0060FF01C07F83801F83000FC70003C60001EE0001EE0000EE0000EE0
000EE0000E70000C70001C3800381C00700F01E007FF8000FE0017267EA41C>I<00FE0003FF80
0783C00E00E01C00F03C0070780078780078F8003CF8003CF8003CF8003CF8003EF8003EF8003E
F8003E78003E78007E3C007E1C007E1C00BE0E013E03823E00FC3E00003C00003C00003C00007C
0000780000781C00F03E00F03E01E03C01C01803801C0F000FFC0003F00017267EA41C>I<7FFF
FFFFE0FFFFFFFFF0FFFFFFFFF00000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000FFFFFFFFF0FFFFFFFFF07FFFFFFFE0240F7D942B
>61 D<00002000000000700000000070000000007000000000F800000000F800000000F8000000
017C000000017C000000017C000000023E000000023E000000063F000000041F000000041F0000
00081F800000080F800000080F8000001007C000001007C000001007C000002003E000002003E0
00002003E000004001F000007FFFF00000FFFFF800008000F800008000F800010000FC00010000
7C000100007C000200003E000200003E000200003E000600001F001F00003F80FFE003FFF8FFE0
03FFF825277EA62A>65 D<FFFFFF0000FFFFFFC00007C003F00007C000F80007C0007C0007C000
7E0007C0003E0007C0003F0007C0003F0007C0003F0007C0003F0007C0003F0007C0003E0007C0
007E0007C0007C0007C000F80007C003F00007C00FC00007FFFFC00007C001F00007C000F80007
C0007C0007C0003E0007C0003F0007C0001F0007C0001F8007C0001F8007C0001F8007C0001F80
07C0001F8007C0001F8007C0003F0007C0003F0007C0007E0007C000FC0007C003F800FFFFFFE0
00FFFFFF800021267EA527>I<0001FE0080000FFF8180003F01C380007C00338001F0001F8003
E0000F8007C00007800F800003800F800003801F000001803F000001803E000001807E00000080
7E000000807C000000807C00000000FC00000000FC00000000FC00000000FC00000000FC000000
00FC00000000FC00000000FC000000007C000000007C000000007E000000807E000000803E0000
00803F000000801F000001000F800001000F8000030007C000020003E000040001F0000800007C
003000003F00E000000FFF80000001FE000021287DA628>I<FFFFFE0000FFFFFFC00007C003F0
0007C000F80007C0007C0007C0003E0007C0001F0007C0000F8007C0000F8007C00007C007C000
07C007C00007E007C00003E007C00003E007C00003E007C00003F007C00003F007C00003F007C0
0003F007C00003F007C00003F007C00003F007C00003F007C00003F007C00003E007C00003E007
C00003E007C00007C007C00007C007C000078007C0000F8007C0001F0007C0003E0007C0007C00
07C000F80007C003F000FFFFFFC000FFFFFE000024267EA52A>I<FFFFFFFCFFFFFFFC07C000FC
07C0001C07C0000C07C0000C07C0000407C0000607C0000607C0000207C0000207C0000207C004
0207C0040007C0040007C0040007C00C0007C01C0007FFFC0007FFFC0007C01C0007C00C0007C0
040007C0040007C0040007C0040007C0000007C0000007C0000007C0000007C0000007C0000007
C0000007C0000007C0000007E00000FFFF8000FFFF80001F267EA524>70
D<FFFF80FFFF8003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E0
0003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E0
0003E00003E00003E00003E00003E00003E00003E00003E00003E00003E000FFFF80FFFF801126
7FA514>73 D<03FFFC03FFFC000FC00007C00007C00007C00007C00007C00007C00007C00007C0
0007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0
0007C00007C00007C00007C00007C07807C0FC07C0FC07C0FC07C0F80780700F80400F00201E00
18380007E00016277EA51C>I<FFFE003FF8FFFE003FF807C0000FC007C000060007C000040007
C000080007C000100007C000200007C000400007C000800007C001000007C006000007C0080000
07C010000007C020000007C070000007C0F0000007C1F8000007C27C000007C47C000007C83E00
0007D03F000007E01F000007C00F800007C00FC00007C007C00007C003E00007C003F00007C001
F00007C000F80007C000F80007C0007C0007C0003E0007C0003E0007C0003F0007C0003F80FFFE
01FFF8FFFE01FFF825267EA52B>I<FFE000000FFFFFE000000FFF03E000000FC002F0000017C0
02F0000017C00278000027C00278000027C00278000027C0023C000047C0023C000047C0021E00
0087C0021E000087C0021E000087C0020F000107C0020F000107C00207800207C00207800207C0
0207800207C00203C00407C00203C00407C00201E00807C00201E00807C00201E00807C00200F0
1007C00200F01007C00200782007C00200782007C00200782007C002003C4007C002003C4007C0
02001E8007C002001E8007C002001E8007C002000F0007C007000F0007C00F80060007C0FFF806
01FFFFFFF80601FFFF30267FA533>77 D<0003FC0000001E078000007801E00000F000F00001E0
00780003C0003C000780001E000F00000F001F00000F801F00000F803E000007C03E000007C07E
000007E07C000003E07C000003E0FC000003F0FC000003F0FC000003F0FC000003F0FC000003F0
FC000003F0FC000003F0FC000003F0FC000003F0FC000003F07C000003E07E000007E07E000007
E03E000007C03E000007C01F00000F801F00000F800F80001F000780001E0003C0003C0001E000
780000F000F000007801E000001E0780000003FC000024287DA62B>79 D<FFFFFC0000FFFFFF80
0003E007E00003E001F80003E0007C0003E0007C0003E0003E0003E0003F0003E0003F0003E000
3F0003E0003F0003E0003F0003E0003E0003E0003E0003E0007C0003E000F80003E001F00003E0
07C00003FFFE000003E00F000003E003800003E001C00003E001E00003E000F00003E000F80003
E000F80003E000F80003E000F80003E000F80003E000FC0003E000FC0003E000FC0003E000FC02
03E000FC0203E0007E0203E0007E04FFFF803F04FFFF800F0800000003F027277FA529>82
D<01FC0207FF860F03C61C006E38003E78001E70000EF00006F00006F00006F00002F00002F800
02F800007C00007F00003FF0001FFF000FFFC007FFF003FFF8003FFC0003FC00007E00003E0000
1F00001F80000F80000F80000F80000FC0000FC0000EE0001EE0001CF8003CEC0038C780F0C1FF
E0807F0018287DA61F>I<7FFFFFFFC07FFFFFFFC07C01F007C07001F001C06001F000C04001F0
00404001F00040C001F000608001F000208001F000208001F000208001F000208001F000200001
F000000001F000000001F000000001F000000001F000000001F000000001F000000001F0000000
01F000000001F000000001F000000001F000000001F000000001F000000001F000000001F00000
0001F000000001F000000001F000000001F000000001F000000001F000000003F8000001FFFFF0
0001FFFFF00023267EA528>I<FFFF803FFEFFFF803FFE03E00003E003E00001C003E000008003
E000008003E000008003E000008003E000008003E000008003E000008003E000008003E0000080
03E000008003E000008003E000008003E000008003E000008003E000008003E000008003E00000
8003E000008003E000008003E000008003E000008003E000008003E000008003E000008003E000
008001E000010001F000010000F000030000F00002000078000400003C000C00001E003800000F
80F0000003FFC00000007F000027277FA52A>I<FFFFFFE0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0FFFFFF0838
7BA90F>91 D<FFFFFF070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707FFFFFF08387FA90F>93
D<020007000F801DC038E06030C01880080D0879A51C>I<07FC0000180F00003C0380003E01C0
003E01E0003E00F0000800F0000000F0000000F0000000F000007FF00003E0F0000F80F0001E00
F0003C00F0007C00F000F800F080F800F080F800F080F801F0807801F0807C02F9801E0C7F0007
F01E0019187E971C>97 D<0F000000FF000000FF0000001F0000000F0000000F0000000F000000
0F0000000F0000000F0000000F0000000F0000000F0000000F0000000F07E0000F3838000F401C
000F800E000F0007000F0007800F0003C00F0003C00F0003C00F0003E00F0003E00F0003E00F00
03E00F0003E00F0003E00F0003C00F0003C00F0007C00F0007800F8007000E800E000E401C000C
307800080FC0001B267FA51F>I<00FF800380600700F00E01F01C01F03C01F07C004078000078
0000F80000F80000F80000F80000F80000F800007800007800007C00003C00081C00080E001007
00200381C000FE0015187E9719>I<00001E000001FE000001FE0000003E0000001E0000001E00
00001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E00007E1E0003C19E
0007005E000E003E001C001E003C001E007C001E0078001E0078001E00F8001E00F8001E00F800
1E00F8001E00F8001E00F8001E0078001E0078001E0078001E003C001E001C003E000E003E0007
00DF0003831FE000FC1FE01B267EA51F>I<00FC000387800E01C01E01E03C00F03C00F0780070
780078F80078F80078FFFFF8F80000F80000F80000F800007800007800007800003C00081C0008
0E00100700200381C000FE0015187E9719>I<001F000070C001E1E001C3E003C3E00781C00780
00078000078000078000078000078000078000078000FFFE00FFFE000780000780000780000780
000780000780000780000780000780000780000780000780000780000780000780000780000780
000780000780000780007FFC007FFC00132680A511>I<00000F0000FC3080038743800F03C380
0E01C1001E01E0003E01F0003E01F0003E01F0003E01F0003E01F0001E01E0000E01C0000F03C0
000B87000008FC0000180000001800000018000000180000001C0000000FFFC00007FFF80007FF
FC001C003E0030000F0070000700E0000380E0000380E0000380E0000380E00003807000070038
000E001C001C000780F00000FF800019257F981C>I<0F000000FF000000FF0000001F0000000F
0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000
0F07F0000F183C000F201E000F400E000F800F000F800F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000F000F00FFF0FFF0FFF0FFF01C267FA51F>I<1E003F003F003F003F001E000000
00000000000000000000000000000F00FF00FF001F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F00FFF0FFF00C267FA50F>I<0F000000FF000000FF
0000001F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000
0F0000000F0000000F01FF000F01FF000F0078000F0060000F00C0000F0180000F0200000F0400
000F0C00000F1C00000F3E00000F5F00000F8F00000F0780000F07C0000F03E0000F01E0000F01
F0000F00F8000F0078000F007C000F007E00FFF1FFC0FFF1FFC01A267FA51D>107
D<0F00FF00FF001F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00FFF0FFF00C
267FA50F>I<0F07F007F000FF183C183C00FF201E201E001F400E400E000F800F800F000F800F
800F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F00FFF0FFF0FFF0FFF0FFF0FFF02C187F972F>
I<0F07F000FF183C00FF201E001F400E000F800F000F800F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F00FFF0FFF0FFF0FFF01C187F971F>I<00FE000383800701C01E00F01C
00703C007878003C78003C78003CF8003EF8003EF8003EF8003EF8003EF8003EF8003E78003C78
003C3C00783C00781E00F00F01E003838000FE0017187E971C>I<0F07E000FF383800FF401C00
0F800E000F000F000F0007800F0007C00F0007C00F0003C00F0003E00F0003E00F0003E00F0003
E00F0003E00F0003E00F0003C00F0007C00F0007C00F0007800F800F000F800E000F401C000F30
78000F0FC0000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F
000000FFF00000FFF000001B237F971F>I<007E020003C10600070086000E004E001E002E003C
003E007C001E007C001E0078001E00F8001E00F8001E00F8001E00F8001E00F8001E00F8001E00
78001E007C001E007C001E003C001E001E003E000E005E0007009E0003831E0000FC1E0000001E
0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E000001FFE00001
FFE01B237E971D>I<0F0F80FF11C0FF23E01F43E00F83E00F81C00F80000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000FFF800
FFF80013187F9716>I<07E100181B00300700600300E00300E00100E00100F00100FC00007FE0
003FF8001FFC0007FE00007F00000F80800780800380C00380C00380C00300E00300F00600CC1C
0083F00011187E9716>I<0100000100000100000100000300000300000300000700000700000F
00003FFF00FFFF000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F
00000F00000F00800F00800F00800F00800F00800F008007010003810001C200007C0011227FA1
16>I<0F000F00FF00FF00FF00FF001F001F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F001F
000F001F0007002F0003804F8001C08FF0007F0FF01C187F971F>I<FFE03FC0FFE03FC00F801E
000F000C00078008000780080007C0180003C0100003C0100001E0200001E0200001F0600000F0
400000F040000078800000788000007D8000003D0000003D0000001E0000001E0000001E000000
0C0000000C00001A187F971D>I<FFE3FF0FF8FFE3FF0FF81F007803E00F007801800F00380080
07803C010007805C010007805E010003C05E020003C08E020003E08F020001E08F040001E10704
0001F1078C0000F107880000F2038800007A03D000007E03D000007C01D000003C01E000003800
E000003800E000001800C000001000400025187F9728>I<FFE0FFC0FFE0FFC00F807C00078030
0003C0200003E0400001E0800000F1800000790000007A0000003C0000001E0000001F0000001F
0000002780000043C00000C3C0000081E0000100F0000200F800060078001F007C00FF81FFE0FF
81FFE01B187F971D>I<FFE03FC0FFE03FC00F801E000F000C00078008000780080007C0180003
C0100003C0100001E0200001E0200001F0600000F0400000F040000078800000788000007D8000
003D0000003D0000001E0000001E0000001E0000000C0000000C00000008000000080000001800
000010000020100000F8200000F8200000F8400000F0C00000618000001E0000001A237F971D>
I<7FFFF07801E06003E04003C0400780C00F80800F00801E00803E00003C0000780000F00000F0
0001E00003C01007C0100780100F00101F00301E00203C00607C00607801E0FFFFE014187E9719
>I<0F00201FC04031F180407F00801E0013057CA41C>126 D E /Fl 40
125 df<1E003F007F80FFC0FFC0FFC0FFC07F803F001E000A0A7B8915>46
D<0001C0000003C000000FC00000FFC000FFFFC000FFFFC000FF3FC000003FC000003FC000003F
C000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00000
3FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000
003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0
00003FC0007FFFFFE07FFFFFE07FFFFFE01B2B7BAA26>49 D<007FC00003FFF80007FFFE001F81
FF803E007FC07C003FE07E001FE0FF001FF0FF800FF0FF800FF8FF800FF8FF800FF87F000FF83E
000FF800000FF800000FF000001FF000001FE000001FE000003FC000003F8000007F000000FE00
0000FC000001F8000003E0000007C000000F8000000F0000001C0038003800380070003800E000
7001C000700380007007FFFFF00FFFFFF01FFFFFF03FFFFFF07FFFFFE0FFFFFFE0FFFFFFE0FFFF
FFE01D2B7CAA26>I<003FF00001FFFE0003E07F8007001FC00E000FE01F800FF03FC00FF83FC0
0FF83FE00FF83FC00FF81FC00FF80F800FF807000FF000001FF000001FE000001FC000003F8000
007F000001FC00007FF000007FFE0000007F8000001FE000000FF000000FF8000007F8000007FC
000007FC000007FE000007FE3E0007FE7F0007FEFF8007FEFF8007FEFF8007FCFF8007FCFF000F
F87E000FF03E001FE01FC07FC00FFFFF8003FFFE00007FF0001F2B7DAA26>I<000001E0000000
01E000000003E000000007E00000000FE00000001FE00000001FE00000003FE00000007FE00000
00EFE0000001CFE0000003CFE00000038FE00000070FE000000E0FE000001C0FE00000380FE000
00780FE00000700FE00000E00FE00001C00FE00003800FE00007000FE00007000FE0000E000FE0
001C000FE00038000FE00070000FE000F0000FE000FFFFFFFF80FFFFFFFF80FFFFFFFF8000001F
E00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE000000F
FFFF80000FFFFF80000FFFFF80212B7EAA26>I<180000C01F800FC01FFFFF801FFFFF001FFFFE
001FFFFC001FFFF8001FFFF0001FFFC0001FFE00001E0000001E0000001E0000001E0000001E00
00001E0000001E3FE0001EFFFC001FC07E001F003F801C001FC018001FC000000FE000000FF000
000FF000000FF000000FF800000FF83C000FF87E000FF8FF000FF8FF000FF8FF000FF8FF000FF0
FE000FF07C001FE070001FE038001FC01E003F800F80FF0007FFFC0003FFF000007F80001D2B7C
AA26>I<0001FE00000FFF80003F01C000FC006001F801F003F003F807E007F80FE007F80FC007
F81FC007F83FC003F03FC001E07F8000007F8000007F8000007F800000FF87F800FF8FFE00FF98
1F80FFB00FC0FFE007E0FFE007F0FFC003F8FFC003FCFFC003FCFF8003FEFF8003FEFF8003FEFF
8003FE7F8003FE7F8003FE7F8003FE7F8003FE3F8003FC3FC003FC1FC003FC1FC007F80FE007F0
07E007E003F81FC001FFFF80007FFE00000FF0001F2B7DAA26>I<000001F0000000000001F000
0000000003F8000000000003F8000000000003F8000000000007FC000000000007FC0000000000
0FFE00000000000FFE00000000000FFE00000000001FFF00000000001FFF00000000003FFF8000
0000003CFF80000000003CFF8000000000787FC000000000787FC000000000F87FE000000000F0
3FE000000000F03FE000000001E01FF000000001E01FF000000003E01FF800000003C00FF80000
0007C00FFC000000078007FC000000078007FC0000000F8007FE0000000F0003FE0000001F0003
FF0000001FFFFFFF0000001FFFFFFF0000003FFFFFFF8000003C0000FF8000007C0000FFC00000
7800007FC000007800007FC00000F800007FE00000F000003FE00001F000003FF00001E000001F
F00001E000001FF00003E000001FF800FFFF8007FFFFE0FFFF8007FFFFE0FFFF8007FFFFE0332E
7DAD3A>65 D<FFFFFFFFC000FFFFFFFFF800FFFFFFFFFE0001FE0001FF8001FE00007FC001FE00
003FE001FE00003FE001FE00001FF001FE00001FF001FE00000FF801FE00000FF801FE00000FF8
01FE00000FF801FE00000FF801FE00001FF801FE00001FF001FE00001FF001FE00003FE001FE00
007FC001FE0000FF8001FE0003FE0001FFFFFFF80001FFFFFFFC0001FE0000FF0001FE00003FC0
01FE00001FE001FE00000FF001FE00000FF801FE000007FC01FE000007FC01FE000007FE01FE00
0007FE01FE000007FE01FE000007FE01FE000007FE01FE000007FE01FE000007FE01FE000007FC
01FE00000FFC01FE00000FF801FE00001FF001FE00007FF001FE0001FFC0FFFFFFFFFF80FFFFFF
FFFE00FFFFFFFFE0002F2E7EAD36>I<00000FFE000C0000FFFFC01C0007FFFFF07C000FFE01FC
FC003FE0003FFC007F80000FFC01FF000007FC03FC000003FC07FC000001FC07F8000000FC0FF0
000000FC1FF00000007C1FE00000007C3FE00000007C3FE00000003C7FE00000003C7FC0000000
3C7FC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC0
00000000FFC000000000FFC000000000FFC000000000FFC0000000007FC0000000007FC0000000
007FE00000001C3FE00000001C3FE00000001C1FE00000001C1FF0000000380FF00000003807F8
0000003807FC0000007003FC000000E001FF000001C0007F80000780003FE0001F00000FFE00FE
000007FFFFF8000000FFFFE00000000FFE00002E2E7CAD37>I<FFFFFFFFC00000FFFFFFFFFC00
00FFFFFFFFFF000001FF0001FFC00001FF00003FE00001FF00000FF80001FF000007FC0001FF00
0003FE0001FF000001FE0001FF000000FF0001FF000000FF8001FF0000007F8001FF0000007FC0
01FF0000007FC001FF0000003FE001FF0000003FE001FF0000003FE001FF0000003FE001FF0000
003FF001FF0000003FF001FF0000003FF001FF0000003FF001FF0000003FF001FF0000003FF001
FF0000003FF001FF0000003FF001FF0000003FF001FF0000003FF001FF0000003FF001FF000000
3FE001FF0000003FE001FF0000003FE001FF0000003FC001FF0000007FC001FF0000007FC001FF
000000FF8001FF000000FF0001FF000001FF0001FF000003FE0001FF000007FC0001FF00000FF8
0001FF00003FF00001FF0001FFC000FFFFFFFFFF0000FFFFFFFFFC0000FFFFFFFFC00000342E7E
AD3B>I<FFFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF0001FF0001FF0001FF00003F8001FF00001F
8001FF00000F8001FF0000078001FF0000078001FF0000038001FF0000038001FF0000038001FF
000003C001FF001C01C001FF001C01C001FF001C01C001FF001C000001FF001C000001FF003C00
0001FF007C000001FF00FC000001FFFFFC000001FFFFFC000001FFFFFC000001FF00FC000001FF
007C000001FF003C000001FF001C000001FF001C000001FF001C000001FF001C000001FF001C00
0001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF
0000000001FF0000000001FF0000000001FF0000000001FF00000000FFFFFF800000FFFFFF8000
00FFFFFF8000002A2E7EAD30>70 D<FFFFFEFFFFFEFFFFFE01FF0001FF0001FF0001FF0001FF00
01FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF00
01FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF00
01FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF0001FF00FFFFFEFFFFFEFFFFFE172E7D
AD1D>73 D<FFFF800000007FFFC0FFFF800000007FFFC0FFFFC0000000FFFFC001FFC0000000FF
E00001DFE0000001DFE00001DFE0000001DFE00001DFE0000001DFE00001CFF00000039FE00001
CFF00000039FE00001C7F80000071FE00001C7F80000071FE00001C3FC00000E1FE00001C3FC00
000E1FE00001C1FE00001C1FE00001C1FE00001C1FE00001C1FE00001C1FE00001C0FF0000381F
E00001C0FF0000381FE00001C07F8000701FE00001C07F8000701FE00001C03FC000E01FE00001
C03FC000E01FE00001C01FE001C01FE00001C01FE001C01FE00001C01FE001C01FE00001C00FF0
03801FE00001C00FF003801FE00001C007F807001FE00001C007F807001FE00001C003FC0E001F
E00001C003FC0E001FE00001C001FE1C001FE00001C001FE1C001FE00001C001FE1C001FE00001
C000FF38001FE00001C000FF38001FE00001C0007FF0001FE00001C0007FF0001FE00001C0003F
E0001FE00001C0003FE0001FE00001C0001FC0001FE00001C0001FC0001FE00001C0001FC0001F
E000FFFF800F800FFFFFC0FFFF800F800FFFFFC0FFFF8007000FFFFFC0422E7DAD49>77
D<FFFFFFFF8000FFFFFFFFF000FFFFFFFFFC0001FF0003FF0001FF0000FF8001FF00007FC001FF
00003FE001FF00003FF001FF00001FF001FF00001FF001FF00001FF801FF00001FF801FF00001F
F801FF00001FF801FF00001FF801FF00001FF801FF00001FF001FF00001FF001FF00003FE001FF
00003FE001FF00007FC001FF0000FF8001FF0007FF0001FFFFFFFC0001FFFFFFE00001FF000000
0001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF
0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF000000
0001FF0000000001FF0000000001FF0000000001FF00000000FFFFFE000000FFFFFE000000FFFF
FE0000002D2E7EAD34>80 D<00003FFC00000001FFFF8000000FF00FF000003FC003FC00007F00
00FE0001FE00007F8003FC00003FC007FC00003FE007F800001FE00FF000000FF01FF000000FF8
1FF000000FF83FE0000007FC3FE0000007FC7FE0000007FE7FE0000007FE7FC0000003FE7FC000
0003FEFFC0000003FFFFC0000003FFFFC0000003FFFFC0000003FFFFC0000003FFFFC0000003FF
FFC0000003FFFFC0000003FFFFC0000003FFFFC0000003FF7FC0000003FE7FC0000003FE7FC000
0003FE7FE0000007FE3FE0000007FC3FE0000007FC1FE0000007F81FF000000FF80FF003C00FF0
0FF80FF01FF007F81C181FE003FC300C3FC001FE30067F80007F3007FE00003FF007FC00000FFC
0FF0000003FFFFC00000003FFFC00300000003E00300000001F00300000001F80F00000001FFFF
00000001FFFF00000000FFFE00000000FFFE00000000FFFE000000007FFC000000007FF8000000
003FF0000000001FE00000000007C0303B7CAD39>I<FFFFFFFE000000FFFFFFFFE00000FFFFFF
FFFC000001FF0007FF000001FF0000FF800001FF00007FC00001FF00003FE00001FF00003FF000
01FF00001FF00001FF00001FF00001FF00001FF80001FF00001FF80001FF00001FF80001FF0000
1FF80001FF00001FF80001FF00001FF00001FF00001FF00001FF00003FE00001FF00003FC00001
FF00007F800001FF0001FF000001FF0007FC000001FFFFFFF0000001FFFFFF80000001FF001FE0
000001FF0007F8000001FF0003FC000001FF0001FE000001FF0001FF000001FF0000FF000001FF
0000FF800001FF0000FF800001FF0000FF800001FF0000FF800001FF0000FF800001FF0000FFC0
0001FF0000FFC00001FF0000FFC00001FF0000FFC00801FF0000FFC01C01FF00007FE01C01FF00
007FE01C01FF00003FF038FFFFFE001FF870FFFFFE0007FFE0FFFFFE0000FFC0362E7EAD39>I<
003FE0060001FFFC0E0003FFFF1E000FE01FFE001F0003FE001E0000FE003E00007E007C00003E
007C00001E00FC00001E00FC00001E00FC00000E00FE00000E00FE00000E00FF00000000FFC000
00007FF80000007FFF8000007FFFFC00003FFFFF80001FFFFFC0000FFFFFF00007FFFFF80003FF
FFFC0000FFFFFC00001FFFFE000001FFFF0000001FFF00000001FF00000000FF800000007F8000
00003F806000001F80E000001F80E000001F80E000001F80F000001F00F000001F00F800003F00
F800003E00FE00007C00FF8000F800FFF003F000F3FFFFE000E07FFF8000C00FFE0000212E7CAD
2A>I<7FFFFFFFFFF87FFFFFFFFFF87FFFFFFFFFF87F801FF007F87E001FF001F87C001FF000F8
78001FF0007870001FF00038F0001FF0003CF0001FF0003CF0001FF0003CE0001FF0001CE0001F
F0001CE0001FF0001CE0001FF0001CE0001FF0001C00001FF0000000001FF0000000001FF00000
00001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001F
F0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF00000
00001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001FF0000000001F
F0000000001FF0000000001FF0000000001FF00000007FFFFFFC00007FFFFFFC00007FFFFFFC00
2E2D7DAC35>I<00FFF0000007FFFE00000F807F80000FC01FC0001FE00FE0001FE00FF0001FE0
07F0000FC007F800078007F800000007F800000007F800000007F80000003FF800001FFFF80000
FFE7F80007FC07F8000FE007F8001F8007F8003F0007F8007F0007F800FE0007F800FE0007F800
FE0007F800FE0007F800FE000FF8007F000FF8003F801BFC001FC0F3FFC00FFFE1FFC001FF007F
C0221E7E9D25>97 D<03F0000000FFF0000000FFF0000000FFF00000000FF00000000FF0000000
0FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000
000FF00000000FF00000000FF07F80000FF3FFF0000FF780FC000FFE003E000FF8001F000FF000
1F800FF0000FC00FF0000FE00FF00007F00FF00007F00FF00007F00FF00007F80FF00007F80FF0
0007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F00FF00007F00F
F0000FE00FF0000FE00FF0000FC00FF8001F800FF8003F000FEE007E000FC781FC000F83FFF000
0F00FF8000252E7EAD2A>I<000FFE00007FFFC001FC03E003F007E007C00FF00FC00FF01F800F
F03F8007E07F8003C07F0000007F000000FF000000FF000000FF000000FF000000FF000000FF00
0000FF000000FF0000007F0000007F0000007F8000003F8000381F8000380FC0007007E0007003
F001E001FC07C0007FFF00000FF8001D1E7E9D22>I<0000001F80000007FF80000007FF800000
07FF800000007F800000007F800000007F800000007F800000007F800000007F800000007F8000
00007F800000007F800000007F800000007F800000007F80000FF87F80007FFE7F8001FC0FFF80
03F001FF8007E000FF800FC0007F801F80007F803F80007F803F80007F807F00007F807F00007F
80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF0000
7F807F00007F807F00007F807F00007F803F80007F801F80007F800FC000FF8007C001FF8003E0
03FF8001F80F7FF8007FFC7FF8000FF07FF8252E7EAD2A>I<000FF800007FFE0001F81F8007E0
07C00FC003E01FC001F01F8001F03F8001F87F0000F87F0000FC7F0000FCFF0000FCFF0000FCFF
FFFFFCFFFFFFFCFF000000FF000000FF000000FF0000007F0000007F0000003F8000003F80001C
1F80001C0FC0003807C0007003F000E001FC07C0007FFF80000FFC001E1E7E9D23>I<0003FC00
001FFF00007F078000FE0FC001FC1FE003FC1FE003F81FE007F80FC007F8078007F8030007F800
0007F8000007F8000007F8000007F8000007F80000FFFFF000FFFFF000FFFFF00007F8000007F8
000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007
F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F80000
07F8000007F8000007F800007FFFC0007FFFC0007FFFC0001B2E7EAD17>I<003FE01F0001FFFC
FF8003F07FE7C007C01F0FC00FC01F87C01F800FC3801F800FC0003F800FE0003F800FE0003F80
0FE0003F800FE0003F800FE0001F800FC0001F800FC0000FC01F800007C01F000007F07E00000F
FFFC00000C3FE000001C000000001C000000001E000000001E000000001F000000001FFFFF0000
1FFFFFE0000FFFFFF8000FFFFFFC0007FFFFFE0003FFFFFE001FFFFFFF003F0001FF007E00003F
80FC00001F80FC00001F80FC00001F80FC00001F807C00001F007E00003F003F00007E001F8000
FC0007F007F00001FFFFC000003FFE0000222C7E9D26>I<03F0000000FFF0000000FFF0000000
FFF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000
000FF00000000FF00000000FF00000000FF00000000FF00000000FF01FE0000FF07FF8000FF1E0
FC000FF380FE000FF6007F000FFC007F000FFC007F800FF8007F800FF8007F800FF0007F800FF0
007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800F
F0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F80
0FF0007F80FFFF07FFF8FFFF07FFF8FFFF07FFF8252E7DAD2A>I<07800FC01FE03FF03FF03FF0
3FF01FE00FC00780000000000000000000000000000003F0FFF0FFF0FFF00FF00FF00FF00FF00F
F00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0FFFF
FFFFFFFF102F7DAE15>I<03F0FFF0FFF0FFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF0
0FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00F
F00FF00FF00FF00FF00FF00FF00FF00FF00FF0FFFFFFFFFFFF102E7DAD15>108
D<03F00FF0007F8000FFF03FFC01FFE000FFF0F07E0783F000FFF1C07F0E03F80007F3003F9801
FC0007F6003FB001FC0007F6003FF001FE0007FC003FE001FE0007FC003FE001FE0007F8003FC0
01FE0007F8003FC001FE0007F8003FC001FE0007F8003FC001FE0007F8003FC001FE0007F8003F
C001FE0007F8003FC001FE0007F8003FC001FE0007F8003FC001FE0007F8003FC001FE0007F800
3FC001FE0007F8003FC001FE0007F8003FC001FE0007F8003FC001FE0007F8003FC001FE0007F8
003FC001FE0007F8003FC001FE0007F8003FC001FE00FFFFC7FFFE3FFFF0FFFFC7FFFE3FFFF0FF
FFC7FFFE3FFFF03C1E7D9D41>I<07E01FE000FFE07FF800FFE1E0FC00FFE380FE000FE6007F00
0FEC007F000FEC007F800FF8007F800FF8007F800FF0007F800FF0007F800FF0007F800FF0007F
800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF000
7F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F80FFFF07FFF8FFFF
07FFF8FFFF07FFF8251E7D9D2A>I<000FF80000007FFF000001F80FC00007E003F0000FC001F8
001F8000FC001F8000FC003F8000FE007F00007F007F00007F007F00007F00FF00007F80FF0000
7F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F807F00007F007F00
007F007F00007F003F8000FE003F8000FE001FC001FC000FC001F80007E003F00001F80FC00000
7FFF0000000FF80000211E7E9D26>I<03F07F8000FFF3FFF000FFF781FC00FFFE007E000FF800
3F000FF0001F800FF0001FC00FF0000FE00FF0000FF00FF0000FF00FF00007F00FF00007F80FF0
0007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F80FF00007F00F
F0000FF00FF0000FE00FF0000FE00FF0001FC00FF8001F800FF8003F000FFE007E000FF781FC00
0FF3FFF0000FF0FF80000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000
000FF00000000FF00000000FF00000000FF0000000FFFF000000FFFF000000FFFF000000252B7E
9D2A>I<07E0FC00FFE1FF00FFE30F80FFE61F800FEC3FC00FEC3FC00FF83FC00FF81F800FF80F
000FF800000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0
00000FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF00000FFFF8000FF
FF8000FFFF80001A1E7E9D1F>114 D<01FF8E0007FFFE001F00FE003C003E0078001E0078000E
00F8000E00F8000E00FC000E00FF000000FFF800007FFF80007FFFF0003FFFF8001FFFFC0007FF
FE0003FFFF00003FFF000001FF8060003F80E0001F80E0000F80F0000F80F0000F00F8000F00FC
001E00FE001E00FF807800F3FFF000C07F8000191E7E9D1E>I<00380000380000380000380000
780000780000780000F80000F80001F80003F80007F8001FFFFEFFFFFEFFFFFE07F80007F80007
F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007
F80707F80707F80707F80707F80707F80707F80703F80E01FC0E00FE1C007FF8000FE0182A7FA9
1E>I<03F0001F80FFF007FF80FFF007FF80FFF007FF800FF0007F800FF0007F800FF0007F800F
F0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F80
0FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F800FF0007F
800FF000FF800FF000FF8007F001FF8003F0037F8001FC0E7FF800FFFC7FF8001FF07FF8251E7D
9D2A>I<7FFF803FF07FFF803FF07FFF803FF007F800070007FC000F0003FC000E0003FE001E00
01FE001C0001FF001C0000FF00380000FF003800007F807000007F807000007FC0F000003FC0E0
00003FE1E000001FE1C000001FF3C000000FF38000000FFB80000007FF00000007FF00000007FF
00000003FE00000003FE00000001FC00000001FC00000000F800000000F8000000007000000000
7000000000E000000000E000000001E000003801C000007C03C00000FE03800000FE07800000FE
0F000000FC1E000000783C0000003FF80000000FC0000000242B7F9D28>121
D<3FFFFFF03FFFFFF03F801FE03E003FC03C007FC03800FF807800FF007801FF007003FE007003
FC007007FC00000FF800001FF000001FE000003FE000007FC000007F800000FF807001FF007003
FE007003FC007007FC00F00FF800F00FF000E01FF001E03FE001E03FC007E07F801FE0FFFFFFE0
FFFFFFE01C1E7E9D22>I<FFFFFFFFFFFFFFFFFFE0FFFFFFFFFFFFFFFFFFE04B0280934C>124
D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 400dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
0 bop 230 137 a Fl(Bandlimited)27 b(In)n(terp)r(olation)g(|)f(In)n(tro)r
(duction)h(and)g(Algorithm)968 283 y Fk(Julius)19 b(O.)g(Smith)e(I)r(I)r(I)
401 390 y(Cen)n(ter)g(for)h(Computer)d(Researc)n(h)i(in)h(Music)g(and)g
(Acoustics)e(\(CCRMA\))356 456 y(Departmen)n(t)f(of)j(Music,)g(Stanford)e
(Univ)n(ersit)n(y)-5 b(,)20 b(Stanford,)c(California)i(94305)1007
603 y(DRAFT)h(1/5/93)0 740 y Fl(Abstract)0 847 y Fj(A)i(tec)n(hnique)g(for)h
(bandlimited)f(in)n(terp)r(olation)i(of)f(digital)h(signals)g(is)f(describ)r
(ed)e(whic)n(h)i(sup-)0 925 y(p)r(orts)i(non-uniform)g(and)g(time-v)l(arying)
g(resampling.)35 b(The)23 b(metho)r(d)f(is)j(based)e(on)h(in)n(terp)r(o-)0
1002 y(lated)f(lo)r(ok-up)h(in)g(a)f(large)h(table)f(of)g(\014lter)g(co)r
(e\016cien)n(ts.)32 b(One)23 b(\014lter)g(table)g(handles)g(all)h(con-)0
1080 y(v)n(ersion)i(factors.)40 b(F)-6 b(orm)n(ulas)27 b(are)f(giv)n(en)f
(for)h(determining)f(the)g(lo)r(ok-up)h(table)g(size)f(needed)0
1157 y(for)e(a)f(giv)n(en)g(precision)h(requiremen)n(t.)0 1294
y Fl(1.)j(In)n(tro)r(duction)0 1401 y Fj(Bandlimited)g(in)n(terp)r(olation)h
(of)f(discrete-time)f(signals)i(is)g(a)f(basic)g(to)r(ol)h(ha)n(ving)g
(extensiv)n(e)0 1479 y(application)33 b(in)g(digital)h(signal)f(pro)r
(cessing.)60 b(In)33 b(general,)i(the)c(problem)h(is)h(to)f(correctly)0
1556 y(compute)e(signal)j(v)l(alues)f(at)g(arbitrary)h(con)n(tin)n(uous)f
(times)f(from)g(a)h(set)g(of)g(discrete-time)0 1634 y(samples)27
b(of)h(the)f(signal)i(amplitude.)45 b(In)27 b(other)g(w)n(ords,)j(w)n(e)d(m)n
(ust)g(b)r(e)f(able)i(to)f(in)n(terp)r(olate)0 1711 y(the)32
b(signal)j(b)r(et)n(w)n(een)d(samples.)63 b(Since)32 b(the)h(original)i
(signal)f(is)g(alw)n(a)n(ys)h(assumed)d(to)i(b)r(e)0 1789 y
Fi(b)m(and)s(limite)m(d)c Fj(to)f(half)g(the)f(sampling)i(rate,)g
(\(otherwise)e(aliasing)j(distortion)f(w)n(ould)f(o)r(ccur)0
1866 y(up)r(on)20 b(sampling\),)h(Shannon's)f(sampling)h(theorem)d(tells)i
(us)g(the)g(signal)h(can)e(b)r(e)g(exactly)h(and)0 1944 y(uniquely)i
(reconstructed)e(for)j(all)g(time)f(from)g(its)g(samples)g(b)n(y)g
(bandlimited)g(in)n(terp)r(olation.)0 2051 y(Considerable)30
b(researc)n(h)f(has)h(b)r(een)f(dev)n(oted)g(to)h(the)f(problem)h(of)g(in)n
(terp)r(olating)h(discrete)0 2129 y(p)r(oin)n(ts.)f(A)22 b(comparison)g(b)r
(et)n(w)n(een)e(classical)k(\(e.g.)e(Lagrange\))g(and)g(bandlimited)f(in)n
(terp)r(ola-)0 2206 y(tion)h(is)h(giv)n(en)f(in)g(\(Sc)n(hafer)g(and)g
(Rabiner)f(1973\).)31 b(The)21 b(b)r(o)r(ok)h Fl(Multirate)k(Digital)f
(Signal)0 2284 y(Pro)r(cessing)f Fj(\(Cro)r(c)n(hiere)18 b(and)i(Rabiner)f
(1983\))h(pro)n(vides)g(a)f(comprehensiv)n(e)f(summary)g(and)0
2361 y(review)g(of)i(previous)e(tec)n(hniques)g(for)h(sampling-rate)h(con)n
(v)n(ersion.)29 b(In)18 b(these)g(tec)n(hniques,)h(the)0 2439
y(signal)28 b(is)g(\014rst)f(in)n(terp)r(olated)f(b)n(y)i(an)f(in)n(teger)f
(factor)h Fh(L)g Fj(and)g(then)f(decimated)f(b)n(y)i(an)g(in)n(te-)0
2516 y(ger)e(factor)g Fh(M)6 b Fj(.)39 b(This)26 b(pro)n(vides)g
(sampling-rate)f(con)n(v)n(ersion)h(b)n(y)f(an)n(y)h(rational)g(factor)g
Fh(L=)m(M)6 b Fj(.)0 2593 y(The)23 b(con)n(v)n(ersion)h(requires)f(a)h
(digital)h(lo)n(wpass)g(\014lter)f(whose)f(cuto\013)g(frequency)g(dep)r(ends)
f(on)0 2671 y Fh(max)o Fg(f)p Fh(L;)9 b(M)d Fg(g)p Fj(.)47
b(While)28 b(su\016cien)n(tly)g(general,)h(this)g(form)n(ulation)f(is)h(less)
f(con)n(v)n(enien)n(t)f(when)g(it)0 2748 y(is)k(desired)e(to)h(resample)f
(the)g(signal)j(at)e(arbitrary)h(times)e(or)h(c)n(hange)f(the)h
(sampling-rate)0 2826 y(con)n(v)n(ersion)22 b(factor)h(smo)r(othly)f(o)n(v)n
(er)g(time.)0 2933 y(In)k(this)g(pap)r(er,)g(a)h(resampling)f(algorithm)g(is)
g(describ)r(ed)f(whic)n(h)h(will)h(ev)l(aluate)f(a)g(signal)h(at)0
3011 y(an)n(y)20 b(time)f(sp)r(eci\014able)g(b)n(y)h(a)g(\014xed-p)r(oin)n(t)
g(n)n(um)n(b)r(er.)28 b(In)19 b(addition,)j(one)d(lo)n(wpass)j(\014lter)d(is)
h(used)0 3088 y(regardless)k(of)g(the)f(sampling-rate)h(con)n(v)n(ersion)f
(factor.)35 b(The)23 b(algorithm)h(e\013ectiv)n(ely)e(imple-)0
3166 y(men)n(ts)17 b(the)h(\\analog)h(in)n(terpretation")f(of)h(rate)f(con)n
(v)n(ersion,)i(as)e(discussed)g(in)h(\(Cro)r(c)n(hiere)e(and)0
3243 y(Rabiner)k(1983\),)h(in)f(whic)n(h)f(a)h(certain)g(lo)n(wpass-\014lter)
g(impulse)g(resp)r(onse)f(m)n(ust)g(b)r(e)g(a)n(v)l(ailable)0
3321 y(as)26 b(a)h(con)n(tin)n(uous)f(function.)42 b(Con)n(tin)n(uit)n(y)26
b(of)h(the)e(impulse)h(resp)r(onse)f(is)i(sim)n(ulated)f(b)n(y)g(lin-)0
3398 y(early)c(in)n(terp)r(olating)g(b)r(et)n(w)n(een)e(samples)h(of)h(the)f
(impulse)g(resp)r(onse)g(stored)g(in)h(a)f(table.)30 b(Due)1186
3533 y Fk(1)p eop
%%Page: 2 2
1 bop 0 85 a Fj(to)28 b(the)f(relativ)n(ely)i(lo)n(w)g(cost)f(of)h(memory)-6
b(,)29 b(the)e(metho)r(d)g(is)h(quite)g(practical)g(for)h(hardw)n(are)0
157 y(implemen)n(tation.)0 248 y(In)j(section)g(2,)j(the)c(basic)h(theory)g
(is)h(presen)n(ted,)g(section)f(3)g(addresses)g(practical)g(issues,)0
321 y(and)25 b(implemen)n(tation)e(details)j(are)e(discussed)g(in)i(section)e
(4.)38 b(Finally)-6 b(,)28 b(section)c(5)h(discusses)0 393
y(n)n(umerical)16 b(requiremen)n(ts)f(on)h(the)g(length,)i(width,)g(and)e(in)
n(terp)r(olation)h(accuracy)f(of)h(the)e(\014lter)0 466 y(co)r(e\016cien)n(t)
21 b(table.)0 575 y Fl(2.)26 b(Theory)0 665 y Fj(W)-6 b(e)16
b(review)g(brie\015y)g(the)f(\\analog)i(in)n(terpretation")f(of)h(sampling)f
(rate)g(con)n(v)n(ersion)g(\(Cro)r(c)n(hiere)0 738 y(and)i(Rabiner)h(1983\))g
(on)f(whic)n(h)h(the)e(presen)n(t)h(metho)r(d)f(is)i(based.)28
b(Supp)r(ose)18 b(w)n(e)g(ha)n(v)n(e)g(samples)0 811 y Fh(x)p
Fk(\()p Fh(nT)119 819 y Ff(s)142 811 y Fk(\))26 b Fj(of)h(a)f(con)n(tin)n
(uous)h(absolutely)g(in)n(tegrable)f(signal)i Fh(x)p Fk(\()p
Fh(t)p Fk(\))p Fj(,)e(where)f Fh(t)i Fj(is)g(time)e(in)i(seconds)0
883 y(\(real\),)h Fh(n)f Fj(ranges)g(o)n(v)n(er)g(the)f(in)n(tegers,)i(and)f
Fh(T)1179 891 y Ff(s)1230 883 y Fj(is)g(the)f(sampling)i(p)r(erio)r(d.)43
b(W)-6 b(e)27 b(assume)f Fh(x)p Fk(\()p Fh(t)p Fk(\))0 956
y Fj(is)g(bandlimited)e(to)h Fg(\006)p Fh(F)604 964 y Ff(s)628
956 y Fh(=)p Fk(2)p Fj(,)g(where)f Fh(F)958 964 y Ff(s)1001
956 y Fk(=)19 b(1)p Fh(=T)1151 964 y Ff(s)1199 956 y Fj(is)26
b(the)e(sampling)i(rate.)38 b(If)25 b Fh(X)t Fk(\()p Fh(!)r
Fk(\))g Fj(denotes)f(the)0 1029 y(F)-6 b(ourier)28 b(transform)f(of)h
Fh(x)p Fk(\()p Fh(t)p Fk(\))p Fj(,)g(i.e.,)i Fh(X)t Fk(\()p
Fh(!)r Fk(\))22 b(=)1117 984 y Fe(R)1154 998 y Fd(1)1143 1048
y(\0001)1234 1029 y Fh(x)p Fk(\()p Fh(t)p Fk(\))p Fh(e)1356
1009 y Fd(\000)p Ff(j)r(!)q(t)1458 1029 y Fh(dt)p Fj(,)29 b(then)d(w)n(e)h
(assume)g Fh(X)t Fk(\()p Fh(!)r Fk(\))22 b(=)h(0)j Fj(for)0
1101 y Fg(j)p Fh(!)r Fg(j)j(\025)f Fh(\031)r(F)236 1109 y Ff(s)259
1101 y Fj(.)58 b(Consequen)n(tly)-6 b(,)34 b(Shannon's)e(sampling)g(theorem)d
(giv)n(es)j(us)g(that)f Fh(x)p Fk(\()p Fh(t)p Fk(\))f Fj(can)h(b)r(e)0
1174 y(uniquely)22 b(reconstructed)e(from)i(the)g(samples)g
Fh(x)p Fk(\()p Fh(nT)1322 1182 y Ff(s)1345 1174 y Fk(\))g Fj(via)728
1313 y Fk(^)-31 b Fh(x)p Fk(\()p Fh(t)p Fk(\))838 1282 y Fc(\001)835
1313 y Fk(=)941 1244 y Fd(1)923 1261 y Fe(X)893 1377 y Ff(n)p
Fc(=)p Fd(\0001)1043 1313 y Fh(x)p Fk(\()p Fh(nT)1162 1321
y Ff(s)1185 1313 y Fk(\))p Fh(h)1239 1321 y Ff(s)1262 1313
y Fk(\()p Fh(t)12 b Fg(\000)g Fh(nT)1436 1321 y Ff(s)1460 1313
y Fk(\))j Fg(\021)h Fh(x)p Fk(\()p Fh(t)p Fk(\))9 b Fh(;)626
b Fk(\()p Fj(1)o Fk(\))0 1467 y Fj(where)813 1560 y Fh(h)845
1568 y Ff(s)868 1560 y Fk(\()p Fh(t)p Fk(\))950 1529 y Fc(\001)947
1560 y Fk(=)15 b Fj(sinc)p Fk(\()p Fh(F)1174 1568 y Ff(s)1197
1560 y Fh(t)p Fk(\))1257 1529 y Fc(\001)1254 1560 y Fk(=)1319
1523 y Fj(sin)p Fk(\()p Fh(\031)r(F)1492 1531 y Ff(s)1515 1523
y Fh(t)p Fk(\))p 1319 1547 238 3 v 1381 1598 a Fh(\031)r(F)1451
1606 y Ff(s)1474 1598 y Fh(t)1572 1560 y(:)737 b Fk(\()p Fj(2)o
Fk(\))0 1683 y Fj(T)-6 b(o)25 b(resample)e Fh(x)p Fk(\()p Fh(t)p
Fk(\))g Fj(at)i(a)f(new)g(sampling)h(rate)f Fh(F)1244 1663
y Fd(0)1236 1697 y Ff(s)1277 1683 y Fk(=)19 b(1)p Fh(=T)1435
1663 y Fd(0)1427 1697 y Ff(s)1450 1683 y Fj(,)25 b(w)n(e)f(need)f(only)i(ev)l
(aluate)f(Eq.)h(1)g(at)0 1756 y(in)n(teger)d(m)n(ultiples)g(of)h
Fh(T)622 1736 y Fd(0)614 1769 y Ff(s)638 1756 y Fj(.)0 1846
y(When)f(the)f(new)h(sampling)g(rate)g Fh(F)906 1826 y Fd(0)898
1860 y Ff(s)944 1846 y Fj(is)g(less)h(than)f(the)f(original)j(rate)e
Fh(F)1815 1854 y Ff(s)1838 1846 y Fj(,)h(the)e(lo)n(wpass)j(cuto\013)0
1919 y(m)n(ust)j(b)r(e)f(placed)h(b)r(elo)n(w)g(half)h(the)e(new)h(lo)n(w)n
(er)g(sampling)h(rate.)45 b(Th)n(us,)29 b(in)e(the)g(case)f(of)i(an)0
1992 y(ideal)20 b(lo)n(wpass,)h Fh(h)446 2000 y Ff(s)470 1992
y Fk(\()p Fh(t)p Fk(\))14 b(=)i Fh(min)p Fg(f)p Fk(1)p Fh(;)9
b(F)832 1972 y Fd(0)824 2005 y Ff(s)847 1992 y Fh(=F)911 2000
y Ff(s)934 1992 y Fg(g)p Fj(sinc)o Fk(\()p Fh(min)p Fg(f)p
Fh(F)1259 2000 y Ff(s)1282 1992 y Fh(;)g(F)1350 1972 y Fd(0)1342
2005 y Ff(s)1366 1992 y Fg(g)p Fh(t)p Fk(\))p Fj(,)19 b(where)f(the)h(scale)g
(factor)g(main)n(tains)0 2064 y(unit)n(y)j(gain)h(in)g(the)e(passband.)0
2155 y(A)k(plot)g(of)h(the)e(sinc)h(function)g(sinc)q Fk(\()p
Fh(t)p Fk(\))f Fj(for)h(the)g(\014rst)g(sev)n(en)f(zero-crossings)h(to)g(the)
g(left)g(and)0 2228 y(righ)n(t)e(of)f(the)g(origin)h Fh(t)15
b Fk(=)h(0)22 b Fj(is)g(sho)n(wn)h(in)f(Fig.)i(1.)292 3292
y @beginspecial 110 @llx 18 @lly 437 @urx 202 @ury 3270 @rwi
@setspecial
%%BeginDocument: eps/Sinc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Sinc.draw
%%Creator: Draw
%%CreationDate: Thu Oct 29 19:59:38 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 110 18 437 202
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc closepath
} def /line {
    moveto rlineto stroke
} def /setup {
    setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -5 1 rlineto -3 1 rlineto 1 -2 rlineto -1 -2 rlineto 3 1 rlineto closepath closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def
%%EndSetup
gsave
110 18 327 184 rectclip
110 18 327 184 rectclip
0 0 0 setup
0 0 0 setup
130.000000 23.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 282 174 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 174
%%Creator: Mathematica
%%Title: Clipboard
%%CreationDate: Never Never
%%EndComments
50 dict begin
/Mnodistort true def
/pageDashArray [4] def
/nullDashArray [] def

% Compute the minimum of two numbers.
/Mmin {		% p q Mmin min(p,q)
	2 copy		% p q p q
	gt		% p q p>q?
	{ exch } if	% min(p,q) max(p,q)
	pop		% min(p,q)
} bind def


% Compute the maximum of two numbers.
/Mmax {		% p q Mmax max(p,q)
	2 copy		% p q p q
	lt		% p q p<q?
	{ exch } if	% max(p,q) min(p,q)
	pop		% max(p,q)
} bind def

/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain
	/Courier findfont
def
/Bold
	/Courier-Bold findfont
def
/Italic
	/Courier-Oblique findfont
def
/MathPictureStart {
	gsave
	newpath
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
0 setgray 0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	[
	7 -2 roll
	[ 2 index 2 index
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
	
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	show
	} for
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Mgmatrix
	matrix currentmatrix
	def
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/Mfontsize	12 def
/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Courier findfont 12 scalefont setfont
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
% Scaling calculations
0.5 0.06349 0.11975 0.48357 [
[(-7)] 0.05556 0.10725 0 1 Msboxa
[(-6)] 0.11905 0.10725 0 1 Msboxa
[(-5)] 0.18254 0.10725 0 1 Msboxa
[(-4)] 0.24603 0.10725 0 1 Msboxa
[(-3)] 0.30952 0.10725 0 1 Msboxa
[(-2)] 0.37302 0.10725 0 1 Msboxa
[(-1)] 0.43651 0.10725 0 1 Msboxa
[(1)] 0.56349 0.10725 0 1 Msboxa
[(2)] 0.62698 0.10725 0 1 Msboxa
[(3)] 0.69048 0.10725 0 1 Msboxa
[(4)] 0.75397 0.10725 0 1 Msboxa
[(5)] 0.81746 0.10725 0 1 Msboxa
[(6)] 0.88095 0.10725 0 1 Msboxa
[(7)] 0.94444 0.10725 0 1 Msboxa
[(1)] 0.4875 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.11975 moveto
1 0.11975 lineto
stroke
0.05556 0.1135 moveto
0.05556 0.126 lineto
stroke
0 setgray
[(-7)] 0.05556 0.10725 0 1 Mshowa
0.11905 0.1135 moveto
0.11905 0.126 lineto
stroke
0 setgray
[(-6)] 0.11905 0.10725 0 1 Mshowa
0.18254 0.1135 moveto
0.18254 0.126 lineto
stroke
0 setgray
[(-5)] 0.18254 0.10725 0 1 Mshowa
0.24603 0.1135 moveto
0.24603 0.126 lineto
stroke
0 setgray
[(-4)] 0.24603 0.10725 0 1 Mshowa
0.30952 0.1135 moveto
0.30952 0.126 lineto
stroke
0 setgray
[(-3)] 0.30952 0.10725 0 1 Mshowa
0.37302 0.1135 moveto
0.37302 0.126 lineto
stroke
0 setgray
[(-2)] 0.37302 0.10725 0 1 Mshowa
0.43651 0.1135 moveto
0.43651 0.126 lineto
stroke
0 setgray
[(-1)] 0.43651 0.10725 0 1 Mshowa
0.56349 0.1135 moveto
0.56349 0.126 lineto
stroke
0 setgray
[(1)] 0.56349 0.10725 0 1 Mshowa
0.62698 0.1135 moveto
0.62698 0.126 lineto
stroke
0 setgray
[(2)] 0.62698 0.10725 0 1 Mshowa
0.69048 0.1135 moveto
0.69048 0.126 lineto
stroke
0 setgray
[(3)] 0.69048 0.10725 0 1 Mshowa
0.75397 0.1135 moveto
0.75397 0.126 lineto
stroke
0 setgray
[(4)] 0.75397 0.10725 0 1 Mshowa
0.81746 0.1135 moveto
0.81746 0.126 lineto
stroke
0 setgray
[(5)] 0.81746 0.10725 0 1 Mshowa
0.88095 0.1135 moveto
0.88095 0.126 lineto
stroke
0 setgray
[(6)] 0.88095 0.10725 0 1 Mshowa
0.94444 0.1135 moveto
0.94444 0.126 lineto
stroke
0 setgray
[(7)] 0.94444 0.10725 0 1 Mshowa
0.5 0 moveto
0.5 0.61803 lineto
stroke
0.49375 0.60332 moveto
0.50625 0.60332 lineto
stroke
0 setgray
[(1)] 0.4875 0.60332 1 0 Mshowa
grestore
grestore
0 0 moveto
1 0 lineto
1 0.618034 lineto
0 0.618034 lineto
closepath
clip
newpath
0 setgray
gsave
gsave
0.004 setlinewidth
0.02381 0.09923 moveto
0.02505 0.09921 lineto
0.02629 0.09928 lineto
0.02753 0.09942 lineto
0.02877 0.09963 lineto
0.03001 0.09993 lineto
0.03125 0.1003 lineto
0.03373 0.10127 lineto
0.03621 0.10252 lineto
0.03869 0.10405 lineto
0.04365 0.10785 lineto
0.06349 0.12832 lineto
0.06845 0.13324 lineto
0.07341 0.13746 lineto
0.07589 0.13922 lineto
0.07837 0.14071 lineto
0.08085 0.14189 lineto
0.08209 0.14236 lineto
0.08333 0.14276 lineto
0.08457 0.14306 lineto
0.08581 0.14328 lineto
0.08705 0.14342 lineto
0.08829 0.14346 lineto
0.08953 0.14342 lineto
0.09077 0.14328 lineto
0.09201 0.14306 lineto
0.09325 0.14274 lineto
0.09573 0.14185 lineto
0.09821 0.14061 lineto
0.10317 0.13717 lineto
0.10813 0.13257 lineto
0.1131 0.12708 lineto
0.12302 0.11469 lineto
0.13294 0.10286 lineto
0.1379 0.09807 lineto
0.14038 0.09611 lineto
0.14286 0.09447 lineto
0.1441 0.09379 lineto
0.14534 0.09319 lineto
0.14658 0.0927 lineto
0.14782 0.0923 lineto
0.14906 0.09201 lineto
0.1503 0.09181 lineto
0.15154 0.09172 lineto
0.15278 0.09174 lineto
0.15402 0.09186 lineto
0.15526 0.09209 lineto
0.1565 0.09243 lineto
0.15774 0.09287 lineto
0.16022 0.09406 lineto
Mistroke
0.1627 0.09566 lineto
0.16766 0.1 lineto
0.17262 0.10568 lineto
0.18254 0.11975 lineto
0.19246 0.13473 lineto
0.19742 0.14144 lineto
0.20238 0.14705 lineto
0.20486 0.14933 lineto
0.20734 0.15119 lineto
0.20858 0.15196 lineto
0.20982 0.15261 lineto
0.21106 0.15315 lineto
0.2123 0.15356 lineto
0.21354 0.15385 lineto
0.21478 0.15401 lineto
0.21602 0.15404 lineto
0.21726 0.15394 lineto
0.2185 0.15372 lineto
0.21974 0.15336 lineto
0.22098 0.15287 lineto
0.22222 0.15226 lineto
0.2247 0.15064 lineto
0.22718 0.14852 lineto
0.23214 0.1429 lineto
0.24206 0.12714 lineto
0.25198 0.10831 lineto
0.25694 0.09908 lineto
0.2619 0.09073 lineto
0.26687 0.0838 lineto
0.26935 0.08102 lineto
0.27183 0.07876 lineto
0.27307 0.07785 lineto
0.27431 0.07709 lineto
0.27555 0.07648 lineto
0.27679 0.07602 lineto
0.27803 0.07573 lineto
0.27927 0.0756 lineto
0.28051 0.07563 lineto
0.28175 0.07583 lineto
0.28299 0.0762 lineto
0.28423 0.07674 lineto
0.28547 0.07745 lineto
0.28671 0.07833 lineto
0.28919 0.08059 lineto
0.29167 0.08349 lineto
0.29663 0.09113 lineto
0.30159 0.1009 lineto
0.31151 0.12483 lineto
0.32143 0.15016 lineto
0.32639 0.16146 lineto
Mistroke
0.33135 0.17086 lineto
0.33383 0.17462 lineto
0.33631 0.17767 lineto
0.33755 0.17889 lineto
0.33879 0.17992 lineto
0.34003 0.18073 lineto
0.34127 0.18132 lineto
0.34251 0.18169 lineto
0.34375 0.18183 lineto
0.34499 0.18173 lineto
0.34623 0.1814 lineto
0.34747 0.18083 lineto
0.34871 0.18002 lineto
0.35119 0.17767 lineto
0.35367 0.17436 lineto
0.35615 0.17009 lineto
0.36111 0.15884 lineto
0.37103 0.12718 lineto
0.38095 0.08834 lineto
0.39087 0.05052 lineto
0.39583 0.03494 lineto
0.39831 0.02849 lineto
0.40079 0.02313 lineto
0.40203 0.0209 lineto
0.40327 0.01899 lineto
0.40451 0.01741 lineto
0.40575 0.01618 lineto
0.40699 0.01531 lineto
0.40823 0.01482 lineto
0.40947 0.01472 lineto
0.41071 0.01501 lineto
0.41195 0.01571 lineto
0.41319 0.01683 lineto
0.41443 0.01837 lineto
0.41567 0.02034 lineto
0.41815 0.02562 lineto
0.42063 0.03268 lineto
0.4256 0.05222 lineto
0.43056 0.0789 lineto
0.44048 0.15178 lineto
0.46032 0.34728 lineto
0.47024 0.44654 lineto
0.4752 0.49076 lineto
0.48016 0.5293 lineto
0.48512 0.56079 lineto
0.4876 0.57354 lineto
0.49008 0.58413 lineto
0.49256 0.59247 lineto
0.4938 0.59577 lineto
0.49504 0.59848 lineto
Mistroke
0.49628 0.60059 lineto
0.49752 0.60211 lineto
0.49876 0.60302 lineto
0.5 0.60332 lineto
0.50124 0.60302 lineto
0.50248 0.60211 lineto
0.50372 0.60059 lineto
0.50496 0.59848 lineto
0.50744 0.59247 lineto
0.50992 0.58413 lineto
0.51488 0.56079 lineto
0.51984 0.5293 lineto
0.52976 0.44654 lineto
0.53968 0.34728 lineto
0.5496 0.24474 lineto
0.55952 0.15178 lineto
0.56448 0.11232 lineto
0.56944 0.0789 lineto
0.5744 0.05222 lineto
0.57688 0.04155 lineto
0.57937 0.03268 lineto
0.58185 0.02562 lineto
0.58309 0.02276 lineto
0.58433 0.02034 lineto
0.58557 0.01837 lineto
0.58681 0.01683 lineto
0.58805 0.01571 lineto
0.58929 0.01501 lineto
0.59053 0.01472 lineto
0.59177 0.01482 lineto
0.59301 0.01531 lineto
0.59425 0.01618 lineto
0.59549 0.01741 lineto
0.59673 0.01899 lineto
0.59921 0.02313 lineto
0.60169 0.02849 lineto
0.60417 0.03494 lineto
0.60913 0.05052 lineto
0.61905 0.08834 lineto
0.62897 0.12718 lineto
0.63393 0.14433 lineto
0.63889 0.15884 lineto
0.64137 0.16491 lineto
0.64385 0.17009 lineto
0.64633 0.17436 lineto
0.64881 0.17767 lineto
0.65005 0.17897 lineto
0.65129 0.18002 lineto
0.65253 0.18083 lineto
0.65377 0.1814 lineto
Mistroke
0.65501 0.18173 lineto
0.65625 0.18183 lineto
0.65749 0.18169 lineto
0.65873 0.18132 lineto
0.65997 0.18073 lineto
0.66121 0.17992 lineto
0.66369 0.17767 lineto
0.66617 0.17462 lineto
0.66865 0.17086 lineto
0.67857 0.15016 lineto
0.68849 0.12483 lineto
0.69841 0.1009 lineto
0.70337 0.09113 lineto
0.70585 0.08702 lineto
0.70833 0.08349 lineto
0.71081 0.08059 lineto
0.71205 0.07938 lineto
0.71329 0.07833 lineto
0.71453 0.07745 lineto
0.71577 0.07674 lineto
0.71701 0.0762 lineto
0.71825 0.07583 lineto
0.71949 0.07563 lineto
0.72073 0.0756 lineto
0.72197 0.07573 lineto
0.72321 0.07602 lineto
0.72445 0.07648 lineto
0.72569 0.07709 lineto
0.72817 0.07876 lineto
0.73065 0.08102 lineto
0.73313 0.0838 lineto
0.7381 0.09073 lineto
0.74802 0.10831 lineto
0.75794 0.12714 lineto
0.7629 0.13565 lineto
0.76786 0.1429 lineto
0.77034 0.14593 lineto
0.77282 0.14852 lineto
0.7753 0.15064 lineto
0.77654 0.15151 lineto
0.77778 0.15226 lineto
0.77902 0.15287 lineto
0.78026 0.15336 lineto
0.7815 0.15372 lineto
0.78274 0.15394 lineto
0.78398 0.15404 lineto
0.78522 0.15401 lineto
0.78646 0.15385 lineto
0.7877 0.15356 lineto
0.78894 0.15315 lineto
Mistroke
0.79018 0.15261 lineto
0.79266 0.15119 lineto
0.79514 0.14933 lineto
0.79762 0.14705 lineto
0.80754 0.13473 lineto
0.81746 0.11975 lineto
0.82738 0.10568 lineto
0.83234 0.1 lineto
0.83482 0.09765 lineto
0.8373 0.09566 lineto
0.83978 0.09406 lineto
0.84102 0.09341 lineto
0.84226 0.09287 lineto
0.8435 0.09243 lineto
0.84474 0.09209 lineto
0.84598 0.09186 lineto
0.84722 0.09174 lineto
0.84846 0.09172 lineto
0.8497 0.09181 lineto
0.85094 0.09201 lineto
0.85218 0.0923 lineto
0.85342 0.0927 lineto
0.85466 0.09319 lineto
0.85714 0.09447 lineto
0.8621 0.09807 lineto
0.86706 0.10286 lineto
0.87698 0.11469 lineto
0.8869 0.12708 lineto
0.89187 0.13257 lineto
0.89683 0.13717 lineto
0.89931 0.13905 lineto
0.90179 0.14061 lineto
0.90427 0.14185 lineto
0.90551 0.14234 lineto
0.90675 0.14274 lineto
0.90799 0.14306 lineto
0.90923 0.14328 lineto
0.91047 0.14342 lineto
0.91171 0.14346 lineto
0.91295 0.14342 lineto
0.91419 0.14328 lineto
0.91543 0.14306 lineto
0.91667 0.14276 lineto
0.91915 0.14189 lineto
0.92163 0.14071 lineto
0.92659 0.13746 lineto
0.93651 0.12832 lineto
0.97619 0.09923 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd
%%EPS Trailer
end
 
%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
gsave
/Times-Roman findfont 10 scalefont [1 0 0 -1 0 0] makefont
89
exch
defineuserobject
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 118] concat
89 execuserobject setfont
0 nxsetgray
416 62 moveto (. . .) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 106] concat
89 execuserobject setfont
0 nxsetgray
408 56 moveto (. . .) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 118] concat
89 execuserobject setfont
0 nxsetgray
117 62 moveto (. . .) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 106] concat
89 execuserobject setfont
0 nxsetgray
126 56 moveto (. . .) show
grestore
grestore
grestore
0 setgray
0.333333 setgray
gsave
0 0 540 216 rectclip
[1 0 0 -1 0 216] concat
grestore
grestore
%%Trailer
%%DocumentFonts: Times-Roman
%%EndDocument
 @endspecial 35 x Fb(Figure)h(1.)e Fk(The)c(sinc)i(function)d(sinc\()p
Fh(t)p Fk(\))1194 3296 y Fc(\001)1191 3327 y Fk(=)h(sin\()p
Fh(\031)r(t)p Fk(\))p Fh(=)p Fk(\()p Fh(\031)r(t)p Fk(\))e(plotted)i(for)g
(sev)n(en)h(zero-)292 3400 y(crossings)12 b(to)h(the)h(left)f(and)h(righ)n
(t.)23 b(The)13 b(p)r(eak)g(is)h(at)g(amplitude)e(1)i(and)f(zero-crossings)
1186 3533 y(2)p eop
%%Page: 3 3
2 bop 292 123 a Fk(o)r(ccur)15 b(at)i(all)h(nonzero)e(in)n(tegers.)23
b(The)17 b(sinc)g(function)g(can)f(b)r(e)h(seen)f(as)i(a)f(h)n(yp)r(erb)r
(oli-)292 200 y(cally)h(w)n(eigh)n(ted)g(sine)g(function)f(with)h(its)g(zero)
f(at)h(the)f(origin)h(canceled)e(out.)0 328 y Fj(If)23 b(\\)p
Fg(\003)p Fj(")f(denotes)g(the)f(con)n(v)n(olution)j(op)r(eration)e(for)h
(digital)h(signals,)h(then)c(the)h(summation)g(in)0 405 y(Eq.)h(1)f(can)g(b)r
(e)f(written)h(as)h Fk(\()p Fh(x)11 b Fg(\003)h Fh(h)840 413
y Ff(s)864 405 y Fk(\)\()p Fh(t)p Fk(\))p Fj(.)0 507 y(Equation)20
b(1)f(can)g(b)r(e)f(in)n(terpreted)g(as)h(a)h(sup)r(erp)r(ositon)f(of)g
(shifted)h(and)f(scaled)g(sinc)g(functions)0 584 y Fh(h)32
592 y Ff(s)56 584 y Fj(.)32 b(A)22 b(sinc)h(function)g(instance)g(is)g
(translated)g(to)g(eac)n(h)f(signal)i(sample)f(and)g(scaled)f(b)n(y)h(that)0
660 y(sample,)d(and)f(the)f(instances)g(are)h(all)h(added)e(together.)28
b(Note)18 b(that)h(zero-crossings)g(of)h(sinc)p Fk(\()p Fh(z)r
Fk(\))0 737 y Fj(o)r(ccur)25 b(at)i(all)g(in)n(tegers)f(except)f
Fh(z)e Fk(=)e(0)p Fj(.)42 b(That)26 b(means)g(at)g(time)g Fh(t)21
b Fk(=)g Fh(nT)1818 745 y Ff(s)1842 737 y Fj(,)28 b(\(i.e.,)g(on)f(a)f
(sample)0 813 y(instan)n(t\),)31 b(the)d(only)h(con)n(tribution)g(to)f(the)g
(sum)g(is)h(the)f(single)h(sample)f Fh(x)p Fk(\()p Fh(nT)2021
821 y Ff(s)2045 813 y Fk(\))p Fj(.)48 b(All)30 b(other)0 890
y(samples)21 b(con)n(tribute)g(sinc)h(functions)g(whic)n(h)f(ha)n(v)n(e)h(a)g
(zero-crossing)f(at)h(time)f Fh(t)15 b Fk(=)g Fh(nT)2163 898
y Ff(s)2188 890 y Fj(.)29 b(Th)n(us,)0 966 y(the)21 b(in)n(terp)r(olation)i
(go)r(es)g(precisely)e(through)h(the)g(existing)g(samples,)h(as)f(it)h
(should.)0 1069 y(A)16 b(plot)g(indicating)g(ho)n(w)h(sinc)e(functions)h(sum)
g(together)f(to)g(reconstruct)g(bandlimited)g(signals)0 1145
y(is)24 b(sho)n(wn)f(in)g(Fig.)i(2.)33 b(The)22 b(\014gure)h(sho)n(ws)h(a)f
(sup)r(erp)r(osition)g(of)h(\014v)n(e)f(sinc)g(functions,)h(eac)n(h)e(at)0
1222 y(unit)g(amplitude,)g(and)g(displaced)g(b)n(y)g(one-sample)g(in)n(terv)l
(als.)31 b(These)21 b(sinc)h(functions)g(w)n(ould)0 1298 y(b)r(e)31
b(used)h(to)g(reconstruct)e(the)i(bandlimited)g(in)n(terp)r(olation)g(of)h
(the)e(discrete-time)g(signal)0 1375 y Fh(x)f Fk(=)g([)p Fh(:)9
b(:)g(:)i(;)e Fk(0)p Fh(;)g Fk(1)p Fh(;)g Fk(1)p Fh(;)g Fk(1)p
Fh(;)g Fk(1)p Fh(;)g Fk(1)p Fh(;)g Fk(0)p Fh(;)g(:)g(:)g(:)t
Fk(])p Fj(.)62 b(Note)32 b(that)g(at)h(eac)n(h)f(sampling)h(instan)n(t)g
Fh(t)d Fk(=)g Fh(nT)2064 1383 y Ff(s)2088 1375 y Fj(,)36 b(the)c(solid)0
1451 y(line)g(passes)f(exactly)g(through)g(the)g(tip)h(of)f(the)g(sinc)g
(function)h(for)g(that)f(sample;)36 b(this)31 b(is)0 1528 y(just)e(a)h
(restatemen)n(t)d(of)j(the)e(fact)h(that)h(the)e(in)n(terp)r(olation)i
(passes)g(through)f(the)f(existing)0 1605 y(samples.)k(Since)22
b(the)g(nonzero)g(samples)g(of)i(the)e(digital)i(signal)g(are)f(all)h
Fk(1)p Fj(,)f(w)n(e)f(migh)n(t)h(exp)r(ect)0 1681 y(the)c(in)n(terp)r(olated)
h(signal)i(to)e(b)r(e)g(v)n(ery)g(close)g(to)g Fk(1)g Fj(o)n(v)n(er)g(the)f
(nonzero)h(in)n(terv)l(al;)i(ho)n(w)n(ev)n(er,)f(this)0 1758
y(is)j(far)g(from)f(the)f(case.)33 b(The)23 b(deviation)h(from)f(unit)n(y)g
(b)r(et)n(w)n(een)f(samples)h(can)g(b)r(e)f(though)n(t)h(of)0
1834 y(as)e(\\o)n(v)n(ersho)r(ot")g(or)g(\\ringing")h(of)f(the)f(lo)n(wpass)i
(\014lter)e(whic)n(h)h(cuts)f(o\013)g(at)h(half)h(the)d(sampling)0
1911 y(rate,)j(or)h(it)f(can)g(b)r(e)f(considered)g(a)i(\\Gibbs)g
(phenomenon")d(asso)r(ciated)i(with)h(bandlimiting.)375 2611
y @beginspecial 123 @llx 16 @lly 420 @urx 133 @ury 2970 @rwi
@setspecial
%%BeginDocument: eps/SincSum.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: SincSum.draw
%%Creator: Draw
%%CreationDate: Fri Nov  6 12:48:13 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 123 16 420 133
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc closepath
} def /line {
    moveto rlineto stroke
} def /setup {
    setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -5 1 rlineto -3 1 rlineto 1 -2 rlineto -1 -2 rlineto 3 1 rlineto closepath closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def
%%EndSetup
gsave
123 16 297 117 rectclip
123 16 297 117 rectclip
0 0 0 setup
129.000000 22.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 285 106 rectclip
gsave
1.010638 0.609195 scale

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 174
%%Creator: Mathematica
%%Title: Clipboard
%%CreationDate: Never Never
%%EndComments
50 dict begin
/Mnodistort true def
/pageDashArray [4] def
/nullDashArray [] def

% Compute the minimum of two numbers.
/Mmin {		% p q Mmin min(p,q)
	2 copy		% p q p q
	gt		% p q p>q?
	{ exch } if	% min(p,q) max(p,q)
	pop		% min(p,q)
} bind def


% Compute the maximum of two numbers.
/Mmax {		% p q Mmax max(p,q)
	2 copy		% p q p q
	lt		% p q p<q?
	{ exch } if	% max(p,q) min(p,q)
	pop		% max(p,q)
} bind def

/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain
	/Courier findfont
def
/Bold
	/Courier-Bold findfont
def
/Italic
	/Courier-Oblique findfont
def
/MathPictureStart {
	gsave
	newpath
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
0 setgray 0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	[
	7 -2 roll
	[ 2 index 2 index
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
	
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	show
	} for
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Mgmatrix
	matrix currentmatrix
	def
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/Mfontsize	12 def
/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Courier findfont 12 scalefont setfont
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
% Scaling calculations
0.37302 0.06349 0.11144 0.44526 [
[ 0 0 0 0 ]
[ 1 0.618034 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
grestore
grestore
0 0 moveto
1 0 lineto
1 0.618034 lineto
0 0.618034 lineto
closepath
clip
newpath
0 setgray
gsave
gsave
gsave
gsave
[ 0.01 0.01 ] 0 setdash
gsave
0.004 setlinewidth
0.02381 0.08567 moveto
0.02505 0.08563 lineto
0.02629 0.08568 lineto
0.02753 0.08583 lineto
0.02877 0.08608 lineto
0.03001 0.08643 lineto
0.03125 0.08687 lineto
0.03373 0.08805 lineto
0.03621 0.0896 lineto
0.03869 0.0915 lineto
0.04365 0.09626 lineto
0.06349 0.12257 lineto
0.06845 0.12904 lineto
0.07341 0.13466 lineto
0.07589 0.13703 lineto
0.07837 0.13905 lineto
0.08085 0.14069 lineto
0.08209 0.14135 lineto
0.08333 0.14191 lineto
0.08457 0.14235 lineto
0.08581 0.14269 lineto
0.08705 0.14291 lineto
0.08829 0.14301 lineto
0.08953 0.14299 lineto
0.09077 0.14285 lineto
0.09201 0.1426 lineto
0.09325 0.14222 lineto
0.09449 0.14173 lineto
0.09573 0.14111 lineto
0.09821 0.13953 lineto
0.10069 0.13749 lineto
0.10317 0.13502 lineto
0.1131 0.12149 lineto
0.12302 0.10442 lineto
0.13294 0.08766 lineto
0.1379 0.0807 lineto
0.14038 0.07778 lineto
0.14286 0.07532 lineto
0.14534 0.07335 lineto
0.14658 0.07256 lineto
0.14782 0.07191 lineto
0.14906 0.07141 lineto
0.1503 0.07105 lineto
0.15154 0.07084 lineto
0.15278 0.07078 lineto
0.15402 0.07087 lineto
0.15526 0.07112 lineto
0.1565 0.07152 lineto
0.15774 0.07208 lineto
0.16022 0.07367 lineto
Mistroke
0.1627 0.07586 lineto
0.16766 0.08201 lineto
0.17262 0.09027 lineto
0.18254 0.11144 lineto
0.19246 0.13493 lineto
0.19742 0.14586 lineto
0.20238 0.15529 lineto
0.20486 0.15924 lineto
0.20734 0.16258 lineto
0.20982 0.16524 lineto
0.21106 0.1663 lineto
0.2123 0.16716 lineto
0.21354 0.16783 lineto
0.21478 0.16829 lineto
0.21602 0.16855 lineto
0.21726 0.16859 lineto
0.2185 0.16842 lineto
0.21974 0.16802 lineto
0.22098 0.16741 lineto
0.22222 0.16657 lineto
0.2247 0.16423 lineto
0.22718 0.161 lineto
0.23214 0.15196 lineto
0.2371 0.13975 lineto
0.24206 0.12485 lineto
0.25198 0.08986 lineto
0.2619 0.05417 lineto
0.26687 0.03873 lineto
0.26935 0.03209 lineto
0.27183 0.02634 lineto
0.27431 0.02162 lineto
0.27555 0.01968 lineto
0.27679 0.01804 lineto
0.27803 0.01671 lineto
0.27927 0.01571 lineto
0.28051 0.01505 lineto
0.28175 0.01474 lineto
0.28299 0.01479 lineto
0.28423 0.01521 lineto
0.28547 0.016 lineto
0.28671 0.01719 lineto
0.28795 0.01877 lineto
0.28919 0.02075 lineto
0.29167 0.02593 lineto
0.29415 0.03277 lineto
0.29663 0.04127 lineto
0.30159 0.06323 lineto
0.30655 0.09158 lineto
0.31151 0.12578 lineto
0.32143 0.20835 lineto
Mistroke
0.34127 0.3949 lineto
0.34623 0.43733 lineto
0.35119 0.47506 lineto
0.35615 0.50679 lineto
0.35863 0.52005 lineto
0.36111 0.5314 lineto
0.36359 0.54074 lineto
0.36483 0.54463 lineto
0.36607 0.54799 lineto
0.36731 0.55081 lineto
0.36855 0.55309 lineto
0.36979 0.55482 lineto
0.37103 0.55599 lineto
0.37227 0.5566 lineto
0.37351 0.55666 lineto
0.37475 0.55615 lineto
0.37599 0.55509 lineto
0.37723 0.55348 lineto
0.37847 0.55131 lineto
0.38095 0.54535 lineto
0.38343 0.53725 lineto
0.38591 0.52709 lineto
0.39087 0.50099 lineto
0.40079 0.42917 lineto
0.42063 0.24507 lineto
0.43056 0.15684 lineto
0.43552 0.11851 lineto
0.44048 0.08542 lineto
0.44544 0.05831 lineto
0.44792 0.04716 lineto
0.4504 0.03767 lineto
0.45288 0.02983 lineto
0.45536 0.02366 lineto
0.4566 0.02119 lineto
0.45784 0.01913 lineto
0.45908 0.01747 lineto
0.46032 0.01621 lineto
0.46156 0.01534 lineto
0.4628 0.01484 lineto
0.46404 0.01472 lineto
0.46528 0.01496 lineto
0.46652 0.01555 lineto
0.46776 0.01649 lineto
0.469 0.01775 lineto
0.47024 0.01933 lineto
0.47272 0.02338 lineto
0.4752 0.02852 lineto
0.48016 0.04161 lineto
0.5 0.11144 lineto
0.50496 0.12801 lineto
Mistroke
0.50992 0.14243 lineto
0.51488 0.15404 lineto
0.51736 0.15865 lineto
0.51984 0.1624 lineto
0.52108 0.16395 lineto
0.52232 0.16528 lineto
0.52356 0.16638 lineto
0.5248 0.16726 lineto
0.52604 0.16792 lineto
0.52728 0.16836 lineto
0.52852 0.16857 lineto
0.52976 0.16857 lineto
0.531 0.16836 lineto
0.53224 0.16794 lineto
0.53348 0.16731 lineto
0.53472 0.16649 lineto
0.5372 0.16426 lineto
0.53968 0.16132 lineto
0.54464 0.15355 lineto
0.5496 0.14377 lineto
0.55952 0.12085 lineto
0.56944 0.09814 lineto
0.5744 0.08847 lineto
0.57937 0.0806 lineto
0.58185 0.07747 lineto
0.58433 0.07491 lineto
0.58557 0.07386 lineto
0.58681 0.07296 lineto
0.58805 0.07221 lineto
0.58929 0.07162 lineto
0.59053 0.07119 lineto
0.59177 0.07091 lineto
0.59301 0.07078 lineto
0.59425 0.07081 lineto
0.59549 0.07099 lineto
0.59673 0.07132 lineto
0.59797 0.0718 lineto
0.59921 0.07242 lineto
0.60169 0.07407 lineto
0.60417 0.07625 lineto
0.60913 0.08198 lineto
0.61905 0.09744 lineto
0.62897 0.11489 lineto
0.63393 0.12306 lineto
0.63889 0.13024 lineto
0.64385 0.13606 lineto
0.64633 0.13836 lineto
0.64881 0.14022 lineto
0.65005 0.14097 lineto
0.65129 0.14161 lineto
Mistroke
0.65253 0.14213 lineto
0.65377 0.14253 lineto
0.65501 0.14281 lineto
0.65625 0.14297 lineto
0.65749 0.14301 lineto
0.65873 0.14294 lineto
0.65997 0.14274 lineto
0.66121 0.14243 lineto
0.66245 0.14201 lineto
0.66369 0.14147 lineto
0.66617 0.14008 lineto
0.66865 0.13829 lineto
0.67361 0.13362 lineto
0.67857 0.1278 lineto
0.68849 0.11424 lineto
0.69841 0.10086 lineto
0.70337 0.09521 lineto
0.70585 0.0928 lineto
0.70833 0.0907 lineto
0.71081 0.08893 lineto
0.71329 0.08753 lineto
0.71453 0.08698 lineto
0.71577 0.08651 lineto
0.71701 0.08615 lineto
0.71825 0.08588 lineto
0.71949 0.0857 lineto
0.72073 0.08563 lineto
0.72197 0.08565 lineto
0.72321 0.08578 lineto
0.72445 0.08599 lineto
0.72569 0.0863 lineto
0.72817 0.08719 lineto
0.73065 0.08844 lineto
0.73313 0.09001 lineto
0.7381 0.09401 lineto
0.75794 0.116 lineto
0.7629 0.12131 lineto
0.76786 0.1259 lineto
0.77034 0.12784 lineto
0.77282 0.12952 lineto
0.7753 0.1309 lineto
0.77654 0.13148 lineto
0.77778 0.13198 lineto
0.77902 0.1324 lineto
0.78026 0.13274 lineto
0.7815 0.13299 lineto
0.78274 0.13317 lineto
0.78398 0.13326 lineto
0.78522 0.13327 lineto
0.78646 0.13319 lineto
Mistroke
0.7877 0.13304 lineto
0.78894 0.1328 lineto
0.79018 0.13249 lineto
0.79266 0.13163 lineto
0.79514 0.13048 lineto
0.79762 0.12906 lineto
0.80754 0.1212 lineto
0.81746 0.11144 lineto
0.82738 0.1021 lineto
0.83234 0.09828 lineto
0.83482 0.09669 lineto
0.8373 0.09533 lineto
0.83978 0.09422 lineto
0.84102 0.09377 lineto
0.84226 0.09338 lineto
0.8435 0.09307 lineto
0.84474 0.09283 lineto
0.84598 0.09266 lineto
0.84722 0.09256 lineto
0.84846 0.09253 lineto
0.8497 0.09257 lineto
0.85094 0.09268 lineto
0.85218 0.09286 lineto
0.85342 0.09312 lineto
0.85466 0.09343 lineto
0.85714 0.09427 lineto
0.85962 0.09535 lineto
0.8621 0.09666 lineto
0.86706 0.09989 lineto
0.87698 0.10796 lineto
0.8869 0.11652 lineto
0.89187 0.12036 lineto
0.89683 0.12359 lineto
0.89931 0.12492 lineto
0.90179 0.12604 lineto
0.90427 0.12693 lineto
0.90551 0.12728 lineto
0.90675 0.12757 lineto
0.90799 0.12781 lineto
0.90923 0.12798 lineto
0.91047 0.12808 lineto
0.91171 0.12813 lineto
0.91295 0.12811 lineto
0.91419 0.12802 lineto
0.91543 0.12788 lineto
0.91667 0.12768 lineto
0.91915 0.12709 lineto
0.92163 0.12627 lineto
0.92659 0.12401 lineto
0.93155 0.12104 lineto
Mistroke
0.93651 0.11755 lineto
0.97619 0.09652 lineto
Mfstroke
grestore
grestore
gsave
[ 0.01 0.01 ] 0 setdash
gsave
0.004 setlinewidth
0.02381 0.13325 moveto
0.02505 0.13327 lineto
0.02629 0.13321 lineto
0.02753 0.13307 lineto
0.02877 0.13285 lineto
0.03001 0.13254 lineto
0.03125 0.13216 lineto
0.03373 0.13114 lineto
0.03621 0.12982 lineto
0.03869 0.1282 lineto
0.04365 0.12417 lineto
0.06349 0.10221 lineto
0.06845 0.09688 lineto
0.07341 0.09228 lineto
0.07589 0.09036 lineto
0.07837 0.08873 lineto
0.08085 0.08742 lineto
0.08209 0.08689 lineto
0.08333 0.08645 lineto
0.08457 0.0861 lineto
0.08581 0.08585 lineto
0.08705 0.08569 lineto
0.08829 0.08563 lineto
0.08953 0.08566 lineto
0.09077 0.0858 lineto
0.09201 0.08603 lineto
0.09325 0.08635 lineto
0.09573 0.0873 lineto
0.09821 0.08862 lineto
0.10317 0.09235 lineto
0.10813 0.09735 lineto
0.1131 0.10336 lineto
0.12302 0.11704 lineto
0.13294 0.13025 lineto
0.1379 0.13565 lineto
0.14038 0.13788 lineto
0.14286 0.13975 lineto
0.14534 0.14123 lineto
0.14658 0.14181 lineto
0.14782 0.14227 lineto
0.14906 0.14263 lineto
0.1503 0.14287 lineto
0.15154 0.143 lineto
0.15278 0.143 lineto
0.15402 0.14289 lineto
0.15526 0.14266 lineto
0.1565 0.14231 lineto
0.15774 0.14183 lineto
0.16022 0.14053 lineto
0.1627 0.13877 lineto
Mistroke
0.16766 0.13392 lineto
0.17262 0.12752 lineto
0.18254 0.11144 lineto
0.19246 0.09406 lineto
0.19742 0.08616 lineto
0.20238 0.07948 lineto
0.20486 0.07674 lineto
0.20734 0.07447 lineto
0.20858 0.07352 lineto
0.20982 0.07271 lineto
0.21106 0.07203 lineto
0.2123 0.0715 lineto
0.21354 0.07111 lineto
0.21478 0.07087 lineto
0.21602 0.07078 lineto
0.21726 0.07084 lineto
0.2185 0.07106 lineto
0.21974 0.07143 lineto
0.22098 0.07196 lineto
0.22222 0.07264 lineto
0.2247 0.07447 lineto
0.22718 0.07691 lineto
0.23214 0.08351 lineto
0.2371 0.09215 lineto
0.24206 0.10241 lineto
0.25198 0.1256 lineto
0.2619 0.14788 lineto
0.26687 0.15694 lineto
0.26935 0.16065 lineto
0.27183 0.16373 lineto
0.27307 0.16501 lineto
0.27431 0.1661 lineto
0.27555 0.16701 lineto
0.27679 0.16771 lineto
0.27803 0.16822 lineto
0.27927 0.16851 lineto
0.28051 0.1686 lineto
0.28175 0.16847 lineto
0.28299 0.16812 lineto
0.28423 0.16755 lineto
0.28547 0.16676 lineto
0.28671 0.16574 lineto
0.28919 0.16305 lineto
0.29167 0.15947 lineto
0.29663 0.14976 lineto
0.30159 0.13696 lineto
0.32143 0.068 lineto
0.32639 0.05089 lineto
0.33135 0.03597 lineto
0.33383 0.02967 lineto
Mistroke
0.33631 0.02432 lineto
0.33879 0.02004 lineto
0.34003 0.01834 lineto
0.34127 0.01695 lineto
0.34251 0.01589 lineto
0.34375 0.01516 lineto
0.34499 0.01477 lineto
0.34623 0.01475 lineto
0.34747 0.01509 lineto
0.34871 0.01581 lineto
0.34995 0.01692 lineto
0.35119 0.01842 lineto
0.35367 0.02262 lineto
0.35615 0.02847 lineto
0.35863 0.03597 lineto
0.36111 0.04513 lineto
0.36607 0.0684 lineto
0.37103 0.09797 lineto
0.38095 0.17343 lineto
0.40079 0.35857 lineto
0.41071 0.44529 lineto
0.41567 0.48193 lineto
0.42063 0.51232 lineto
0.42312 0.52482 lineto
0.4256 0.53538 lineto
0.42808 0.54389 lineto
0.42932 0.54736 lineto
0.43056 0.55029 lineto
0.4318 0.55268 lineto
0.43304 0.55451 lineto
0.43428 0.5558 lineto
0.43552 0.55652 lineto
0.43676 0.55669 lineto
0.438 0.5563 lineto
0.43924 0.55535 lineto
0.44048 0.55385 lineto
0.44172 0.55179 lineto
0.44296 0.54919 lineto
0.44544 0.54236 lineto
0.44792 0.53343 lineto
0.4504 0.52247 lineto
0.46032 0.46062 lineto
0.48016 0.28285 lineto
0.49008 0.19062 lineto
0.5 0.11144 lineto
0.50496 0.0795 lineto
0.50992 0.05366 lineto
0.5124 0.04317 lineto
0.51488 0.03433 lineto
0.51736 0.02716 lineto
Mistroke
0.51984 0.02165 lineto
0.52108 0.01951 lineto
0.52232 0.01777 lineto
0.52356 0.01643 lineto
0.5248 0.01548 lineto
0.52604 0.01491 lineto
0.52728 0.01472 lineto
0.52852 0.01488 lineto
0.52976 0.01541 lineto
0.531 0.01627 lineto
0.53224 0.01747 lineto
0.53472 0.02081 lineto
0.5372 0.02531 lineto
0.53968 0.03086 lineto
0.55952 0.09717 lineto
0.56944 0.13109 lineto
0.5744 0.14499 lineto
0.57688 0.15088 lineto
0.57937 0.15598 lineto
0.58185 0.16025 lineto
0.58433 0.16366 lineto
0.58557 0.16503 lineto
0.58681 0.16618 lineto
0.58805 0.1671 lineto
0.58929 0.16781 lineto
0.59053 0.16829 lineto
0.59177 0.16855 lineto
0.59301 0.16859 lineto
0.59425 0.16842 lineto
0.59549 0.16804 lineto
0.59673 0.16745 lineto
0.59797 0.16667 lineto
0.59921 0.16569 lineto
0.60169 0.16317 lineto
0.60417 0.15996 lineto
0.60913 0.15174 lineto
0.61905 0.13031 lineto
0.62897 0.10686 lineto
0.63393 0.09608 lineto
0.63889 0.08674 lineto
0.64137 0.08275 lineto
0.64385 0.07928 lineto
0.64633 0.07638 lineto
0.64881 0.07406 lineto
0.65005 0.07313 lineto
0.65129 0.07235 lineto
0.65253 0.07173 lineto
0.65377 0.07126 lineto
0.65501 0.07095 lineto
0.65625 0.0708 lineto
Mistroke
0.65749 0.0708 lineto
0.65873 0.07095 lineto
0.65997 0.07125 lineto
0.66121 0.07169 lineto
0.66369 0.07302 lineto
0.66617 0.07488 lineto
0.66865 0.07725 lineto
0.67361 0.08332 lineto
0.67857 0.09079 lineto
0.68849 0.10794 lineto
0.69841 0.12459 lineto
0.70337 0.13153 lineto
0.70585 0.13448 lineto
0.70833 0.13703 lineto
0.71081 0.13916 lineto
0.71329 0.14083 lineto
0.71453 0.14149 lineto
0.71577 0.14204 lineto
0.71701 0.14246 lineto
0.71825 0.14277 lineto
0.71949 0.14295 lineto
0.72073 0.14302 lineto
0.72197 0.14296 lineto
0.72321 0.14279 lineto
0.72445 0.1425 lineto
0.72569 0.1421 lineto
0.72817 0.14097 lineto
0.73065 0.13941 lineto
0.73313 0.13746 lineto
0.7381 0.13254 lineto
0.75794 0.10598 lineto
0.7629 0.09965 lineto
0.76786 0.09421 lineto
0.77034 0.09192 lineto
0.77282 0.08995 lineto
0.7753 0.08833 lineto
0.77654 0.08766 lineto
0.77778 0.08708 lineto
0.77902 0.0866 lineto
0.78026 0.08621 lineto
0.7815 0.08592 lineto
0.78274 0.08573 lineto
0.78398 0.08564 lineto
0.78522 0.08564 lineto
0.78646 0.08574 lineto
0.7877 0.08594 lineto
0.78894 0.08623 lineto
0.79018 0.08661 lineto
0.79266 0.08765 lineto
0.79514 0.08903 lineto
Mistroke
0.79762 0.09072 lineto
0.80754 0.10001 lineto
0.81746 0.11144 lineto
0.82738 0.12229 lineto
0.83234 0.12671 lineto
0.83482 0.12855 lineto
0.8373 0.13011 lineto
0.83978 0.13137 lineto
0.84102 0.13189 lineto
0.84226 0.13232 lineto
0.8435 0.13268 lineto
0.84474 0.13295 lineto
0.84598 0.13314 lineto
0.84722 0.13325 lineto
0.84846 0.13327 lineto
0.8497 0.13321 lineto
0.85094 0.13307 lineto
0.85218 0.13285 lineto
0.85342 0.13256 lineto
0.85466 0.13218 lineto
0.85714 0.13121 lineto
0.85962 0.12995 lineto
0.8621 0.12842 lineto
0.86706 0.1247 lineto
0.87698 0.11543 lineto
0.8869 0.10564 lineto
0.89187 0.10128 lineto
0.89683 0.09762 lineto
0.89931 0.09611 lineto
0.90179 0.09485 lineto
0.90427 0.09385 lineto
0.90551 0.09346 lineto
0.90675 0.09313 lineto
0.90799 0.09287 lineto
0.90923 0.09268 lineto
0.91047 0.09257 lineto
0.91171 0.09253 lineto
0.91295 0.09255 lineto
0.91419 0.09265 lineto
0.91543 0.09282 lineto
0.91667 0.09306 lineto
0.91915 0.09374 lineto
0.92163 0.09467 lineto
0.92659 0.09725 lineto
0.93651 0.10455 lineto
0.97619 0.12811 lineto
Mfstroke
grestore
grestore
gsave
[ 0.01 0.01 ] 0 setdash
gsave
0.004 setlinewidth
0.02381 0.09254 moveto
0.02505 0.09253 lineto
0.02629 0.09259 lineto
0.02753 0.09272 lineto
0.02877 0.09292 lineto
0.03001 0.09319 lineto
0.03125 0.09353 lineto
0.03373 0.09442 lineto
0.03621 0.09558 lineto
0.03869 0.09699 lineto
0.04365 0.10049 lineto
0.06349 0.11933 lineto
0.06845 0.12386 lineto
0.07341 0.12775 lineto
0.07589 0.12937 lineto
0.07837 0.13073 lineto
0.08085 0.13183 lineto
0.08209 0.13226 lineto
0.08333 0.13262 lineto
0.08457 0.13291 lineto
0.08581 0.13311 lineto
0.08705 0.13323 lineto
0.08829 0.13327 lineto
0.08953 0.13323 lineto
0.09077 0.13311 lineto
0.09201 0.1329 lineto
0.09325 0.13261 lineto
0.09573 0.13179 lineto
0.09821 0.13065 lineto
0.10317 0.12748 lineto
0.10813 0.12325 lineto
0.1131 0.11819 lineto
0.12302 0.10678 lineto
0.13294 0.09589 lineto
0.1379 0.09148 lineto
0.14038 0.08967 lineto
0.14286 0.08816 lineto
0.1441 0.08753 lineto
0.14534 0.08699 lineto
0.14658 0.08653 lineto
0.14782 0.08617 lineto
0.14906 0.08589 lineto
0.1503 0.08572 lineto
0.15154 0.08563 lineto
0.15278 0.08565 lineto
0.15402 0.08576 lineto
0.15526 0.08597 lineto
0.1565 0.08628 lineto
0.15774 0.08669 lineto
0.16022 0.08778 lineto
Mistroke
0.1627 0.08926 lineto
0.16766 0.09326 lineto
0.17262 0.09848 lineto
0.18254 0.11144 lineto
0.19246 0.12523 lineto
0.19742 0.13141 lineto
0.20238 0.13658 lineto
0.20486 0.13868 lineto
0.20734 0.14039 lineto
0.20858 0.1411 lineto
0.20982 0.1417 lineto
0.21106 0.14219 lineto
0.2123 0.14257 lineto
0.21354 0.14283 lineto
0.21478 0.14298 lineto
0.21602 0.14301 lineto
0.21726 0.14292 lineto
0.2185 0.14271 lineto
0.21974 0.14239 lineto
0.22098 0.14194 lineto
0.22222 0.14137 lineto
0.2247 0.13988 lineto
0.22718 0.13793 lineto
0.23214 0.13275 lineto
0.24206 0.11825 lineto
0.25198 0.10091 lineto
0.25694 0.09241 lineto
0.2619 0.08472 lineto
0.26687 0.07833 lineto
0.26935 0.07577 lineto
0.27183 0.0737 lineto
0.27307 0.07286 lineto
0.27431 0.07216 lineto
0.27555 0.07159 lineto
0.27679 0.07117 lineto
0.27803 0.0709 lineto
0.27927 0.07078 lineto
0.28051 0.07082 lineto
0.28175 0.071 lineto
0.28299 0.07134 lineto
0.28423 0.07184 lineto
0.28547 0.07249 lineto
0.28671 0.0733 lineto
0.28919 0.07538 lineto
0.29167 0.07805 lineto
0.29663 0.08508 lineto
0.30159 0.09408 lineto
0.31151 0.11612 lineto
0.32143 0.13944 lineto
0.32639 0.14985 lineto
Mistroke
0.33135 0.1585 lineto
0.33383 0.16197 lineto
0.33631 0.16477 lineto
0.33755 0.1659 lineto
0.33879 0.16684 lineto
0.34003 0.16759 lineto
0.34127 0.16813 lineto
0.34251 0.16847 lineto
0.34375 0.1686 lineto
0.34499 0.16851 lineto
0.34623 0.16821 lineto
0.34747 0.16768 lineto
0.34871 0.16694 lineto
0.35119 0.16477 lineto
0.35367 0.16172 lineto
0.35615 0.15779 lineto
0.36111 0.14744 lineto
0.37103 0.11828 lineto
0.38095 0.08251 lineto
0.39087 0.0477 lineto
0.39583 0.03335 lineto
0.39831 0.02741 lineto
0.40079 0.02248 lineto
0.40203 0.02042 lineto
0.40327 0.01866 lineto
0.40451 0.01721 lineto
0.40575 0.01607 lineto
0.40699 0.01528 lineto
0.40823 0.01482 lineto
0.40947 0.01472 lineto
0.41071 0.01499 lineto
0.41195 0.01564 lineto
0.41319 0.01667 lineto
0.41443 0.01809 lineto
0.41567 0.01991 lineto
0.41815 0.02476 lineto
0.42063 0.03127 lineto
0.4256 0.04926 lineto
0.43056 0.07382 lineto
0.44048 0.14093 lineto
0.46032 0.32095 lineto
0.47024 0.41234 lineto
0.4752 0.45306 lineto
0.48016 0.48854 lineto
0.48512 0.51755 lineto
0.4876 0.52928 lineto
0.49008 0.53903 lineto
0.49256 0.54671 lineto
0.4938 0.54975 lineto
0.49504 0.55224 lineto
Mistroke
0.49628 0.55419 lineto
0.49752 0.55558 lineto
0.49876 0.55642 lineto
0.5 0.5567 lineto
0.50124 0.55642 lineto
0.50248 0.55558 lineto
0.50372 0.55419 lineto
0.50496 0.55224 lineto
0.50744 0.54671 lineto
0.50992 0.53903 lineto
0.51488 0.51755 lineto
0.51984 0.48854 lineto
0.52976 0.41234 lineto
0.53968 0.32095 lineto
0.5496 0.22653 lineto
0.55952 0.14093 lineto
0.56448 0.10459 lineto
0.56944 0.07382 lineto
0.5744 0.04926 lineto
0.57688 0.03943 lineto
0.57937 0.03127 lineto
0.58185 0.02476 lineto
0.58309 0.02213 lineto
0.58433 0.01991 lineto
0.58557 0.01809 lineto
0.58681 0.01667 lineto
0.58805 0.01564 lineto
0.58929 0.01499 lineto
0.59053 0.01472 lineto
0.59177 0.01482 lineto
0.59301 0.01528 lineto
0.59425 0.01607 lineto
0.59549 0.01721 lineto
0.59673 0.01866 lineto
0.59921 0.02248 lineto
0.60169 0.02741 lineto
0.60417 0.03335 lineto
0.60913 0.0477 lineto
0.61905 0.08251 lineto
0.62897 0.11828 lineto
0.63393 0.13408 lineto
0.63889 0.14744 lineto
0.64137 0.15302 lineto
0.64385 0.15779 lineto
0.64633 0.16172 lineto
0.64881 0.16477 lineto
0.65005 0.16597 lineto
0.65129 0.16694 lineto
0.65253 0.16768 lineto
0.65377 0.16821 lineto
Mistroke
0.65501 0.16851 lineto
0.65625 0.1686 lineto
0.65749 0.16847 lineto
0.65873 0.16813 lineto
0.65997 0.16759 lineto
0.66121 0.16684 lineto
0.66369 0.16477 lineto
0.66617 0.16197 lineto
0.66865 0.1585 lineto
0.67857 0.13944 lineto
0.68849 0.11612 lineto
0.69841 0.09408 lineto
0.70337 0.08508 lineto
0.70585 0.0813 lineto
0.70833 0.07805 lineto
0.71081 0.07538 lineto
0.71205 0.07426 lineto
0.71329 0.0733 lineto
0.71453 0.07249 lineto
0.71577 0.07184 lineto
0.71701 0.07134 lineto
0.71825 0.071 lineto
0.71949 0.07082 lineto
0.72073 0.07078 lineto
0.72197 0.0709 lineto
0.72321 0.07117 lineto
0.72445 0.07159 lineto
0.72569 0.07216 lineto
0.72817 0.0737 lineto
0.73065 0.07577 lineto
0.73313 0.07833 lineto
0.7381 0.08472 lineto
0.74802 0.10091 lineto
0.75794 0.11825 lineto
0.7629 0.12608 lineto
0.76786 0.13275 lineto
0.77034 0.13555 lineto
0.77282 0.13793 lineto
0.7753 0.13988 lineto
0.77654 0.14068 lineto
0.77778 0.14137 lineto
0.77902 0.14194 lineto
0.78026 0.14239 lineto
0.7815 0.14271 lineto
0.78274 0.14292 lineto
0.78398 0.14301 lineto
0.78522 0.14298 lineto
0.78646 0.14283 lineto
0.7877 0.14257 lineto
0.78894 0.14219 lineto
Mistroke
0.79018 0.1417 lineto
0.79266 0.14039 lineto
0.79514 0.13868 lineto
0.79762 0.13658 lineto
0.80754 0.12523 lineto
0.81746 0.11144 lineto
0.82738 0.09848 lineto
0.83234 0.09326 lineto
0.83482 0.09109 lineto
0.8373 0.08926 lineto
0.83978 0.08778 lineto
0.84102 0.08719 lineto
0.84226 0.08669 lineto
0.8435 0.08628 lineto
0.84474 0.08597 lineto
0.84598 0.08576 lineto
0.84722 0.08565 lineto
0.84846 0.08563 lineto
0.8497 0.08572 lineto
0.85094 0.08589 lineto
0.85218 0.08617 lineto
0.85342 0.08653 lineto
0.85466 0.08699 lineto
0.85714 0.08816 lineto
0.8621 0.09148 lineto
0.86706 0.09589 lineto
0.87698 0.10678 lineto
0.8869 0.11819 lineto
0.89187 0.12325 lineto
0.89683 0.12748 lineto
0.89931 0.12921 lineto
0.90179 0.13065 lineto
0.90427 0.13179 lineto
0.90551 0.13224 lineto
0.90675 0.13261 lineto
0.90799 0.1329 lineto
0.90923 0.13311 lineto
0.91047 0.13323 lineto
0.91171 0.13327 lineto
0.91295 0.13323 lineto
0.91419 0.13311 lineto
0.91543 0.13291 lineto
0.91667 0.13262 lineto
0.91915 0.13183 lineto
0.92163 0.13073 lineto
0.92659 0.12775 lineto
0.93651 0.11933 lineto
0.97619 0.09254 lineto
Mfstroke
grestore
grestore
gsave
[ 0.01 0.01 ] 0 setdash
gsave
0.004 setlinewidth
0.02381 0.12811 moveto
0.02505 0.12812 lineto
0.02629 0.12807 lineto
0.02753 0.12795 lineto
0.02877 0.12777 lineto
0.03001 0.12752 lineto
0.03125 0.12722 lineto
0.03373 0.12642 lineto
0.03621 0.12539 lineto
0.03869 0.12415 lineto
0.04365 0.12106 lineto
0.05357 0.11317 lineto
0.06349 0.10455 lineto
0.06845 0.10061 lineto
0.07341 0.09725 lineto
0.07589 0.09585 lineto
0.07837 0.09467 lineto
0.08085 0.09374 lineto
0.08209 0.09336 lineto
0.08333 0.09306 lineto
0.08457 0.09282 lineto
0.08581 0.09265 lineto
0.08705 0.09255 lineto
0.08829 0.09253 lineto
0.08953 0.09257 lineto
0.09077 0.09268 lineto
0.09201 0.09287 lineto
0.09325 0.09313 lineto
0.09573 0.09385 lineto
0.09821 0.09485 lineto
0.10317 0.09762 lineto
0.10813 0.10128 lineto
0.1131 0.10564 lineto
0.12302 0.11543 lineto
0.12798 0.12027 lineto
0.13294 0.1247 lineto
0.1379 0.12842 lineto
0.14038 0.12995 lineto
0.14286 0.13121 lineto
0.1441 0.13173 lineto
0.14534 0.13218 lineto
0.14658 0.13256 lineto
0.14782 0.13285 lineto
0.14906 0.13307 lineto
0.1503 0.13321 lineto
0.15154 0.13327 lineto
0.15278 0.13325 lineto
0.15402 0.13314 lineto
0.15526 0.13295 lineto
0.1565 0.13268 lineto
Mistroke
0.15774 0.13232 lineto
0.16022 0.13137 lineto
0.1627 0.13011 lineto
0.16766 0.12671 lineto
0.17262 0.12229 lineto
0.18254 0.11144 lineto
0.19246 0.10001 lineto
0.19742 0.09493 lineto
0.20238 0.09072 lineto
0.20486 0.08903 lineto
0.20734 0.08765 lineto
0.20858 0.08709 lineto
0.20982 0.08661 lineto
0.21106 0.08623 lineto
0.2123 0.08594 lineto
0.21354 0.08574 lineto
0.21478 0.08564 lineto
0.21602 0.08564 lineto
0.21726 0.08573 lineto
0.2185 0.08592 lineto
0.21974 0.08621 lineto
0.22098 0.0866 lineto
0.22222 0.08708 lineto
0.2247 0.08833 lineto
0.22718 0.08995 lineto
0.23214 0.09421 lineto
0.24206 0.10598 lineto
0.25198 0.11983 lineto
0.25694 0.12653 lineto
0.2619 0.13254 lineto
0.26687 0.13746 lineto
0.26935 0.13941 lineto
0.27183 0.14097 lineto
0.27307 0.14159 lineto
0.27431 0.1421 lineto
0.27555 0.1425 lineto
0.27679 0.14279 lineto
0.27803 0.14296 lineto
0.27927 0.14302 lineto
0.28051 0.14295 lineto
0.28175 0.14277 lineto
0.28299 0.14246 lineto
0.28423 0.14204 lineto
0.28671 0.14083 lineto
0.28919 0.13916 lineto
0.29167 0.13703 lineto
0.29663 0.13153 lineto
0.30159 0.12459 lineto
0.31151 0.10794 lineto
0.32143 0.09079 lineto
Mistroke
0.32639 0.08332 lineto
0.32887 0.08008 lineto
0.33135 0.07725 lineto
0.33383 0.07488 lineto
0.33631 0.07302 lineto
0.33755 0.07229 lineto
0.33879 0.07169 lineto
0.34003 0.07125 lineto
0.34127 0.07095 lineto
0.34251 0.0708 lineto
0.34375 0.0708 lineto
0.34499 0.07095 lineto
0.34623 0.07126 lineto
0.34747 0.07173 lineto
0.34871 0.07235 lineto
0.35119 0.07406 lineto
0.35367 0.07638 lineto
0.35615 0.07928 lineto
0.36111 0.08674 lineto
0.37103 0.10686 lineto
0.38095 0.13031 lineto
0.38591 0.14163 lineto
0.39087 0.15174 lineto
0.39335 0.15613 lineto
0.39583 0.15996 lineto
0.39831 0.16317 lineto
0.39955 0.16452 lineto
0.40079 0.16569 lineto
0.40203 0.16667 lineto
0.40327 0.16745 lineto
0.40451 0.16804 lineto
0.40575 0.16842 lineto
0.40699 0.16859 lineto
0.40823 0.16855 lineto
0.40947 0.16829 lineto
0.41071 0.16781 lineto
0.41195 0.1671 lineto
0.41319 0.16618 lineto
0.41567 0.16366 lineto
0.41815 0.16025 lineto
0.42063 0.15598 lineto
0.4256 0.14499 lineto
0.43056 0.13109 lineto
0.44048 0.09717 lineto
0.4504 0.06096 lineto
0.45536 0.0446 lineto
0.46032 0.03086 lineto
0.4628 0.02531 lineto
0.46528 0.02081 lineto
0.46652 0.01899 lineto
Mistroke
0.46776 0.01747 lineto
0.469 0.01627 lineto
0.47024 0.01541 lineto
0.47148 0.01488 lineto
0.47272 0.01472 lineto
0.47396 0.01491 lineto
0.4752 0.01548 lineto
0.47644 0.01643 lineto
0.47768 0.01777 lineto
0.48016 0.02165 lineto
0.48264 0.02716 lineto
0.48512 0.03433 lineto
0.49008 0.05366 lineto
0.49504 0.0795 lineto
0.5 0.11144 lineto
0.51984 0.28285 lineto
0.52976 0.37694 lineto
0.53968 0.46062 lineto
0.54464 0.4949 lineto
0.5496 0.52247 lineto
0.55208 0.53343 lineto
0.55456 0.54236 lineto
0.5558 0.54604 lineto
0.55704 0.54919 lineto
0.55828 0.55179 lineto
0.55952 0.55385 lineto
0.56076 0.55535 lineto
0.562 0.5563 lineto
0.56324 0.55669 lineto
0.56448 0.55652 lineto
0.56572 0.5558 lineto
0.56696 0.55451 lineto
0.5682 0.55268 lineto
0.56944 0.55029 lineto
0.57192 0.54389 lineto
0.5744 0.53538 lineto
0.57937 0.51232 lineto
0.58433 0.48193 lineto
0.58929 0.44529 lineto
0.59921 0.35857 lineto
0.60913 0.26387 lineto
0.61905 0.17343 lineto
0.62401 0.13326 lineto
0.62897 0.09797 lineto
0.63393 0.0684 lineto
0.63889 0.04513 lineto
0.64137 0.03597 lineto
0.64385 0.02847 lineto
0.64633 0.02262 lineto
0.64757 0.02032 lineto
Mistroke
0.64881 0.01842 lineto
0.65005 0.01692 lineto
0.65129 0.01581 lineto
0.65253 0.01509 lineto
0.65377 0.01475 lineto
0.65501 0.01477 lineto
0.65625 0.01516 lineto
0.65749 0.01589 lineto
0.65873 0.01695 lineto
0.66121 0.02004 lineto
0.66369 0.02432 lineto
0.66865 0.03597 lineto
0.67857 0.068 lineto
0.68849 0.10438 lineto
0.69345 0.1216 lineto
0.69841 0.13696 lineto
0.70337 0.14976 lineto
0.70585 0.15503 lineto
0.70833 0.15947 lineto
0.71081 0.16305 lineto
0.71205 0.16451 lineto
0.71329 0.16574 lineto
0.71453 0.16676 lineto
0.71577 0.16755 lineto
0.71701 0.16812 lineto
0.71825 0.16847 lineto
0.71949 0.1686 lineto
0.72073 0.16851 lineto
0.72197 0.16822 lineto
0.72321 0.16771 lineto
0.72445 0.16701 lineto
0.72569 0.1661 lineto
0.72817 0.16373 lineto
0.73065 0.16065 lineto
0.73313 0.15694 lineto
0.7381 0.14788 lineto
0.74802 0.1256 lineto
0.75794 0.10241 lineto
0.7629 0.09215 lineto
0.76786 0.08351 lineto
0.77034 0.07993 lineto
0.77282 0.07691 lineto
0.7753 0.07447 lineto
0.77654 0.07348 lineto
0.77778 0.07264 lineto
0.77902 0.07196 lineto
0.78026 0.07143 lineto
0.7815 0.07106 lineto
0.78274 0.07084 lineto
0.78398 0.07078 lineto
Mistroke
0.78522 0.07087 lineto
0.78646 0.07111 lineto
0.7877 0.0715 lineto
0.78894 0.07203 lineto
0.79018 0.07271 lineto
0.79266 0.07447 lineto
0.79514 0.07674 lineto
0.79762 0.07948 lineto
0.80754 0.09406 lineto
0.81746 0.11144 lineto
0.82242 0.11989 lineto
0.82738 0.12752 lineto
0.83234 0.13392 lineto
0.83482 0.13655 lineto
0.8373 0.13877 lineto
0.83978 0.14053 lineto
0.84102 0.14124 lineto
0.84226 0.14183 lineto
0.8435 0.14231 lineto
0.84474 0.14266 lineto
0.84598 0.14289 lineto
0.84722 0.143 lineto
0.84846 0.143 lineto
0.8497 0.14287 lineto
0.85094 0.14263 lineto
0.85218 0.14227 lineto
0.85466 0.14123 lineto
0.85714 0.13975 lineto
0.8621 0.13565 lineto
0.86706 0.13025 lineto
0.87698 0.11704 lineto
0.8869 0.10336 lineto
0.89187 0.09735 lineto
0.89683 0.09235 lineto
0.89931 0.09032 lineto
0.90179 0.08862 lineto
0.90427 0.0873 lineto
0.90551 0.08678 lineto
0.90675 0.08635 lineto
0.90799 0.08603 lineto
0.90923 0.0858 lineto
0.91047 0.08566 lineto
0.91171 0.08563 lineto
0.91295 0.08569 lineto
0.91419 0.08585 lineto
0.91543 0.0861 lineto
0.91667 0.08645 lineto
0.91915 0.08742 lineto
0.92163 0.08873 lineto
0.92659 0.09228 lineto
Mistroke
0.93651 0.10221 lineto
0.97619 0.13325 lineto
Mfstroke
grestore
grestore
gsave
[ 0.01 0.01 ] 0 setdash
gsave
0.004 setlinewidth
0.02381 0.09652 moveto
0.02505 0.09652 lineto
0.02629 0.09657 lineto
0.02753 0.09668 lineto
0.02877 0.09685 lineto
0.03001 0.09707 lineto
0.03125 0.09735 lineto
0.03373 0.09806 lineto
0.03621 0.09899 lineto
0.03869 0.10011 lineto
0.04365 0.10287 lineto
0.05357 0.1099 lineto
0.06349 0.11755 lineto
0.06845 0.12104 lineto
0.07341 0.12401 lineto
0.07589 0.12524 lineto
0.07837 0.12627 lineto
0.08085 0.12709 lineto
0.08209 0.12741 lineto
0.08333 0.12768 lineto
0.08457 0.12788 lineto
0.08581 0.12802 lineto
0.08705 0.12811 lineto
0.08829 0.12813 lineto
0.08953 0.12808 lineto
0.09077 0.12798 lineto
0.09201 0.12781 lineto
0.09325 0.12757 lineto
0.09573 0.12693 lineto
0.09821 0.12604 lineto
0.10317 0.12359 lineto
0.10813 0.12036 lineto
0.1131 0.11652 lineto
0.12302 0.10796 lineto
0.12798 0.10373 lineto
0.13294 0.09989 lineto
0.1379 0.09666 lineto
0.14038 0.09535 lineto
0.14286 0.09427 lineto
0.1441 0.09382 lineto
0.14534 0.09343 lineto
0.14658 0.09312 lineto
0.14782 0.09286 lineto
0.14906 0.09268 lineto
0.1503 0.09257 lineto
0.15154 0.09253 lineto
0.15278 0.09256 lineto
0.15402 0.09266 lineto
0.15526 0.09283 lineto
0.1565 0.09307 lineto
Mistroke
0.15774 0.09338 lineto
0.16022 0.09422 lineto
0.1627 0.09533 lineto
0.16766 0.09828 lineto
0.17262 0.1021 lineto
0.18254 0.11144 lineto
0.19246 0.1212 lineto
0.19742 0.12551 lineto
0.20238 0.12906 lineto
0.20486 0.13048 lineto
0.20734 0.13163 lineto
0.20858 0.1321 lineto
0.20982 0.13249 lineto
0.21106 0.1328 lineto
0.2123 0.13304 lineto
0.21354 0.13319 lineto
0.21478 0.13327 lineto
0.21602 0.13326 lineto
0.21726 0.13317 lineto
0.2185 0.13299 lineto
0.21974 0.13274 lineto
0.22098 0.1324 lineto
0.22222 0.13198 lineto
0.2247 0.1309 lineto
0.22718 0.12952 lineto
0.23214 0.1259 lineto
0.24206 0.116 lineto
0.25198 0.10447 lineto
0.25694 0.09894 lineto
0.2619 0.09401 lineto
0.26438 0.09188 lineto
0.26687 0.09001 lineto
0.26935 0.08844 lineto
0.27183 0.08719 lineto
0.27307 0.0867 lineto
0.27431 0.0863 lineto
0.27555 0.08599 lineto
0.27679 0.08578 lineto
0.27803 0.08565 lineto
0.27927 0.08563 lineto
0.28051 0.0857 lineto
0.28175 0.08588 lineto
0.28299 0.08615 lineto
0.28423 0.08651 lineto
0.28671 0.08753 lineto
0.28919 0.08893 lineto
0.29167 0.0907 lineto
0.29663 0.09521 lineto
0.30159 0.10086 lineto
0.31151 0.11424 lineto
Mistroke
0.32143 0.1278 lineto
0.32639 0.13362 lineto
0.32887 0.13612 lineto
0.33135 0.13829 lineto
0.33383 0.14008 lineto
0.33507 0.14083 lineto
0.33631 0.14147 lineto
0.33755 0.14201 lineto
0.33879 0.14243 lineto
0.34003 0.14274 lineto
0.34127 0.14294 lineto
0.34251 0.14301 lineto
0.34375 0.14297 lineto
0.34499 0.14281 lineto
0.34623 0.14253 lineto
0.34747 0.14213 lineto
0.34871 0.14161 lineto
0.35119 0.14022 lineto
0.35367 0.13836 lineto
0.35615 0.13606 lineto
0.36111 0.13024 lineto
0.38095 0.09744 lineto
0.38591 0.0892 lineto
0.39087 0.08198 lineto
0.39335 0.0789 lineto
0.39583 0.07625 lineto
0.39831 0.07407 lineto
0.39955 0.07318 lineto
0.40079 0.07242 lineto
0.40203 0.0718 lineto
0.40327 0.07132 lineto
0.40451 0.07099 lineto
0.40575 0.07081 lineto
0.40699 0.07078 lineto
0.40823 0.07091 lineto
0.40947 0.07119 lineto
0.41071 0.07162 lineto
0.41195 0.07221 lineto
0.41319 0.07296 lineto
0.41567 0.07491 lineto
0.41815 0.07747 lineto
0.42063 0.0806 lineto
0.43056 0.09814 lineto
0.44048 0.12085 lineto
0.4504 0.14377 lineto
0.45536 0.15355 lineto
0.45784 0.15773 lineto
0.46032 0.16132 lineto
0.4628 0.16426 lineto
0.46404 0.16547 lineto
Mistroke
0.46528 0.16649 lineto
0.46652 0.16731 lineto
0.46776 0.16794 lineto
0.469 0.16836 lineto
0.47024 0.16857 lineto
0.47148 0.16857 lineto
0.47272 0.16836 lineto
0.47396 0.16792 lineto
0.4752 0.16726 lineto
0.47644 0.16638 lineto
0.47768 0.16528 lineto
0.48016 0.1624 lineto
0.48264 0.15865 lineto
0.48512 0.15404 lineto
0.49008 0.14243 lineto
0.5 0.11144 lineto
0.50992 0.0752 lineto
0.51488 0.05753 lineto
0.51984 0.04161 lineto
0.52232 0.03464 lineto
0.5248 0.02852 lineto
0.52728 0.02338 lineto
0.52852 0.02121 lineto
0.52976 0.01933 lineto
0.531 0.01775 lineto
0.53224 0.01649 lineto
0.53348 0.01555 lineto
0.53472 0.01496 lineto
0.53596 0.01472 lineto
0.5372 0.01484 lineto
0.53844 0.01534 lineto
0.53968 0.01621 lineto
0.54092 0.01747 lineto
0.54216 0.01913 lineto
0.54464 0.02366 lineto
0.54712 0.02983 lineto
0.5496 0.03767 lineto
0.55456 0.05831 lineto
0.55952 0.08542 lineto
0.56944 0.15684 lineto
0.57937 0.24507 lineto
0.58929 0.33987 lineto
0.59921 0.42917 lineto
0.60417 0.46796 lineto
0.60913 0.50099 lineto
0.61161 0.51497 lineto
0.61409 0.52709 lineto
0.61657 0.53725 lineto
0.61905 0.54535 lineto
0.62029 0.5486 lineto
Mistroke
0.62153 0.55131 lineto
0.62277 0.55348 lineto
0.62401 0.55509 lineto
0.62525 0.55615 lineto
0.62649 0.55666 lineto
0.62773 0.5566 lineto
0.62897 0.55599 lineto
0.63021 0.55482 lineto
0.63145 0.55309 lineto
0.63269 0.55081 lineto
0.63393 0.54799 lineto
0.63641 0.54074 lineto
0.63889 0.5314 lineto
0.64385 0.50679 lineto
0.64881 0.47506 lineto
0.65873 0.3949 lineto
0.67857 0.20835 lineto
0.68849 0.12578 lineto
0.69345 0.09158 lineto
0.69841 0.06323 lineto
0.70089 0.05143 lineto
0.70337 0.04127 lineto
0.70585 0.03277 lineto
0.70833 0.02593 lineto
0.70957 0.02313 lineto
0.71081 0.02075 lineto
0.71205 0.01877 lineto
0.71329 0.01719 lineto
0.71453 0.016 lineto
0.71577 0.01521 lineto
0.71701 0.01479 lineto
0.71825 0.01474 lineto
0.71949 0.01505 lineto
0.72073 0.01571 lineto
0.72197 0.01671 lineto
0.72321 0.01804 lineto
0.72569 0.02162 lineto
0.72817 0.02634 lineto
0.73313 0.03873 lineto
0.7381 0.05417 lineto
0.74802 0.08986 lineto
0.75794 0.12485 lineto
0.7629 0.13975 lineto
0.76786 0.15196 lineto
0.77034 0.1569 lineto
0.77282 0.161 lineto
0.7753 0.16423 lineto
0.77654 0.16551 lineto
0.77778 0.16657 lineto
0.77902 0.16741 lineto
Mistroke
0.78026 0.16802 lineto
0.7815 0.16842 lineto
0.78274 0.16859 lineto
0.78398 0.16855 lineto
0.78522 0.16829 lineto
0.78646 0.16783 lineto
0.7877 0.16716 lineto
0.79018 0.16524 lineto
0.79266 0.16258 lineto
0.79762 0.15529 lineto
0.80754 0.13493 lineto
0.81746 0.11144 lineto
0.82242 0.10025 lineto
0.82738 0.09027 lineto
0.83234 0.08201 lineto
0.83482 0.07866 lineto
0.8373 0.07586 lineto
0.83978 0.07367 lineto
0.84102 0.0728 lineto
0.84226 0.07208 lineto
0.8435 0.07152 lineto
0.84474 0.07112 lineto
0.84598 0.07087 lineto
0.84722 0.07078 lineto
0.84846 0.07084 lineto
0.8497 0.07105 lineto
0.85094 0.07141 lineto
0.85218 0.07191 lineto
0.85466 0.07335 lineto
0.85714 0.07532 lineto
0.8621 0.0807 lineto
0.86706 0.08766 lineto
0.87698 0.10442 lineto
0.8869 0.12149 lineto
0.89187 0.12891 lineto
0.89683 0.13502 lineto
0.89931 0.13749 lineto
0.90179 0.13953 lineto
0.90303 0.14038 lineto
0.90427 0.14111 lineto
0.90551 0.14173 lineto
0.90675 0.14222 lineto
0.90799 0.1426 lineto
0.90923 0.14285 lineto
0.91047 0.14299 lineto
0.91171 0.14301 lineto
0.91295 0.14291 lineto
0.91419 0.14269 lineto
0.91543 0.14235 lineto
0.91667 0.14191 lineto
Mistroke
0.91915 0.14069 lineto
0.92163 0.13905 lineto
0.92659 0.13466 lineto
0.93651 0.12257 lineto
0.97619 0.08567 lineto
Mfstroke
grestore
grestore
grestore
grestore
gsave
gsave
gsave
gsave
0.001 setlinewidth
0.02381 0.09033 moveto
0.02505 0.09031 lineto
0.02629 0.09036 lineto
0.02753 0.09049 lineto
0.02877 0.0907 lineto
0.03001 0.09099 lineto
0.03125 0.09136 lineto
0.03373 0.09234 lineto
0.03621 0.09361 lineto
0.03869 0.09518 lineto
0.04365 0.09908 lineto
0.06349 0.12045 lineto
0.06845 0.12567 lineto
0.07341 0.13018 lineto
0.07589 0.13208 lineto
0.07837 0.13369 lineto
0.08085 0.13499 lineto
0.08209 0.13551 lineto
0.08333 0.13595 lineto
0.08457 0.1363 lineto
0.08581 0.13656 lineto
0.08705 0.13673 lineto
0.08829 0.1368 lineto
0.08953 0.13677 lineto
0.09077 0.13665 lineto
0.09201 0.13644 lineto
0.09325 0.13613 lineto
0.09573 0.13522 lineto
0.09821 0.13393 lineto
0.10317 0.13029 lineto
0.10813 0.12538 lineto
0.1131 0.11945 lineto
0.12302 0.10586 lineto
0.13294 0.09262 lineto
0.1379 0.08715 lineto
0.14038 0.08487 lineto
0.14286 0.08294 lineto
0.14534 0.08141 lineto
0.14658 0.08081 lineto
0.14782 0.08031 lineto
0.14906 0.07992 lineto
0.1503 0.07966 lineto
0.15154 0.0795 lineto
0.15278 0.07947 lineto
0.15402 0.07956 lineto
0.15526 0.07976 lineto
0.1565 0.08009 lineto
0.15774 0.08055 lineto
0.16022 0.08182 lineto
0.1627 0.08356 lineto
Mistroke
0.16766 0.08842 lineto
0.17262 0.09491 lineto
0.18254 0.11144 lineto
0.19246 0.12968 lineto
0.19742 0.13811 lineto
0.20238 0.14537 lineto
0.20486 0.14841 lineto
0.20734 0.15096 lineto
0.20982 0.15299 lineto
0.21106 0.15379 lineto
0.2123 0.15444 lineto
0.21354 0.15494 lineto
0.21478 0.15529 lineto
0.21602 0.15547 lineto
0.21726 0.15549 lineto
0.2185 0.15534 lineto
0.21974 0.15503 lineto
0.22098 0.15454 lineto
0.22222 0.15388 lineto
0.2247 0.15206 lineto
0.22718 0.14955 lineto
0.23214 0.14257 lineto
0.2371 0.13317 lineto
0.24206 0.12172 lineto
0.25198 0.0949 lineto
0.2619 0.06756 lineto
0.26687 0.05571 lineto
0.26935 0.0506 lineto
0.27183 0.04617 lineto
0.27431 0.04252 lineto
0.27555 0.04101 lineto
0.27679 0.03973 lineto
0.27803 0.03869 lineto
0.27927 0.0379 lineto
0.28051 0.03736 lineto
0.28175 0.03709 lineto
0.28299 0.0371 lineto
0.28423 0.03738 lineto
0.28547 0.03796 lineto
0.28671 0.03884 lineto
0.28795 0.04002 lineto
0.28919 0.0415 lineto
0.29167 0.04541 lineto
0.29415 0.0506 lineto
0.29663 0.05709 lineto
0.30159 0.07396 lineto
0.30655 0.09593 lineto
0.31151 0.1227 lineto
0.32143 0.18861 lineto
0.34127 0.34811 lineto
Mistroke
0.35119 0.42677 lineto
0.36111 0.49518 lineto
0.36607 0.52385 lineto
0.37103 0.54822 lineto
0.37599 0.56805 lineto
0.38095 0.58327 lineto
0.38343 0.58919 lineto
0.38591 0.59401 lineto
0.38839 0.59776 lineto
0.38963 0.59926 lineto
0.39087 0.60051 lineto
0.39211 0.60152 lineto
0.39335 0.6023 lineto
0.39459 0.60285 lineto
0.39583 0.60319 lineto
0.39707 0.60332 lineto
0.39831 0.60325 lineto
0.39955 0.603 lineto
0.40079 0.60256 lineto
0.40203 0.60195 lineto
0.40327 0.60119 lineto
0.40575 0.59922 lineto
0.41071 0.59382 lineto
0.42063 0.57947 lineto
0.43056 0.56443 lineto
0.43552 0.55788 lineto
0.44048 0.55246 lineto
0.44296 0.55023 lineto
0.44544 0.54835 lineto
0.44792 0.54682 lineto
0.4504 0.54564 lineto
0.45164 0.54518 lineto
0.45288 0.5448 lineto
0.45412 0.54451 lineto
0.45536 0.5443 lineto
0.4566 0.54416 lineto
0.45784 0.5441 lineto
0.45908 0.54412 lineto
0.46032 0.5442 lineto
0.46156 0.54435 lineto
0.4628 0.54455 lineto
0.46528 0.54514 lineto
0.46776 0.54591 lineto
0.47024 0.54683 lineto
0.48016 0.55129 lineto
0.48512 0.55344 lineto
0.4876 0.55438 lineto
0.49008 0.55518 lineto
0.49256 0.55583 lineto
0.4938 0.5561 lineto
Mistroke
0.49504 0.55631 lineto
0.49628 0.55648 lineto
0.49752 0.5566 lineto
0.49876 0.55668 lineto
0.5 0.5567 lineto
0.50124 0.55668 lineto
0.50248 0.5566 lineto
0.50372 0.55648 lineto
0.50496 0.55631 lineto
0.50744 0.55583 lineto
0.50992 0.55518 lineto
0.51488 0.55344 lineto
0.51984 0.55129 lineto
0.5248 0.54899 lineto
0.52976 0.54683 lineto
0.53224 0.54591 lineto
0.53472 0.54514 lineto
0.53596 0.54482 lineto
0.5372 0.54455 lineto
0.53844 0.54435 lineto
0.53968 0.5442 lineto
0.54092 0.54412 lineto
0.54216 0.5441 lineto
0.5434 0.54416 lineto
0.54464 0.5443 lineto
0.54588 0.54451 lineto
0.54712 0.5448 lineto
0.5496 0.54564 lineto
0.55208 0.54682 lineto
0.55456 0.54835 lineto
0.55952 0.55246 lineto
0.56448 0.55788 lineto
0.56944 0.56443 lineto
0.57937 0.57947 lineto
0.58433 0.58702 lineto
0.58929 0.59382 lineto
0.59177 0.59674 lineto
0.59425 0.59922 lineto
0.59549 0.60028 lineto
0.59673 0.60119 lineto
0.59797 0.60195 lineto
0.59921 0.60256 lineto
0.60045 0.603 lineto
0.60169 0.60325 lineto
0.60293 0.60332 lineto
0.60417 0.60319 lineto
0.60541 0.60285 lineto
0.60665 0.6023 lineto
0.60789 0.60152 lineto
0.60913 0.60051 lineto
Mistroke
0.61161 0.59776 lineto
0.61409 0.59401 lineto
0.61657 0.58919 lineto
0.61905 0.58327 lineto
0.62401 0.56805 lineto
0.62897 0.54822 lineto
0.63889 0.49518 lineto
0.65873 0.34811 lineto
0.67857 0.18861 lineto
0.68849 0.1227 lineto
0.69345 0.09593 lineto
0.69841 0.07396 lineto
0.70089 0.06488 lineto
0.70337 0.05709 lineto
0.70585 0.0506 lineto
0.70833 0.04541 lineto
0.70957 0.0433 lineto
0.71081 0.0415 lineto
0.71205 0.04002 lineto
0.71329 0.03884 lineto
0.71453 0.03796 lineto
0.71577 0.03738 lineto
0.71701 0.0371 lineto
0.71825 0.03709 lineto
0.71949 0.03736 lineto
0.72073 0.0379 lineto
0.72197 0.03869 lineto
0.72321 0.03973 lineto
0.72569 0.04252 lineto
0.72817 0.04617 lineto
0.73313 0.05571 lineto
0.7381 0.06756 lineto
0.74802 0.0949 lineto
0.75794 0.12172 lineto
0.7629 0.13317 lineto
0.76786 0.14257 lineto
0.77034 0.14638 lineto
0.77282 0.14955 lineto
0.7753 0.15206 lineto
0.77654 0.15306 lineto
0.77778 0.15388 lineto
0.77902 0.15454 lineto
0.78026 0.15503 lineto
0.7815 0.15534 lineto
0.78274 0.15549 lineto
0.78398 0.15547 lineto
0.78522 0.15529 lineto
0.78646 0.15494 lineto
0.7877 0.15444 lineto
0.79018 0.15299 lineto
Mistroke
0.79266 0.15096 lineto
0.79762 0.14537 lineto
0.80754 0.12968 lineto
0.81746 0.11144 lineto
0.82242 0.10272 lineto
0.82738 0.09491 lineto
0.83234 0.08842 lineto
0.83482 0.08577 lineto
0.8373 0.08356 lineto
0.83978 0.08182 lineto
0.84102 0.08112 lineto
0.84226 0.08055 lineto
0.8435 0.08009 lineto
0.84474 0.07976 lineto
0.84598 0.07956 lineto
0.84722 0.07947 lineto
0.84846 0.0795 lineto
0.8497 0.07966 lineto
0.85094 0.07992 lineto
0.85218 0.08031 lineto
0.85466 0.08141 lineto
0.85714 0.08294 lineto
0.8621 0.08715 lineto
0.86706 0.09262 lineto
0.87698 0.10586 lineto
0.8869 0.11945 lineto
0.89187 0.12538 lineto
0.89683 0.13029 lineto
0.89931 0.13228 lineto
0.90179 0.13393 lineto
0.90427 0.13522 lineto
0.90551 0.13572 lineto
0.90675 0.13613 lineto
0.90799 0.13644 lineto
0.90923 0.13665 lineto
0.91047 0.13677 lineto
0.91171 0.1368 lineto
0.91295 0.13673 lineto
0.91419 0.13656 lineto
0.91543 0.1363 lineto
0.91667 0.13595 lineto
0.91915 0.13499 lineto
0.92163 0.13369 lineto
0.92659 0.13018 lineto
0.93651 0.12045 lineto
0.97619 0.09033 lineto
Mfstroke
grestore
grestore
grestore
grestore
gsave
0.02 setlinewidth
0.05556 0.11144 Mdot
0.11905 0.11144 Mdot
0.18254 0.11144 Mdot
0.24603 0.11144 Mdot
0.30952 0.11144 Mdot
0.37302 0.5567 Mdot
0.43651 0.5567 Mdot
0.5 0.5567 Mdot
0.56349 0.5567 Mdot
0.62698 0.5567 Mdot
0.69048 0.11144 Mdot
0.75397 0.11144 Mdot
0.81746 0.11144 Mdot
0.88095 0.11144 Mdot
0.94444 0.11144 Mdot
grestore
grestore
% End of Graphics
MathPictureEnd
%%EPS Trailer
end
 
%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
grestore
0 setgray
0.333333 setgray
gsave
0 0 540 144 rectclip
[1 0 0 -1 0 144] concat
grestore
grestore
%%Trailer
%%EndDocument
 @endspecial 47 x Fb(Figure)28 b(2.)64 b Fk(Bandlimited)21
b(reconstruction)e(of)k(the)f(signal)g Fh(x)p Fk(\()p Fh(t)p
Fk(\))g(from)f(its)375 2734 y(samples)c Fh(x)e Fk(=)g([)p Fh(:)9
b(:)g(:)i(;)e Fk(0)p Fh(;)g Fk(1)p Fh(;)g Fk(1)p Fh(;)g Fk(1)p
Fh(;)g Fk(1)p Fh(;)g Fk(1)p Fh(;)g Fk(0)p Fh(;)g(:)g(:)g(:)c
Fk(].)25 b(The)18 b(dots)f(sho)n(w)h(the)g(signal)g(sam-)375
2811 y(ples,)25 b(the)d(dashed)g(lines)h(sho)n(w)g(the)f(comp)r(onen)n(t)e
(sinc)j(functions,)h(and)e(the)375 2887 y(solid)15 b(line)g(sho)n(ws)g(the)f
(unique)h(bandlimited)e(reconstruction)e(from)j(the)g(sam-)375
2964 y(ples)k(obtained)f(b)n(y)h(summing)f(the)g(comp)r(onen)n(t)e(sinc)j
(functions.)0 3092 y Fj(A)25 b(second)f(in)n(terpretation)g(of)h(Eq.)h(1)f
(is)g(as)g(follo)n(ws:)37 b(to)25 b(obtain)g(the)f(in)n(terp)r(olation)i(at)f
(time)0 3169 y Fh(t)p Fj(,)k(shift)g(the)d(signal)j(samples)f(under)e
Fi(one)j Fj(sinc)f(function)f(so)h(that)f(time)g Fh(t)h Fj(in)g(the)e(signal)
j(is)0 3245 y(translated)c(under)g(the)f(p)r(eak)h(of)h(the)e(sinc)h
(function,)i(then)d(create)g(the)h(output)f(as)i(a)f(linear)0
3322 y(com)n(bination)18 b(of)h(signal)g(samples)f(where)f(the)h(co)r
(e\016cien)n(t)f(of)h(eac)n(h)g(signal)h(sample)f(is)h(giv)n(en)f(b)n(y)0
3398 y(the)d(v)l(alue)h(of)g(the)f(sinc)h(function)f(at)h(the)f(lo)r(cation)h
(of)g(eac)n(h)f(sample.)28 b(That)15 b(this)h(in)n(terpretation)1186
3533 y Fk(3)p eop
%%Page: 4 4
3 bop 0 251 a Fj(is)32 b(equiv)l(alen)n(t)f(to)g(the)f(\014rst)h(can)g(b)r(e)
f(seen)g(as)h(a)g(result)g(of)h(the)e(fact)h(that)f(con)n(v)n(olution)i(is)0
328 y(comm)n(utativ)n(e;)19 b(in)h(the)f(\014rst)g(in)n(terpretation,)i(all)f
(signal)h(samples)f(are)f(used)g(to)g(form)h(a)f(linear)0 406
y(com)n(bination)27 b(of)f(shifted)h(sinc)f(functions,)j(while)d(in)h(the)f
(second)f(in)n(terpretation,)j(samples)0 483 y(from)i(one)h(sinc)f(function)h
(are)f(used)g(to)h(form)f(a)h(linear)g(com)n(bination)f(of)h(samples)g(of)g
(the)0 561 y(shifted)26 b(input)g(signal.)44 b(The)25 b(practical)i
(bandlimited)f(in)n(terp)r(olation)h(algorithm)g(presen)n(ted)0
638 y(b)r(elo)n(w)22 b(is)h(based)f(on)g(the)f(second)h(in)n(terpretation.)0
889 y Fl(3.)k(F)-6 b(rom)24 b(Theory)j(to)f(Practice)0 1053
y Fj(The)k(summation)h(in)g(Eq.)h(1)f(cannot)g(b)r(e)f(implemen)n(ted)f(in)i
(practice)f(b)r(ecause)g(the)g(\\ideal)0 1130 y(lo)n(wpass)18
b(\014lter")e(impulse)g(resp)r(onse)g Fh(h)956 1138 y Ff(s)979
1130 y Fk(\()p Fh(t)p Fk(\))g Fj(actually)h(extends)e(from)i(min)n(us)f
(in\014nit)n(y)h(to)f(in\014nit)n(y)-6 b(.)0 1208 y(It)15 b(is)g(necessary)f
(in)h(practice)f(to)h Fi(window)j Fj(the)c(ideal)h(impulse)g(resp)r(onse)f
(so)i(as)f(to)g(mak)n(e)f(it)h(\014nite.)0 1285 y(This)28 b(is)h(the)e(basis)
i(of)g(the)e Fi(window)j(metho)m(d)f Fj(for)f(digital)h(\014lter)f(design)g
(\(DSP)g(Committee)0 1363 y(1979,)21 b(Rabiner)f(and)g(Gold)g(1975\).)30
b(While)20 b(man)n(y)f(other)g(\014lter)h(design)g(tec)n(hniques)e(exist,)j
(the)0 1440 y(windo)n(w)f(metho)r(d)e(is)j(simple)e(and)h(robust,)g(esp)r
(ecially)g(for)g(v)n(ery)g(long)g(impulse)f(resp)r(onses.)29
b(In)0 1518 y(the)23 b(case)h(of)h(the)e(algorithm)i(presen)n(ted)e(b)r(elo)n
(w,)i(the)f(\014lter)g(impulse)g(resp)r(onse)f(is)i(v)n(ery)f(long)0
1595 y(b)r(ecause)d(it)h(is)h(hea)n(vily)g(o)n(v)n(ersampled.)0
1759 y(Figure)i(3)g(sho)n(ws)h(the)e(frequency)f(resp)r(onse)h(of)i(the)e
(ideal)h(lo)n(wpass)h(\014lter.)38 b(This)25 b(is)h(just)f(the)0
1837 y(F)-6 b(ourier)23 b(transform)f(of)h Fh(h)643 1845 y
Ff(s)666 1837 y Fk(\()p Fh(t)p Fk(\))p Fj(.)417 2915 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 2820 @rwi @setspecial
%%BeginDocument: eps/IdealLowpass.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 174
%%Creator: Mathematica
%%Title: Clipboard
%%CreationDate: Never Never
%%EndComments
50 dict begin
/Mnodistort true def
/pageDashArray [4] def
/nullDashArray [] def

% Compute the minimum of two numbers.
/Mmin {		% p q Mmin min(p,q)
	2 copy		% p q p q
	gt		% p q p>q?
	{ exch } if	% min(p,q) max(p,q)
	pop		% min(p,q)
} bind def


% Compute the maximum of two numbers.
/Mmax {		% p q Mmax max(p,q)
	2 copy		% p q p q
	lt		% p q p<q?
	{ exch } if	% max(p,q) min(p,q)
	pop		% max(p,q)
} bind def

/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain
	/Courier findfont
def
/Bold
	/Courier-Bold findfont
def
/Italic
	/Courier-Oblique findfont
def
/MathPictureStart {
	gsave
	newpath
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
0 setgray 0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	[
	7 -2 roll
	[ 2 index 2 index
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
	
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	show
	} for
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Mgmatrix
	matrix currentmatrix
	def
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/Mfontsize	12 def
/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Courier findfont 12 scalefont setfont
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
% Scaling calculations
0.5 0.95238 0.01472 0.5886 [
[(Ideal Lowpass Filter Frequency Response)] 0.5 0.62428 0 -1 Msboxa
[(-0.4)] 0.11905 0.00222 0 1 Msboxa
[(-0.2)] 0.30952 0.00222 0 1 Msboxa
[(0)] 0.5 0.00222 0 1 Msboxa
[(0.2)] 0.69048 0.00222 0 1 Msboxa
[(0.4)] 0.88095 0.00222 0 1 Msboxa
[(0.2)] 0.01131 0.13244 1 0 Msboxa
[(0.4)] 0.01131 0.25016 1 0 Msboxa
[(0.6)] 0.01131 0.36788 1 0 Msboxa
[(0.8)] 0.01131 0.4856 1 0 Msboxa
[(1)] 0.01131 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
0 setgray
[(Ideal Lowpass Filter Frequency Response)] 0.5 0.62428 0 -1 Mshowa
gsave
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
0.11905 0.00847 moveto
0.11905 0.02097 lineto
stroke
0 setgray
[(-0.4)] 0.11905 0.00222 0 1 Mshowa
0.30952 0.00847 moveto
0.30952 0.02097 lineto
stroke
0 setgray
[(-0.2)] 0.30952 0.00222 0 1 Mshowa
0.5 0.00847 moveto
0.5 0.02097 lineto
stroke
0 setgray
[(0)] 0.5 0.00222 0 1 Mshowa
0.69048 0.00847 moveto
0.69048 0.02097 lineto
stroke
0 setgray
[(0.2)] 0.69048 0.00222 0 1 Mshowa
0.88095 0.00847 moveto
0.88095 0.02097 lineto
stroke
0 setgray
[(0.4)] 0.88095 0.00222 0 1 Mshowa
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
0.01756 0.13244 moveto
0.03006 0.13244 lineto
stroke
0 setgray
[(0.2)] 0.01131 0.13244 1 0 Mshowa
0.01756 0.25016 moveto
0.03006 0.25016 lineto
stroke
0 setgray
[(0.4)] 0.01131 0.25016 1 0 Mshowa
0.01756 0.36788 moveto
0.03006 0.36788 lineto
stroke
0 setgray
[(0.6)] 0.01131 0.36788 1 0 Mshowa
0.01756 0.4856 moveto
0.03006 0.4856 lineto
stroke
0 setgray
[(0.8)] 0.01131 0.4856 1 0 Mshowa
0.01756 0.60332 moveto
0.03006 0.60332 lineto
stroke
0 setgray
[(1)] 0.01131 0.60332 1 0 Mshowa
grestore
grestore
0 0 moveto
1 0 lineto
1 0.618034 lineto
0 0.618034 lineto
closepath
clip
newpath
0 setgray
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.01472 lineto
0.10317 0.01472 lineto
0.14286 0.01472 lineto
0.18254 0.01472 lineto
0.20238 0.01472 lineto
0.22222 0.01472 lineto
0.24206 0.01472 lineto
0.24702 0.01472 lineto
0.25198 0.01472 lineto
0.25694 0.01472 lineto
0.25818 0.01472 lineto
0.25942 0.01472 lineto
0.26066 0.01472 lineto
0.2619 0.60332 lineto
0.26438 0.60332 lineto
0.26687 0.60332 lineto
0.27183 0.60332 lineto
0.28175 0.60332 lineto
0.30159 0.60332 lineto
0.34127 0.60332 lineto
0.38095 0.60332 lineto
0.42063 0.60332 lineto
0.46032 0.60332 lineto
0.5 0.60332 lineto
0.53968 0.60332 lineto
0.57937 0.60332 lineto
0.61905 0.60332 lineto
0.65873 0.60332 lineto
0.69841 0.60332 lineto
0.71825 0.60332 lineto
0.72817 0.60332 lineto
0.73313 0.60332 lineto
0.73562 0.60332 lineto
0.73686 0.60332 lineto
0.7381 0.60332 lineto
0.73934 0.01472 lineto
0.74058 0.01472 lineto
0.74306 0.01472 lineto
0.74802 0.01472 lineto
0.75794 0.01472 lineto
0.77778 0.01472 lineto
0.81746 0.01472 lineto
0.85714 0.01472 lineto
0.89683 0.01472 lineto
0.93651 0.01472 lineto
0.97619 0.01472 lineto
stroke
grestore
grestore
% End of Graphics
MathPictureEnd
%%EPS Trailer
end
 
%%EndDocument
 @endspecial 495 2993 a Fb(Figure)f(3.)46 b Fk(F)-5 b(requency)17
b(resp)r(onse)f(of)i(the)f(ideal)h(lo)n(wpass)g(\014lter.)0
3243 y Fj(If)f(w)n(e)g(truncate)e Fh(h)446 3251 y Ff(s)470
3243 y Fk(\()p Fh(t)p Fk(\))h Fj(at)g(the)h(\014fth)f(zero-crossing)h(to)g
(the)f(left)h(and)g(the)f(righ)n(t)h(of)h(the)e(origin,)j(w)n(e)0
3321 y(obtain)k(the)f(frequency)f(resp)r(onse)h(sho)n(wn)h(in)g(Figure)g(4.)
31 b(Note)22 b(that)g(the)g(stopband)h(exhibits)0 3398 y(only)g(sligh)n(tly)h
(more)d(than)h(20)g(dB)g(rejection.)1186 3533 y Fk(4)p eop
%%Page: 5 5
4 bop 417 963 a @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury
2820 @rwi @setspecial
%%BeginDocument: eps/SincTruncatedF.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 174
%%Creator: Mathematica
%%Title: Clipboard
%%CreationDate: Never Never
%%EndComments
50 dict begin
/Mnodistort true def
/pageDashArray [4] def
/nullDashArray [] def

% Compute the minimum of two numbers.
/Mmin {		% p q Mmin min(p,q)
	2 copy		% p q p q
	gt		% p q p>q?
	{ exch } if	% min(p,q) max(p,q)
	pop		% min(p,q)
} bind def


% Compute the maximum of two numbers.
/Mmax {		% p q Mmax max(p,q)
	2 copy		% p q p q
	lt		% p q p<q?
	{ exch } if	% max(p,q) min(p,q)
	pop		% max(p,q)
} bind def

/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain
	/Courier findfont
def
/Bold
	/Courier-Bold findfont
def
/Italic
	/Courier-Oblique findfont
def
/MathPictureStart {
	gsave
	newpath
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
0 setgray 0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	[
	7 -2 roll
	[ 2 index 2 index
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
	
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	show
	} for
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Mgmatrix
	matrix currentmatrix
	def
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/Mfontsize	12 def
/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Courier findfont 12 scalefont setfont
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
% Scaling calculations
0.50047 0.00093 0.59826 0.0062 [
[(Frequency Response : Rectangular Window)] 0.5 0.62428 0 -1 Msboxa
[(-400)] 0.12808 0.58576 0 1 Msboxa
[(-200)] 0.31427 0.58576 0 1 Msboxa
[(200)] 0.68666 0.58576 0 1 Msboxa
[(400)] 0.87285 0.58576 0 1 Msboxa
[(-80)] 0.48797 0.10192 1 0 Msboxa
[(-60)] 0.48797 0.22601 1 0 Msboxa
[(-40)] 0.48797 0.35009 1 0 Msboxa
[(-20)] 0.48797 0.47417 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
0 setgray
[(Frequency Response : Rectangular Window)] 0.5 0.62428 0 -1 Mshowa
gsave
gsave
0.002 setlinewidth
0 0.59826 moveto
1 0.59826 lineto
stroke
0.12808 0.59201 moveto
0.12808 0.60451 lineto
stroke
0 setgray
[(-400)] 0.12808 0.58576 0 1 Mshowa
0.31427 0.59201 moveto
0.31427 0.60451 lineto
stroke
0 setgray
[(-200)] 0.31427 0.58576 0 1 Mshowa
0.68666 0.59201 moveto
0.68666 0.60451 lineto
stroke
0 setgray
[(200)] 0.68666 0.58576 0 1 Mshowa
0.87285 0.59201 moveto
0.87285 0.60451 lineto
stroke
0 setgray
[(400)] 0.87285 0.58576 0 1 Mshowa
0.50047 0 moveto
0.50047 0.61803 lineto
stroke
0.49422 0.10192 moveto
0.50672 0.10192 lineto
stroke
0 setgray
[(-80)] 0.48797 0.10192 1 0 Mshowa
0.49422 0.22601 moveto
0.50672 0.22601 lineto
stroke
0 setgray
[(-60)] 0.48797 0.22601 1 0 Mshowa
0.49422 0.35009 moveto
0.50672 0.35009 lineto
stroke
0 setgray
[(-40)] 0.48797 0.35009 1 0 Mshowa
0.49422 0.47417 moveto
0.50672 0.47417 lineto
stroke
0 setgray
[(-20)] 0.48797 0.47417 1 0 Mshowa
grestore
grestore
0 0 moveto
1 0 lineto
1 0.618034 lineto
0 0.618034 lineto
closepath
clip
newpath
0 setgray
gsave
gsave
0.008 setlinewidth
0.50047 0.60027 Mdot
0.5014 0.60026 Mdot
0.50233 0.60021 Mdot
0.50326 0.60014 Mdot
0.50419 0.60004 Mdot
0.50512 0.59991 Mdot
0.50605 0.59975 Mdot
0.50698 0.59958 Mdot
0.50791 0.59938 Mdot
0.50884 0.59916 Mdot
0.50978 0.59893 Mdot
0.51071 0.59869 Mdot
0.51164 0.59844 Mdot
0.51257 0.59818 Mdot
0.5135 0.59792 Mdot
0.51443 0.59767 Mdot
0.51536 0.59742 Mdot
0.51629 0.59719 Mdot
0.51722 0.59696 Mdot
0.51815 0.59676 Mdot
0.51908 0.59658 Mdot
0.52002 0.59642 Mdot
0.52095 0.59629 Mdot
0.52188 0.59619 Mdot
0.52281 0.59612 Mdot
0.52374 0.59608 Mdot
0.52467 0.59608 Mdot
0.5256 0.59611 Mdot
0.52653 0.59617 Mdot
0.52746 0.59627 Mdot
0.52839 0.5964 Mdot
0.52933 0.59656 Mdot
0.53026 0.59674 Mdot
0.53119 0.59695 Mdot
0.53212 0.59718 Mdot
0.53305 0.59743 Mdot
0.53398 0.59769 Mdot
0.53491 0.59796 Mdot
0.53584 0.59824 Mdot
0.53677 0.59852 Mdot
0.5377 0.5988 Mdot
0.53864 0.59907 Mdot
0.53957 0.59933 Mdot
0.5405 0.59958 Mdot
0.54143 0.5998 Mdot
0.54236 0.60001 Mdot
0.54329 0.60019 Mdot
0.54422 0.60035 Mdot
0.54515 0.60047 Mdot
0.54608 0.60057 Mdot
0.54701 0.60063 Mdot
0.54794 0.60065 Mdot
0.54888 0.60064 Mdot
0.54981 0.60059 Mdot
0.55074 0.60051 Mdot
0.55167 0.60039 Mdot
0.5526 0.60024 Mdot
0.55353 0.60005 Mdot
0.55446 0.59983 Mdot
0.55539 0.59959 Mdot
0.55632 0.59932 Mdot
0.55725 0.59902 Mdot
0.55819 0.5987 Mdot
0.55912 0.59837 Mdot
0.56005 0.59803 Mdot
0.56098 0.59769 Mdot
0.56191 0.59734 Mdot
0.56284 0.59699 Mdot
0.56377 0.59666 Mdot
0.5647 0.59634 Mdot
0.56563 0.59605 Mdot
0.56656 0.59578 Mdot
0.5675 0.59554 Mdot
0.56843 0.59534 Mdot
0.56936 0.59518 Mdot
0.57029 0.59506 Mdot
0.57122 0.59499 Mdot
0.57215 0.59498 Mdot
0.57308 0.59502 Mdot
0.57401 0.59511 Mdot
0.57494 0.59525 Mdot
0.57587 0.59545 Mdot
0.5768 0.5957 Mdot
0.57774 0.596 Mdot
0.57867 0.59634 Mdot
0.5796 0.59673 Mdot
0.58053 0.59715 Mdot
0.58146 0.5976 Mdot
0.58239 0.59808 Mdot
0.58332 0.59857 Mdot
0.58425 0.59908 Mdot
0.58518 0.59959 Mdot
0.58611 0.60009 Mdot
0.58705 0.60058 Mdot
0.58798 0.60106 Mdot
0.58891 0.60151 Mdot
0.58984 0.60192 Mdot
0.59077 0.60229 Mdot
0.5917 0.60262 Mdot
0.59263 0.60289 Mdot
0.59356 0.6031 Mdot
0.59449 0.60325 Mdot
0.59542 0.60332 Mdot
0.59636 0.60331 Mdot
0.59729 0.60322 Mdot
0.59822 0.60303 Mdot
0.59915 0.60275 Mdot
0.60008 0.60237 Mdot
0.60101 0.60188 Mdot
0.60194 0.60128 Mdot
0.60287 0.60057 Mdot
0.6038 0.59973 Mdot
0.60473 0.59876 Mdot
0.60566 0.59766 Mdot
0.6066 0.59642 Mdot
0.60753 0.59503 Mdot
0.60846 0.59349 Mdot
0.60939 0.5918 Mdot
0.61032 0.58994 Mdot
0.61125 0.5879 Mdot
0.61218 0.58569 Mdot
0.61311 0.58328 Mdot
0.61404 0.58068 Mdot
0.61497 0.57786 Mdot
0.61591 0.57481 Mdot
0.61684 0.57153 Mdot
0.61777 0.56798 Mdot
0.6187 0.56416 Mdot
0.61963 0.56004 Mdot
0.62056 0.5556 Mdot
0.62149 0.55079 Mdot
0.62242 0.54559 Mdot
0.62335 0.53993 Mdot
0.62428 0.53377 Mdot
0.62522 0.52703 Mdot
0.62615 0.51959 Mdot
0.62708 0.51133 Mdot
0.62801 0.50204 Mdot
0.62894 0.49145 Mdot
0.62987 0.4791 Mdot
0.6308 0.46423 Mdot
0.63173 0.44539 Mdot
0.63266 0.41918 Mdot
0.63359 0.37354 Mdot
0.63452 0.28718 Mdot
0.63546 0.38647 Mdot
0.63639 0.41626 Mdot
0.63732 0.43305 Mdot
0.63825 0.44401 Mdot
0.63918 0.45155 Mdot
0.64011 0.4568 Mdot
0.64104 0.46035 Mdot
0.64197 0.46255 Mdot
0.6429 0.46364 Mdot
0.64383 0.46373 Mdot
0.64477 0.46293 Mdot
0.6457 0.46126 Mdot
0.64663 0.45874 Mdot
0.64756 0.45536 Mdot
0.64849 0.45104 Mdot
0.64942 0.44571 Mdot
0.65035 0.4392 Mdot
0.65128 0.43128 Mdot
0.65221 0.42154 Mdot
0.65314 0.40934 Mdot
0.65408 0.3934 Mdot
0.65501 0.3709 Mdot
0.65594 0.33283 Mdot
0.65687 0.08602 Mdot
0.6578 0.3289 Mdot
0.65873 0.36475 Mdot
0.65966 0.38466 Mdot
0.66059 0.3979 Mdot
0.66152 0.40736 Mdot
0.66245 0.41434 Mdot
0.66339 0.4195 Mdot
0.66432 0.42323 Mdot
0.66525 0.42578 Mdot
0.66618 0.42731 Mdot
0.66711 0.42792 Mdot
0.66804 0.42767 Mdot
0.66897 0.42658 Mdot
0.6699 0.42466 Mdot
0.67083 0.42189 Mdot
0.67176 0.41819 Mdot
0.67269 0.41349 Mdot
0.67363 0.40762 Mdot
0.67456 0.40034 Mdot
0.67549 0.39129 Mdot
0.67642 0.37982 Mdot
0.67735 0.36473 Mdot
0.67828 0.34337 Mdot
0.67921 0.30758 Mdot
0.68014 0.16688 Mdot
0.68107 0.29712 Mdot
0.682 0.3355 Mdot
0.68294 0.35654 Mdot
0.68387 0.37059 Mdot
0.6848 0.38073 Mdot
0.68573 0.38831 Mdot
0.68666 0.39403 Mdot
0.68759 0.3983 Mdot
0.68852 0.40137 Mdot
0.68945 0.40341 Mdot
0.69038 0.40453 Mdot
0.69131 0.40478 Mdot
0.69225 0.4042 Mdot
0.69318 0.4028 Mdot
0.69411 0.40056 Mdot
0.69504 0.39742 Mdot
0.69597 0.39331 Mdot
0.6969 0.38809 Mdot
0.69783 0.38156 Mdot
0.69876 0.37339 Mdot
0.69969 0.36304 Mdot
0.70062 0.34956 Mdot
0.70155 0.33093 Mdot
0.70249 0.30178 Mdot
0.70342 0.23412 Mdot
0.70435 0.25464 Mdot
0.70528 0.3067 Mdot
0.70621 0.33167 Mdot
0.70714 0.34772 Mdot
0.70807 0.35916 Mdot
0.709 0.3677 Mdot
0.70993 0.37419 Mdot
0.71086 0.37912 Mdot
0.7118 0.38279 Mdot
0.71273 0.38538 Mdot
0.71366 0.38701 Mdot
0.71459 0.38776 Mdot
0.71552 0.38768 Mdot
0.71645 0.38678 Mdot
0.71738 0.38505 Mdot
0.71831 0.38245 Mdot
0.71924 0.37892 Mdot
0.72017 0.37435 Mdot
0.72111 0.36856 Mdot
0.72204 0.36129 Mdot
0.72297 0.3521 Mdot
0.7239 0.34027 Mdot
0.72483 0.32435 Mdot
0.72576 0.30096 Mdot
0.72669 0.25815 Mdot
0.72762 0.17268 Mdot
0.72855 0.27565 Mdot
0.72948 0.30795 Mdot
0.73041 0.32712 Mdot
0.73135 0.34038 Mdot
0.73228 0.35016 Mdot
0.73321 0.35759 Mdot
0.73414 0.36328 Mdot
0.73507 0.3676 Mdot
0.736 0.37077 Mdot
0.73693 0.37294 Mdot
0.73786 0.3742 Mdot
0.73879 0.37462 Mdot
0.73972 0.37421 Mdot
0.74066 0.37298 Mdot
0.74159 0.37091 Mdot
0.74252 0.36794 Mdot
0.74345 0.36398 Mdot
0.74438 0.3589 Mdot
0.74531 0.35249 Mdot
0.74624 0.34439 Mdot
0.74717 0.33405 Mdot
0.7481 0.32044 Mdot
0.74903 0.30138 Mdot
0.74997 0.27084 Mdot
0.7509 0.19259 Mdot
0.75183 0.23597 Mdot
0.75276 0.28337 Mdot
0.75369 0.30738 Mdot
0.75462 0.32311 Mdot
0.75555 0.33446 Mdot
0.75648 0.34302 Mdot
0.75741 0.34958 Mdot
0.75834 0.35462 Mdot
0.75927 0.35842 Mdot
0.76021 0.36115 Mdot
0.76114 0.36294 Mdot
0.76207 0.36385 Mdot
0.763 0.36393 Mdot
0.76393 0.3632 Mdot
0.76486 0.36163 Mdot
0.76579 0.35921 Mdot
0.76672 0.35585 Mdot
0.76765 0.35144 Mdot
0.76858 0.34581 Mdot
0.76952 0.33869 Mdot
0.77045 0.32966 Mdot
0.77138 0.31797 Mdot
0.77231 0.30215 Mdot
0.77324 0.27879 Mdot
0.77417 0.23566 Mdot
0.7751 0.15549 Mdot
0.77603 0.25505 Mdot
0.77696 0.28723 Mdot
0.77789 0.30647 Mdot
0.77883 0.31984 Mdot
0.77976 0.32975 Mdot
0.78069 0.33733 Mdot
0.78162 0.34318 Mdot
0.78255 0.34765 Mdot
0.78348 0.35098 Mdot
0.78441 0.35331 Mdot
0.78534 0.35473 Mdot
0.78627 0.35531 Mdot
0.7872 0.35506 Mdot
0.78813 0.354 Mdot
0.78907 0.3521 Mdot
0.79 0.3493 Mdot
0.79093 0.34552 Mdot
0.79186 0.34062 Mdot
0.79279 0.33439 Mdot
0.79372 0.3265 Mdot
0.79465 0.31639 Mdot
0.79558 0.30305 Mdot
0.79651 0.28438 Mdot
0.79744 0.25458 Mdot
0.79838 0.18077 Mdot
0.79931 0.21589 Mdot
0.80024 0.26506 Mdot
0.80117 0.28963 Mdot
0.8021 0.30569 Mdot
0.80303 0.31729 Mdot
0.80396 0.32606 Mdot
0.80489 0.33282 Mdot
0.80582 0.33804 Mdot
0.80675 0.34201 Mdot
0.80769 0.34491 Mdot
0.80862 0.34686 Mdot
0.80955 0.34794 Mdot
0.81048 0.34818 Mdot
0.81141 0.34761 Mdot
0.81234 0.34622 Mdot
0.81327 0.34396 Mdot
0.8142 0.34077 Mdot
0.81513 0.33655 Mdot
0.81606 0.33112 Mdot
0.81699 0.32422 Mdot
0.81793 0.31545 Mdot
0.81886 0.30407 Mdot
0.81979 0.2887 Mdot
0.82072 0.26613 Mdot
0.82165 0.22536 Mdot
0.82258 0.11801 Mdot
0.82351 0.23787 Mdot
0.82444 0.27158 Mdot
0.82537 0.29146 Mdot
0.8263 0.30522 Mdot
0.82724 0.31543 Mdot
0.82817 0.32325 Mdot
0.8291 0.3293 Mdot
0.83003 0.33397 Mdot
0.83096 0.33747 Mdot
0.83189 0.33997 Mdot
0.83282 0.34156 Mdot
0.83375 0.3423 Mdot
0.83468 0.34222 Mdot
0.83561 0.34132 Mdot
0.83655 0.33958 Mdot
0.83748 0.33696 Mdot
0.83841 0.33336 Mdot
0.83934 0.32866 Mdot
0.84027 0.32265 Mdot
0.8412 0.31501 Mdot
0.84213 0.30522 Mdot
0.84306 0.29231 Mdot
0.84399 0.27433 Mdot
0.84492 0.24603 Mdot
0.84585 0.18103 Mdot
0.84679 0.1968 Mdot
0.84772 0.25071 Mdot
0.84865 0.27648 Mdot
0.84958 0.29315 Mdot
0.85051 0.30514 Mdot
0.85144 0.3142 Mdot
0.85237 0.32121 Mdot
0.8533 0.32664 Mdot
0.85423 0.3308 Mdot
0.85516 0.33387 Mdot
0.8561 0.336 Mdot
0.85703 0.33724 Mdot
0.85796 0.33765 Mdot
0.85889 0.33724 Mdot
0.85982 0.33601 Mdot
0.86075 0.33392 Mdot
0.86168 0.33091 Mdot
0.86261 0.32688 Mdot
0.86354 0.32167 Mdot
0.86447 0.31501 Mdot
0.86541 0.30653 Mdot
0.86634 0.29554 Mdot
0.86727 0.28075 Mdot
0.8682 0.25923 Mdot
0.86913 0.22156 Mdot
0.87006 0.01472 Mdot
0.87099 0.22353 Mdot
0.87192 0.25977 Mdot
0.87285 0.2806 Mdot
0.87378 0.2949 Mdot
0.87471 0.30547 Mdot
0.87565 0.31357 Mdot
0.87658 0.31987 Mdot
0.87751 0.32474 Mdot
0.87844 0.32843 Mdot
0.87937 0.33111 Mdot
0.8803 0.33287 Mdot
0.88123 0.33377 Mdot
0.88216 0.33385 Mdot
0.88309 0.33312 Mdot
0.88402 0.33155 Mdot
0.88496 0.3291 Mdot
0.88589 0.32569 Mdot
0.88682 0.32119 Mdot
0.88775 0.31541 Mdot
0.88868 0.30805 Mdot
0.88961 0.2986 Mdot
0.89054 0.28617 Mdot
0.89147 0.26897 Mdot
0.8924 0.24239 Mdot
0.89333 0.18579 Mdot
0.89427 0.17802 Mdot
0.8952 0.23953 Mdot
0.89613 0.26694 Mdot
0.89706 0.28437 Mdot
0.89799 0.29684 Mdot
0.89892 0.30625 Mdot
0.89985 0.31352 Mdot
0.90078 0.31918 Mdot
0.90171 0.32354 Mdot
0.90264 0.3268 Mdot
0.90357 0.3291 Mdot
0.90451 0.33051 Mdot
0.90544 0.33108 Mdot
0.90637 0.33083 Mdot
0.9073 0.32977 Mdot
0.90823 0.32785 Mdot
0.90916 0.32503 Mdot
0.91009 0.32119 Mdot
0.91102 0.31619 Mdot
0.91195 0.30979 Mdot
0.91288 0.30162 Mdot
0.91382 0.29103 Mdot
0.91475 0.27685 Mdot
0.91568 0.25645 Mdot
0.91661 0.22184 Mdot
0.91754 0.09017 Mdot
0.91847 0.21147 Mdot
0.9194 0.25112 Mdot
0.92033 0.27313 Mdot
0.92126 0.28807 Mdot
0.92219 0.29906 Mdot
0.92313 0.30748 Mdot
0.92406 0.31402 Mdot
0.92499 0.31911 Mdot
0.92592 0.323 Mdot
0.92685 0.32586 Mdot
0.92778 0.32779 Mdot
0.92871 0.32886 Mdot
0.92964 0.3291 Mdot
0.93057 0.32853 Mdot
0.9315 0.32713 Mdot
0.93243 0.32485 Mdot
0.93337 0.32163 Mdot
0.9343 0.31734 Mdot
0.93523 0.31179 Mdot
0.93616 0.3047 Mdot
0.93709 0.2956 Mdot
0.93802 0.28367 Mdot
0.93895 0.26727 Mdot
0.93988 0.24235 Mdot
0.94081 0.19273 Mdot
0.94174 0.15788 Mdot
0.94268 0.23107 Mdot
0.94361 0.26051 Mdot
0.94454 0.27884 Mdot
0.94547 0.29184 Mdot
0.9464 0.30161 Mdot
0.94733 0.30918 Mdot
0.94826 0.31508 Mdot
0.94919 0.31965 Mdot
0.95012 0.3231 Mdot
0.95105 0.32557 Mdot
0.95199 0.32714 Mdot
0.95292 0.32788 Mdot
0.95385 0.3278 Mdot
0.95478 0.3269 Mdot
0.95571 0.32515 Mdot
0.95664 0.32251 Mdot
0.95757 0.31886 Mdot
0.9585 0.31408 Mdot
0.95943 0.30793 Mdot
0.96036 0.30007 Mdot
0.96129 0.28989 Mdot
0.96223 0.27632 Mdot
0.96316 0.25699 Mdot
0.96409 0.22515 Mdot
0.96502 0.13275 Mdot
0.96595 0.20129 Mdot
0.96688 0.24534 Mdot
0.96781 0.26871 Mdot
0.96874 0.28436 Mdot
0.96967 0.29581 Mdot
0.9706 0.30456 Mdot
0.97154 0.31137 Mdot
0.97247 0.31669 Mdot
0.9734 0.32078 Mdot
0.97433 0.32381 Mdot
0.97526 0.32592 Mdot
0.97619 0.32715 Mdot
0.02381 0.32756 Mdot
0.02474 0.32715 Mdot
0.02567 0.32592 Mdot
0.0266 0.32381 Mdot
0.02753 0.32078 Mdot
0.02846 0.31669 Mdot
0.0294 0.31137 Mdot
0.03033 0.30456 Mdot
0.03126 0.29581 Mdot
0.03219 0.28436 Mdot
0.03312 0.26871 Mdot
0.03405 0.24534 Mdot
0.03498 0.20129 Mdot
0.03591 0.13275 Mdot
0.03684 0.22515 Mdot
0.03777 0.25699 Mdot
0.03871 0.27632 Mdot
0.03964 0.28989 Mdot
0.04057 0.30007 Mdot
0.0415 0.30793 Mdot
0.04243 0.31408 Mdot
0.04336 0.31886 Mdot
0.04429 0.32251 Mdot
0.04522 0.32515 Mdot
0.04615 0.3269 Mdot
0.04708 0.3278 Mdot
0.04801 0.32788 Mdot
0.04895 0.32714 Mdot
0.04988 0.32557 Mdot
0.05081 0.3231 Mdot
0.05174 0.31965 Mdot
0.05267 0.31508 Mdot
0.0536 0.30918 Mdot
0.05453 0.30161 Mdot
0.05546 0.29184 Mdot
0.05639 0.27884 Mdot
0.05732 0.26051 Mdot
0.05826 0.23107 Mdot
0.05919 0.15788 Mdot
0.06012 0.19273 Mdot
0.06105 0.24235 Mdot
0.06198 0.26727 Mdot
0.06291 0.28367 Mdot
0.06384 0.2956 Mdot
0.06477 0.3047 Mdot
0.0657 0.31179 Mdot
0.06663 0.31734 Mdot
0.06757 0.32163 Mdot
0.0685 0.32485 Mdot
0.06943 0.32713 Mdot
0.07036 0.32853 Mdot
0.07129 0.3291 Mdot
0.07222 0.32886 Mdot
0.07315 0.32779 Mdot
0.07408 0.32586 Mdot
0.07501 0.323 Mdot
0.07594 0.31911 Mdot
0.07687 0.31402 Mdot
0.07781 0.30748 Mdot
0.07874 0.29906 Mdot
0.07967 0.28807 Mdot
0.0806 0.27313 Mdot
0.08153 0.25112 Mdot
0.08246 0.21147 Mdot
0.08339 0.09017 Mdot
0.08432 0.22184 Mdot
0.08525 0.25645 Mdot
0.08618 0.27685 Mdot
0.08712 0.29103 Mdot
0.08805 0.30162 Mdot
0.08898 0.30979 Mdot
0.08991 0.31619 Mdot
0.09084 0.32119 Mdot
0.09177 0.32503 Mdot
0.0927 0.32785 Mdot
0.09363 0.32977 Mdot
0.09456 0.33083 Mdot
0.09549 0.33108 Mdot
0.09643 0.33051 Mdot
0.09736 0.3291 Mdot
0.09829 0.3268 Mdot
0.09922 0.32354 Mdot
0.10015 0.31918 Mdot
0.10108 0.31352 Mdot
0.10201 0.30625 Mdot
0.10294 0.29684 Mdot
0.10387 0.28437 Mdot
0.1048 0.26694 Mdot
0.10573 0.23953 Mdot
0.10667 0.17802 Mdot
0.1076 0.18579 Mdot
0.10853 0.24239 Mdot
0.10946 0.26897 Mdot
0.11039 0.28617 Mdot
0.11132 0.2986 Mdot
0.11225 0.30805 Mdot
0.11318 0.31541 Mdot
0.11411 0.32119 Mdot
0.11504 0.32569 Mdot
0.11598 0.3291 Mdot
0.11691 0.33155 Mdot
0.11784 0.33312 Mdot
0.11877 0.33385 Mdot
0.1197 0.33377 Mdot
0.12063 0.33287 Mdot
0.12156 0.33111 Mdot
0.12249 0.32843 Mdot
0.12342 0.32474 Mdot
0.12435 0.31987 Mdot
0.12529 0.31357 Mdot
0.12622 0.30547 Mdot
0.12715 0.2949 Mdot
0.12808 0.2806 Mdot
0.12901 0.25977 Mdot
0.12994 0.22353 Mdot
0.13087 0.01472 Mdot
0.1318 0.22156 Mdot
0.13273 0.25923 Mdot
0.13366 0.28075 Mdot
0.13459 0.29554 Mdot
0.13553 0.30653 Mdot
0.13646 0.31501 Mdot
0.13739 0.32167 Mdot
0.13832 0.32688 Mdot
0.13925 0.33091 Mdot
0.14018 0.33392 Mdot
0.14111 0.33601 Mdot
0.14204 0.33724 Mdot
0.14297 0.33765 Mdot
0.1439 0.33724 Mdot
0.14484 0.336 Mdot
0.14577 0.33387 Mdot
0.1467 0.3308 Mdot
0.14763 0.32664 Mdot
0.14856 0.32121 Mdot
0.14949 0.3142 Mdot
0.15042 0.30514 Mdot
0.15135 0.29315 Mdot
0.15228 0.27648 Mdot
0.15321 0.25071 Mdot
0.15415 0.1968 Mdot
0.15508 0.18103 Mdot
0.15601 0.24603 Mdot
0.15694 0.27433 Mdot
0.15787 0.29231 Mdot
0.1588 0.30522 Mdot
0.15973 0.31501 Mdot
0.16066 0.32265 Mdot
0.16159 0.32866 Mdot
0.16252 0.33336 Mdot
0.16345 0.33696 Mdot
0.16439 0.33958 Mdot
0.16532 0.34132 Mdot
0.16625 0.34222 Mdot
0.16718 0.3423 Mdot
0.16811 0.34156 Mdot
0.16904 0.33997 Mdot
0.16997 0.33747 Mdot
0.1709 0.33397 Mdot
0.17183 0.3293 Mdot
0.17276 0.32325 Mdot
0.1737 0.31543 Mdot
0.17463 0.30522 Mdot
0.17556 0.29146 Mdot
0.17649 0.27158 Mdot
0.17742 0.23787 Mdot
0.17835 0.11801 Mdot
0.17928 0.22536 Mdot
0.18021 0.26613 Mdot
0.18114 0.2887 Mdot
0.18207 0.30407 Mdot
0.18301 0.31545 Mdot
0.18394 0.32422 Mdot
0.18487 0.33112 Mdot
0.1858 0.33655 Mdot
0.18673 0.34077 Mdot
0.18766 0.34396 Mdot
0.18859 0.34622 Mdot
0.18952 0.34761 Mdot
0.19045 0.34818 Mdot
0.19138 0.34794 Mdot
0.19231 0.34686 Mdot
0.19325 0.34491 Mdot
0.19418 0.34201 Mdot
0.19511 0.33804 Mdot
0.19604 0.33282 Mdot
0.19697 0.32606 Mdot
0.1979 0.31729 Mdot
0.19883 0.30569 Mdot
0.19976 0.28963 Mdot
0.20069 0.26506 Mdot
0.20162 0.21589 Mdot
0.20256 0.18077 Mdot
0.20349 0.25458 Mdot
0.20442 0.28438 Mdot
0.20535 0.30305 Mdot
0.20628 0.31639 Mdot
0.20721 0.3265 Mdot
0.20814 0.33439 Mdot
0.20907 0.34062 Mdot
0.21 0.34552 Mdot
0.21093 0.3493 Mdot
0.21187 0.3521 Mdot
0.2128 0.354 Mdot
0.21373 0.35506 Mdot
0.21466 0.35531 Mdot
0.21559 0.35473 Mdot
0.21652 0.35331 Mdot
0.21745 0.35098 Mdot
0.21838 0.34765 Mdot
0.21931 0.34318 Mdot
0.22024 0.33733 Mdot
0.22117 0.32975 Mdot
0.22211 0.31984 Mdot
0.22304 0.30647 Mdot
0.22397 0.28723 Mdot
0.2249 0.25505 Mdot
0.22583 0.15549 Mdot
0.22676 0.23566 Mdot
0.22769 0.27879 Mdot
0.22862 0.30215 Mdot
0.22955 0.31797 Mdot
0.23048 0.32966 Mdot
0.23142 0.33869 Mdot
0.23235 0.34581 Mdot
0.23328 0.35144 Mdot
0.23421 0.35585 Mdot
0.23514 0.35921 Mdot
0.23607 0.36163 Mdot
0.237 0.3632 Mdot
0.23793 0.36393 Mdot
0.23886 0.36385 Mdot
0.23979 0.36294 Mdot
0.24073 0.36115 Mdot
0.24166 0.35842 Mdot
0.24259 0.35462 Mdot
0.24352 0.34958 Mdot
0.24445 0.34302 Mdot
0.24538 0.33446 Mdot
0.24631 0.32311 Mdot
0.24724 0.30738 Mdot
0.24817 0.28337 Mdot
0.2491 0.23597 Mdot
0.25003 0.19259 Mdot
0.25097 0.27084 Mdot
0.2519 0.30138 Mdot
0.25283 0.32044 Mdot
0.25376 0.33405 Mdot
0.25469 0.34439 Mdot
0.25562 0.35249 Mdot
0.25655 0.3589 Mdot
0.25748 0.36398 Mdot
0.25841 0.36794 Mdot
0.25934 0.37091 Mdot
0.26028 0.37298 Mdot
0.26121 0.37421 Mdot
0.26214 0.37462 Mdot
0.26307 0.3742 Mdot
0.264 0.37294 Mdot
0.26493 0.37077 Mdot
0.26586 0.3676 Mdot
0.26679 0.36328 Mdot
0.26772 0.35759 Mdot
0.26865 0.35016 Mdot
0.26959 0.34038 Mdot
0.27052 0.32712 Mdot
0.27145 0.30795 Mdot
0.27238 0.27565 Mdot
0.27331 0.17268 Mdot
0.27424 0.25815 Mdot
0.27517 0.30096 Mdot
0.2761 0.32435 Mdot
0.27703 0.34027 Mdot
0.27796 0.3521 Mdot
0.27889 0.36129 Mdot
0.27983 0.36856 Mdot
0.28076 0.37435 Mdot
0.28169 0.37892 Mdot
0.28262 0.38245 Mdot
0.28355 0.38505 Mdot
0.28448 0.38678 Mdot
0.28541 0.38768 Mdot
0.28634 0.38776 Mdot
0.28727 0.38701 Mdot
0.2882 0.38538 Mdot
0.28914 0.38279 Mdot
0.29007 0.37912 Mdot
0.291 0.37419 Mdot
0.29193 0.3677 Mdot
0.29286 0.35916 Mdot
0.29379 0.34772 Mdot
0.29472 0.33167 Mdot
0.29565 0.3067 Mdot
0.29658 0.25464 Mdot
0.29751 0.23412 Mdot
0.29845 0.30178 Mdot
0.29938 0.33093 Mdot
0.30031 0.34956 Mdot
0.30124 0.36304 Mdot
0.30217 0.37339 Mdot
0.3031 0.38156 Mdot
0.30403 0.38809 Mdot
0.30496 0.39331 Mdot
0.30589 0.39742 Mdot
0.30682 0.40056 Mdot
0.30775 0.4028 Mdot
0.30869 0.4042 Mdot
0.30962 0.40478 Mdot
0.31055 0.40453 Mdot
0.31148 0.40341 Mdot
0.31241 0.40137 Mdot
0.31334 0.3983 Mdot
0.31427 0.39403 Mdot
0.3152 0.38831 Mdot
0.31613 0.38073 Mdot
0.31706 0.37059 Mdot
0.318 0.35654 Mdot
0.31893 0.3355 Mdot
0.31986 0.29712 Mdot
0.32079 0.16688 Mdot
0.32172 0.30758 Mdot
0.32265 0.34337 Mdot
0.32358 0.36473 Mdot
0.32451 0.37982 Mdot
0.32544 0.39129 Mdot
0.32637 0.40034 Mdot
0.32731 0.40762 Mdot
0.32824 0.41349 Mdot
0.32917 0.41819 Mdot
0.3301 0.42189 Mdot
0.33103 0.42466 Mdot
0.33196 0.42658 Mdot
0.33289 0.42767 Mdot
0.33382 0.42792 Mdot
0.33475 0.42731 Mdot
0.33568 0.42578 Mdot
0.33661 0.42323 Mdot
0.33755 0.4195 Mdot
0.33848 0.41434 Mdot
0.33941 0.40736 Mdot
0.34034 0.3979 Mdot
0.34127 0.38466 Mdot
0.3422 0.36475 Mdot
0.34313 0.3289 Mdot
0.34406 0.08602 Mdot
0.34499 0.33283 Mdot
0.34592 0.3709 Mdot
0.34686 0.3934 Mdot
0.34779 0.40934 Mdot
0.34872 0.42154 Mdot
0.34965 0.43128 Mdot
0.35058 0.4392 Mdot
0.35151 0.44571 Mdot
0.35244 0.45104 Mdot
0.35337 0.45536 Mdot
0.3543 0.45874 Mdot
0.35523 0.46126 Mdot
0.35617 0.46293 Mdot
0.3571 0.46373 Mdot
0.35803 0.46364 Mdot
0.35896 0.46255 Mdot
0.35989 0.46035 Mdot
0.36082 0.4568 Mdot
0.36175 0.45155 Mdot
0.36268 0.44401 Mdot
0.36361 0.43305 Mdot
0.36454 0.41626 Mdot
0.36548 0.38647 Mdot
0.36641 0.28718 Mdot
0.36734 0.37354 Mdot
0.36827 0.41918 Mdot
0.3692 0.44539 Mdot
0.37013 0.46423 Mdot
0.37106 0.4791 Mdot
0.37199 0.49145 Mdot
0.37292 0.50204 Mdot
0.37385 0.51133 Mdot
0.37478 0.51959 Mdot
0.37572 0.52703 Mdot
0.37665 0.53377 Mdot
0.37758 0.53993 Mdot
0.37851 0.54559 Mdot
0.37944 0.55079 Mdot
0.38037 0.5556 Mdot
0.3813 0.56004 Mdot
0.38223 0.56416 Mdot
0.38316 0.56798 Mdot
0.38409 0.57153 Mdot
0.38503 0.57481 Mdot
0.38596 0.57786 Mdot
0.38689 0.58068 Mdot
0.38782 0.58328 Mdot
0.38875 0.58569 Mdot
0.38968 0.5879 Mdot
0.39061 0.58994 Mdot
0.39154 0.5918 Mdot
0.39247 0.59349 Mdot
0.3934 0.59503 Mdot
0.39434 0.59642 Mdot
0.39527 0.59766 Mdot
0.3962 0.59876 Mdot
0.39713 0.59973 Mdot
0.39806 0.60057 Mdot
0.39899 0.60128 Mdot
0.39992 0.60188 Mdot
0.40085 0.60237 Mdot
0.40178 0.60275 Mdot
0.40271 0.60303 Mdot
0.40364 0.60322 Mdot
0.40458 0.60331 Mdot
0.40551 0.60332 Mdot
0.40644 0.60325 Mdot
0.40737 0.6031 Mdot
0.4083 0.60289 Mdot
0.40923 0.60262 Mdot
0.41016 0.60229 Mdot
0.41109 0.60192 Mdot
0.41202 0.60151 Mdot
0.41295 0.60106 Mdot
0.41389 0.60058 Mdot
0.41482 0.60009 Mdot
0.41575 0.59959 Mdot
0.41668 0.59908 Mdot
0.41761 0.59857 Mdot
0.41854 0.59808 Mdot
0.41947 0.5976 Mdot
0.4204 0.59715 Mdot
0.42133 0.59673 Mdot
0.42226 0.59634 Mdot
0.4232 0.596 Mdot
0.42413 0.5957 Mdot
0.42506 0.59545 Mdot
0.42599 0.59525 Mdot
0.42692 0.59511 Mdot
0.42785 0.59502 Mdot
0.42878 0.59498 Mdot
0.42971 0.59499 Mdot
0.43064 0.59506 Mdot
0.43157 0.59518 Mdot
0.4325 0.59534 Mdot
0.43344 0.59554 Mdot
0.43437 0.59578 Mdot
0.4353 0.59605 Mdot
0.43623 0.59634 Mdot
0.43716 0.59666 Mdot
0.43809 0.59699 Mdot
0.43902 0.59734 Mdot
0.43995 0.59769 Mdot
0.44088 0.59803 Mdot
0.44181 0.59837 Mdot
0.44275 0.5987 Mdot
0.44368 0.59902 Mdot
0.44461 0.59932 Mdot
0.44554 0.59959 Mdot
0.44647 0.59983 Mdot
0.4474 0.60005 Mdot
0.44833 0.60024 Mdot
0.44926 0.60039 Mdot
0.45019 0.60051 Mdot
0.45112 0.60059 Mdot
0.45206 0.60064 Mdot
0.45299 0.60065 Mdot
0.45392 0.60063 Mdot
0.45485 0.60057 Mdot
0.45578 0.60047 Mdot
0.45671 0.60035 Mdot
0.45764 0.60019 Mdot
0.45857 0.60001 Mdot
0.4595 0.5998 Mdot
0.46043 0.59958 Mdot
0.46136 0.59933 Mdot
0.4623 0.59907 Mdot
0.46323 0.5988 Mdot
0.46416 0.59852 Mdot
0.46509 0.59824 Mdot
0.46602 0.59796 Mdot
0.46695 0.59769 Mdot
0.46788 0.59743 Mdot
0.46881 0.59718 Mdot
0.46974 0.59695 Mdot
0.47067 0.59674 Mdot
0.47161 0.59656 Mdot
0.47254 0.5964 Mdot
0.47347 0.59627 Mdot
0.4744 0.59617 Mdot
0.47533 0.59611 Mdot
0.47626 0.59608 Mdot
0.47719 0.59608 Mdot
0.47812 0.59612 Mdot
0.47905 0.59619 Mdot
0.47998 0.59629 Mdot
0.48092 0.59642 Mdot
0.48185 0.59658 Mdot
0.48278 0.59676 Mdot
0.48371 0.59696 Mdot
0.48464 0.59719 Mdot
0.48557 0.59742 Mdot
0.4865 0.59767 Mdot
0.48743 0.59792 Mdot
0.48836 0.59818 Mdot
0.48929 0.59844 Mdot
0.49022 0.59869 Mdot
0.49116 0.59893 Mdot
0.49209 0.59916 Mdot
0.49302 0.59938 Mdot
0.49395 0.59958 Mdot
0.49488 0.59975 Mdot
0.49581 0.59991 Mdot
0.49674 0.60004 Mdot
0.49767 0.60014 Mdot
0.4986 0.60021 Mdot
0.49953 0.60026 Mdot
grestore
grestore
% End of Graphics
MathPictureEnd
%%EPS Trailer
end
 
%%EndDocument
 @endspecial 48 x Fb(Figure)26 b(4.)60 b Fk(F)-5 b(requency)21
b(resp)r(onse)e(of)j(the)f(ideal)g(lo)n(wpass)h(\014lter)f(after)417
1088 y(rectangularly)16 b(windo)n(wing)i(the)g(ideal)g(\(sinc\))f(impulse)h
(resp)r(onse)e(at)h(the)417 1165 y(\014fth)k(zero)h(crossing)f(to)h(the)g
(left)g(and)g(righ)n(t)h(of)f(the)g(time)f(origin.)38 b(The)417
1242 y(v)n(ertical)15 b(axis)h(is)g(in)g(units)f(of)g(decib)r(els)f(\(dB\),)h
(and)g(the)g(horizon)n(tal)f(axis)i(is)417 1319 y(lab)r(eled)h(in)i(units)g
(of)f(sp)r(ectral)f(samples)g(b)r(et)n(w)n(een)g(plus)i(and)f(min)n(us)h
(half)417 1397 y(the)e(sampling)g(rate.)0 1527 y Fj(If)g(w)n(e)f(instead)g
(use)h(the)e(Kaiser)i(windo)n(w)g(to)f(tap)r(er)g Fh(h)1309
1535 y Ff(s)1333 1527 y Fk(\()p Fh(t)p Fk(\))f Fj(to)i(zero)f(b)n(y)g(the)g
(\014fth)g(zero-crossing)h(to)0 1604 y(the)f(left)g(and)g(the)g(righ)n(t)h
(of)g(the)e(origin,)k(w)n(e)d(obtain)h(the)f(frequency)f(resp)r(onse)g(sho)n
(wn)i(in)g(Figure)0 1681 y(5.)31 b(Note)21 b(that)h(no)n(w)h(the)f(stopband)g
(starts)h(out)f(close)g(to)g Fg(\000)p Fk(80)g Fj(dB.)h(The)e(Kaiser)i(windo)
n(w)g(has)0 1759 y(a)d(single)h(parameter)d(whic)n(h)i(can)g(b)r(e)f(used)g
(to)h(mo)r(dify)g(the)g(stop-band)g(atten)n(uation,)g(trading)0
1836 y(it)i(against)i(the)d(transition)i(width)f(from)g(pass-band)h(to)f
(stop-band.)417 2853 y @beginspecial 0 @llx 0 @lly 282 @urx
174 @ury 2820 @rwi @setspecial
%%BeginDocument: eps/SincKaiseredF.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 174
%%Creator: Mathematica
%%Title: Clipboard
%%CreationDate: Never Never
%%EndComments
50 dict begin
/Mnodistort true def
/pageDashArray [4] def
/nullDashArray [] def

% Compute the minimum of two numbers.
/Mmin {		% p q Mmin min(p,q)
	2 copy		% p q p q
	gt		% p q p>q?
	{ exch } if	% min(p,q) max(p,q)
	pop		% min(p,q)
} bind def


% Compute the maximum of two numbers.
/Mmax {		% p q Mmax max(p,q)
	2 copy		% p q p q
	lt		% p q p<q?
	{ exch } if	% max(p,q) min(p,q)
	pop		% max(p,q)
} bind def

/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain
	/Courier findfont
def
/Bold
	/Courier-Bold findfont
def
/Italic
	/Courier-Oblique findfont
def
/MathPictureStart {
	gsave
	newpath
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
0 setgray 0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	[
	7 -2 roll
	[ 2 index 2 index
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
	
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	show
	} for
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Mgmatrix
	matrix currentmatrix
	def
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/Mfontsize	12 def
/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Courier findfont 12 scalefont setfont
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
% Scaling calculations
0.50047 0.00093 0.60331 0.00418 [
[(Frequency Response : Kaiser Window)] 0.5 0.62428 0 -1 Msboxa
[(-400)] 0.12808 0.59081 0 1 Msboxa
[(-200)] 0.31427 0.59081 0 1 Msboxa
[(200)] 0.68666 0.59081 0 1 Msboxa
[(400)] 0.87285 0.59081 0 1 Msboxa
[(-140)] 0.48797 0.01832 1 0 Msboxa
[(-120)] 0.48797 0.10189 1 0 Msboxa
[(-100)] 0.48797 0.18546 1 0 Msboxa
[(-80)] 0.48797 0.26903 1 0 Msboxa
[(-60)] 0.48797 0.3526 1 0 Msboxa
[(-40)] 0.48797 0.43617 1 0 Msboxa
[(-20)] 0.48797 0.51974 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
0 setgray
[(Frequency Response : Kaiser Window)] 0.5 0.62428 0 -1 Mshowa
gsave
gsave
0.002 setlinewidth
0 0.60331 moveto
1 0.60331 lineto
stroke
0.12808 0.59706 moveto
0.12808 0.60956 lineto
stroke
0 setgray
[(-400)] 0.12808 0.59081 0 1 Mshowa
0.31427 0.59706 moveto
0.31427 0.60956 lineto
stroke
0 setgray
[(-200)] 0.31427 0.59081 0 1 Mshowa
0.68666 0.59706 moveto
0.68666 0.60956 lineto
stroke
0 setgray
[(200)] 0.68666 0.59081 0 1 Mshowa
0.87285 0.59706 moveto
0.87285 0.60956 lineto
stroke
0 setgray
[(400)] 0.87285 0.59081 0 1 Mshowa
0.50047 0 moveto
0.50047 0.61803 lineto
stroke
0.49422 0.01832 moveto
0.50672 0.01832 lineto
stroke
0 setgray
[(-140)] 0.48797 0.01832 1 0 Mshowa
0.49422 0.10189 moveto
0.50672 0.10189 lineto
stroke
0 setgray
[(-120)] 0.48797 0.10189 1 0 Mshowa
0.49422 0.18546 moveto
0.50672 0.18546 lineto
stroke
0 setgray
[(-100)] 0.48797 0.18546 1 0 Mshowa
0.49422 0.26903 moveto
0.50672 0.26903 lineto
stroke
0 setgray
[(-80)] 0.48797 0.26903 1 0 Mshowa
0.49422 0.3526 moveto
0.50672 0.3526 lineto
stroke
0 setgray
[(-60)] 0.48797 0.3526 1 0 Mshowa
0.49422 0.43617 moveto
0.50672 0.43617 lineto
stroke
0 setgray
[(-40)] 0.48797 0.43617 1 0 Mshowa
0.49422 0.51974 moveto
0.50672 0.51974 lineto
stroke
0 setgray
[(-20)] 0.48797 0.51974 1 0 Mshowa
grestore
grestore
0 0 moveto
1 0 lineto
1 0.618034 lineto
0 0.618034 lineto
closepath
clip
newpath
0 setgray
gsave
gsave
0.008 setlinewidth
0.50047 0.60331 Mdot
0.5014 0.60331 Mdot
0.50233 0.60331 Mdot
0.50326 0.60331 Mdot
0.50419 0.60331 Mdot
0.50512 0.60331 Mdot
0.50605 0.60331 Mdot
0.50698 0.60331 Mdot
0.50791 0.60331 Mdot
0.50884 0.60331 Mdot
0.50978 0.60331 Mdot
0.51071 0.60331 Mdot
0.51164 0.60331 Mdot
0.51257 0.60331 Mdot
0.5135 0.60331 Mdot
0.51443 0.60332 Mdot
0.51536 0.60332 Mdot
0.51629 0.60332 Mdot
0.51722 0.60332 Mdot
0.51815 0.60332 Mdot
0.51908 0.60332 Mdot
0.52002 0.60332 Mdot
0.52095 0.60332 Mdot
0.52188 0.60332 Mdot
0.52281 0.60332 Mdot
0.52374 0.60332 Mdot
0.52467 0.60332 Mdot
0.5256 0.60332 Mdot
0.52653 0.60332 Mdot
0.52746 0.60332 Mdot
0.52839 0.60332 Mdot
0.52933 0.60332 Mdot
0.53026 0.60332 Mdot
0.53119 0.60331 Mdot
0.53212 0.60331 Mdot
0.53305 0.60331 Mdot
0.53398 0.60331 Mdot
0.53491 0.60331 Mdot
0.53584 0.60331 Mdot
0.53677 0.60331 Mdot
0.5377 0.60331 Mdot
0.53864 0.60331 Mdot
0.53957 0.60331 Mdot
0.5405 0.60331 Mdot
0.54143 0.60331 Mdot
0.54236 0.60331 Mdot
0.54329 0.60331 Mdot
0.54422 0.60331 Mdot
0.54515 0.60331 Mdot
0.54608 0.60331 Mdot
0.54701 0.60331 Mdot
0.54794 0.60331 Mdot
0.54888 0.60331 Mdot
0.54981 0.60331 Mdot
0.55074 0.60332 Mdot
0.55167 0.60332 Mdot
0.5526 0.60332 Mdot
0.55353 0.60332 Mdot
0.55446 0.60332 Mdot
0.55539 0.60332 Mdot
0.55632 0.60332 Mdot
0.55725 0.60332 Mdot
0.55819 0.60332 Mdot
0.55912 0.60331 Mdot
0.56005 0.60331 Mdot
0.56098 0.60331 Mdot
0.56191 0.6033 Mdot
0.56284 0.60329 Mdot
0.56377 0.60328 Mdot
0.5647 0.60327 Mdot
0.56563 0.60326 Mdot
0.56656 0.60324 Mdot
0.5675 0.60322 Mdot
0.56843 0.60319 Mdot
0.56936 0.60317 Mdot
0.57029 0.60313 Mdot
0.57122 0.60309 Mdot
0.57215 0.60305 Mdot
0.57308 0.603 Mdot
0.57401 0.60294 Mdot
0.57494 0.60288 Mdot
0.57587 0.60281 Mdot
0.5768 0.60273 Mdot
0.57774 0.60264 Mdot
0.57867 0.60255 Mdot
0.5796 0.60244 Mdot
0.58053 0.60232 Mdot
0.58146 0.60219 Mdot
0.58239 0.60205 Mdot
0.58332 0.6019 Mdot
0.58425 0.60173 Mdot
0.58518 0.60155 Mdot
0.58611 0.60135 Mdot
0.58705 0.60114 Mdot
0.58798 0.60091 Mdot
0.58891 0.60066 Mdot
0.58984 0.6004 Mdot
0.59077 0.60012 Mdot
0.5917 0.59982 Mdot
0.59263 0.5995 Mdot
0.59356 0.59916 Mdot
0.59449 0.59879 Mdot
0.59542 0.59841 Mdot
0.59636 0.598 Mdot
0.59729 0.59757 Mdot
0.59822 0.59711 Mdot
0.59915 0.59663 Mdot
0.60008 0.59612 Mdot
0.60101 0.59559 Mdot
0.60194 0.59503 Mdot
0.60287 0.59444 Mdot
0.6038 0.59382 Mdot
0.60473 0.59317 Mdot
0.60566 0.59249 Mdot
0.6066 0.59178 Mdot
0.60753 0.59104 Mdot
0.60846 0.59027 Mdot
0.60939 0.58946 Mdot
0.61032 0.58862 Mdot
0.61125 0.58774 Mdot
0.61218 0.58683 Mdot
0.61311 0.58588 Mdot
0.61404 0.5849 Mdot
0.61497 0.58387 Mdot
0.61591 0.58281 Mdot
0.61684 0.58171 Mdot
0.61777 0.58056 Mdot
0.6187 0.57938 Mdot
0.61963 0.57816 Mdot
0.62056 0.57689 Mdot
0.62149 0.57558 Mdot
0.62242 0.57422 Mdot
0.62335 0.57282 Mdot
0.62428 0.57137 Mdot
0.62522 0.56987 Mdot
0.62615 0.56833 Mdot
0.62708 0.56674 Mdot
0.62801 0.5651 Mdot
0.62894 0.5634 Mdot
0.62987 0.56165 Mdot
0.6308 0.55985 Mdot
0.63173 0.558 Mdot
0.63266 0.55609 Mdot
0.63359 0.55412 Mdot
0.63452 0.55209 Mdot
0.63546 0.55 Mdot
0.63639 0.54785 Mdot
0.63732 0.54564 Mdot
0.63825 0.54337 Mdot
0.63918 0.54103 Mdot
0.64011 0.53862 Mdot
0.64104 0.53614 Mdot
0.64197 0.53358 Mdot
0.6429 0.53096 Mdot
0.64383 0.52826 Mdot
0.64477 0.52548 Mdot
0.6457 0.52262 Mdot
0.64663 0.51968 Mdot
0.64756 0.51665 Mdot
0.64849 0.51353 Mdot
0.64942 0.51032 Mdot
0.65035 0.50701 Mdot
0.65128 0.5036 Mdot
0.65221 0.50009 Mdot
0.65314 0.49648 Mdot
0.65408 0.49275 Mdot
0.65501 0.4889 Mdot
0.65594 0.48492 Mdot
0.65687 0.48082 Mdot
0.6578 0.47658 Mdot
0.65873 0.4722 Mdot
0.65966 0.46766 Mdot
0.66059 0.46296 Mdot
0.66152 0.45809 Mdot
0.66245 0.45304 Mdot
0.66339 0.44778 Mdot
0.66432 0.44231 Mdot
0.66525 0.4366 Mdot
0.66618 0.43065 Mdot
0.66711 0.42441 Mdot
0.66804 0.41786 Mdot
0.66897 0.41096 Mdot
0.6699 0.40368 Mdot
0.67083 0.39594 Mdot
0.67176 0.38769 Mdot
0.67269 0.37882 Mdot
0.67363 0.3692 Mdot
0.67456 0.35865 Mdot
0.67549 0.34689 Mdot
0.67642 0.33347 Mdot
0.67735 0.31755 Mdot
0.67828 0.29737 Mdot
0.67921 0.26763 Mdot
0.68014 0.17797 Mdot
0.68107 0.24503 Mdot
0.682 0.26447 Mdot
0.68294 0.27119 Mdot
0.68387 0.27234 Mdot
0.6848 0.26973 Mdot
0.68573 0.26375 Mdot
0.68666 0.25381 Mdot
0.68759 0.23757 Mdot
0.68852 0.20505 Mdot
0.68945 0.17426 Mdot
0.69038 0.22568 Mdot
0.69131 0.24443 Mdot
0.69225 0.25511 Mdot
0.69318 0.26182 Mdot
0.69411 0.26604 Mdot
0.69504 0.26843 Mdot
0.69597 0.26937 Mdot
0.6969 0.26903 Mdot
0.69783 0.26749 Mdot
0.69876 0.26473 Mdot
0.69969 0.26066 Mdot
0.70062 0.25503 Mdot
0.70155 0.24739 Mdot
0.70249 0.23681 Mdot
0.70342 0.22104 Mdot
0.70435 0.19211 Mdot
0.70528 0.13295 Mdot
0.70621 0.20269 Mdot
0.70714 0.22389 Mdot
0.70807 0.23609 Mdot
0.709 0.24416 Mdot
0.70993 0.24975 Mdot
0.71086 0.25363 Mdot
0.7118 0.2562 Mdot
0.71273 0.25768 Mdot
0.71366 0.25821 Mdot
0.71459 0.25787 Mdot
0.71552 0.25668 Mdot
0.71645 0.25462 Mdot
0.71738 0.25162 Mdot
0.71831 0.24758 Mdot
0.71924 0.24227 Mdot
0.72017 0.23532 Mdot
0.72111 0.22603 Mdot
0.72204 0.21291 Mdot
0.72297 0.1917 Mdot
0.7239 0.13528 Mdot
0.72483 0.17037 Mdot
0.72576 0.20081 Mdot
0.72669 0.21619 Mdot
0.72762 0.22609 Mdot
0.72855 0.233 Mdot
0.72948 0.23799 Mdot
0.73041 0.24157 Mdot
0.73135 0.24403 Mdot
0.73228 0.24557 Mdot
0.73321 0.24628 Mdot
0.73414 0.24623 Mdot
0.73507 0.24543 Mdot
0.736 0.2439 Mdot
0.73693 0.24157 Mdot
0.73786 0.23838 Mdot
0.73879 0.2342 Mdot
0.73972 0.22878 Mdot
0.74066 0.22176 Mdot
0.74159 0.21242 Mdot
0.74252 0.19923 Mdot
0.74345 0.17782 Mdot
0.74438 0.11927 Mdot
0.74531 0.15825 Mdot
0.74624 0.18825 Mdot
0.74717 0.20364 Mdot
0.7481 0.21363 Mdot
0.74903 0.2207 Mdot
0.74997 0.22588 Mdot
0.7509 0.22968 Mdot
0.75183 0.2324 Mdot
0.75276 0.23422 Mdot
0.75369 0.23525 Mdot
0.75462 0.23555 Mdot
0.75555 0.23516 Mdot
0.75648 0.23408 Mdot
0.75741 0.2323 Mdot
0.75834 0.22974 Mdot
0.75927 0.22633 Mdot
0.76021 0.22191 Mdot
0.76114 0.21622 Mdot
0.76207 0.20883 Mdot
0.763 0.19893 Mdot
0.76393 0.18468 Mdot
0.76486 0.16037 Mdot
0.76579 0.05188 Mdot
0.76672 0.15567 Mdot
0.76765 0.18109 Mdot
0.76858 0.19517 Mdot
0.76952 0.20458 Mdot
0.77045 0.21136 Mdot
0.77138 0.21637 Mdot
0.77231 0.2201 Mdot
0.77324 0.2228 Mdot
0.77417 0.22464 Mdot
0.7751 0.22573 Mdot
0.77603 0.22611 Mdot
0.77696 0.22584 Mdot
0.77789 0.2249 Mdot
0.77883 0.22328 Mdot
0.77976 0.22093 Mdot
0.78069 0.21777 Mdot
0.78162 0.21367 Mdot
0.78255 0.20839 Mdot
0.78348 0.20158 Mdot
0.78441 0.19255 Mdot
0.78534 0.17987 Mdot
0.78627 0.15963 Mdot
0.7872 0.10934 Mdot
0.78813 0.13371 Mdot
0.78907 0.16644 Mdot
0.79 0.1827 Mdot
0.79093 0.19322 Mdot
0.79186 0.20072 Mdot
0.79279 0.20627 Mdot
0.79372 0.21044 Mdot
0.79465 0.21352 Mdot
0.79558 0.21572 Mdot
0.79651 0.21715 Mdot
0.79744 0.21787 Mdot
0.79838 0.21794 Mdot
0.79931 0.21736 Mdot
0.80024 0.21613 Mdot
0.80117 0.21422 Mdot
0.8021 0.21155 Mdot
0.80303 0.20804 Mdot
0.80396 0.2035 Mdot
0.80489 0.19767 Mdot
0.80582 0.19007 Mdot
0.80675 0.17981 Mdot
0.80769 0.16479 Mdot
0.80862 0.13803 Mdot
0.80955 0.05062 Mdot
0.81048 0.14343 Mdot
0.81141 0.16654 Mdot
0.81234 0.17993 Mdot
0.81327 0.18906 Mdot
0.8142 0.19573 Mdot
0.81513 0.20073 Mdot
0.81606 0.2045 Mdot
0.81699 0.20728 Mdot
0.81793 0.20924 Mdot
0.81886 0.21046 Mdot
0.81979 0.21102 Mdot
0.82072 0.21093 Mdot
0.82165 0.21021 Mdot
0.82258 0.20884 Mdot
0.82351 0.20678 Mdot
0.82444 0.20396 Mdot
0.82537 0.20025 Mdot
0.8263 0.19548 Mdot
0.82724 0.18934 Mdot
0.82817 0.18128 Mdot
0.8291 0.17024 Mdot
0.83003 0.1536 Mdot
0.83096 0.12114 Mdot
0.83189 0.0916 Mdot
0.83282 0.14365 Mdot
0.83375 0.16363 Mdot
0.83468 0.17585 Mdot
0.83561 0.18439 Mdot
0.83655 0.19069 Mdot
0.83748 0.19545 Mdot
0.83841 0.19904 Mdot
0.83934 0.2017 Mdot
0.84027 0.20356 Mdot
0.8412 0.20471 Mdot
0.84213 0.2052 Mdot
0.84306 0.20506 Mdot
0.84399 0.20429 Mdot
0.84492 0.20287 Mdot
0.84585 0.20076 Mdot
0.84679 0.19789 Mdot
0.84772 0.19412 Mdot
0.84865 0.18927 Mdot
0.84958 0.183 Mdot
0.85051 0.17475 Mdot
0.85144 0.16336 Mdot
0.85237 0.14592 Mdot
0.8533 0.11014 Mdot
0.85423 0.09606 Mdot
0.85516 0.14079 Mdot
0.8561 0.1597 Mdot
0.85703 0.1715 Mdot
0.85796 0.17982 Mdot
0.85889 0.186 Mdot
0.85982 0.19069 Mdot
0.86075 0.19424 Mdot
0.86168 0.19688 Mdot
0.86261 0.19872 Mdot
0.86354 0.19987 Mdot
0.86447 0.20037 Mdot
0.86541 0.20024 Mdot
0.86634 0.19948 Mdot
0.86727 0.19808 Mdot
0.8682 0.19599 Mdot
0.86913 0.19313 Mdot
0.87006 0.18939 Mdot
0.87099 0.18455 Mdot
0.87192 0.1783 Mdot
0.87285 0.17006 Mdot
0.87378 0.15866 Mdot
0.87471 0.14116 Mdot
0.87565 0.10498 Mdot
0.87658 0.09263 Mdot
0.87751 0.13669 Mdot
0.87844 0.15552 Mdot
0.87937 0.16732 Mdot
0.8803 0.17565 Mdot
0.88123 0.18186 Mdot
0.88216 0.18658 Mdot
0.88309 0.19017 Mdot
0.88402 0.19284 Mdot
0.88496 0.19473 Mdot
0.88589 0.19592 Mdot
0.88682 0.19647 Mdot
0.88775 0.19639 Mdot
0.88868 0.19569 Mdot
0.88961 0.19434 Mdot
0.89054 0.19232 Mdot
0.89147 0.18953 Mdot
0.8924 0.18586 Mdot
0.89333 0.18111 Mdot
0.89427 0.17497 Mdot
0.8952 0.16687 Mdot
0.89613 0.1557 Mdot
0.89706 0.13864 Mdot
0.89799 0.10422 Mdot
0.89892 0.08493 Mdot
0.89985 0.13208 Mdot
0.90078 0.15145 Mdot
0.90171 0.16351 Mdot
0.90264 0.17201 Mdot
0.90357 0.17834 Mdot
0.90451 0.18316 Mdot
0.90544 0.18684 Mdot
0.90637 0.18959 Mdot
0.9073 0.19156 Mdot
0.90823 0.19283 Mdot
0.90916 0.19345 Mdot
0.91009 0.19345 Mdot
0.91102 0.19283 Mdot
0.91195 0.19157 Mdot
0.91288 0.18963 Mdot
0.91382 0.18694 Mdot
0.91475 0.18338 Mdot
0.91568 0.17877 Mdot
0.91661 0.1728 Mdot
0.91754 0.16493 Mdot
0.91847 0.15412 Mdot
0.9194 0.13779 Mdot
0.92033 0.10613 Mdot
0.92126 0.07313 Mdot
0.92219 0.1273 Mdot
0.92313 0.14771 Mdot
0.92406 0.16021 Mdot
0.92499 0.16897 Mdot
0.92592 0.17549 Mdot
0.92685 0.18046 Mdot
0.92778 0.18427 Mdot
0.92871 0.18713 Mdot
0.92964 0.1892 Mdot
0.93057 0.19057 Mdot
0.9315 0.19129 Mdot
0.93243 0.19138 Mdot
0.93337 0.19086 Mdot
0.9343 0.1897 Mdot
0.93523 0.18787 Mdot
0.93616 0.1853 Mdot
0.93709 0.18187 Mdot
0.93802 0.17741 Mdot
0.93895 0.17164 Mdot
0.93988 0.16405 Mdot
0.94081 0.15366 Mdot
0.94174 0.13818 Mdot
0.94268 0.10944 Mdot
0.94361 0.05463 Mdot
0.94454 0.12254 Mdot
0.94547 0.14441 Mdot
0.9464 0.1575 Mdot
0.94733 0.16661 Mdot
0.94826 0.17336 Mdot
0.94919 0.17851 Mdot
0.95012 0.18246 Mdot
0.95105 0.18546 Mdot
0.95199 0.18765 Mdot
0.95292 0.18913 Mdot
0.95385 0.18995 Mdot
0.95478 0.19015 Mdot
0.95571 0.18973 Mdot
0.95664 0.18868 Mdot
0.95757 0.18697 Mdot
0.9585 0.18452 Mdot
0.95943 0.18124 Mdot
0.96036 0.17695 Mdot
0.96129 0.17139 Mdot
0.96223 0.16409 Mdot
0.96316 0.15415 Mdot
0.96409 0.13953 Mdot
0.96502 0.11348 Mdot
0.96595 0.01472 Mdot
0.96688 0.1179 Mdot
0.96781 0.14165 Mdot
0.96874 0.15546 Mdot
0.96967 0.16496 Mdot
0.9706 0.17198 Mdot
0.97154 0.17733 Mdot
0.97247 0.18145 Mdot
0.9734 0.18459 Mdot
0.97433 0.1869 Mdot
0.97526 0.1885 Mdot
0.97619 0.18943 Mdot
0.02381 0.18974 Mdot
0.02474 0.18943 Mdot
0.02567 0.1885 Mdot
0.0266 0.1869 Mdot
0.02753 0.18459 Mdot
0.02846 0.18145 Mdot
0.0294 0.17733 Mdot
0.03033 0.17198 Mdot
0.03126 0.16496 Mdot
0.03219 0.15546 Mdot
0.03312 0.14165 Mdot
0.03405 0.1179 Mdot
0.03498 0.01472 Mdot
0.03591 0.11348 Mdot
0.03684 0.13953 Mdot
0.03777 0.15415 Mdot
0.03871 0.16409 Mdot
0.03964 0.17139 Mdot
0.04057 0.17695 Mdot
0.0415 0.18124 Mdot
0.04243 0.18452 Mdot
0.04336 0.18697 Mdot
0.04429 0.18868 Mdot
0.04522 0.18973 Mdot
0.04615 0.19015 Mdot
0.04708 0.18995 Mdot
0.04801 0.18913 Mdot
0.04895 0.18765 Mdot
0.04988 0.18546 Mdot
0.05081 0.18246 Mdot
0.05174 0.17851 Mdot
0.05267 0.17336 Mdot
0.0536 0.16661 Mdot
0.05453 0.1575 Mdot
0.05546 0.14441 Mdot
0.05639 0.12254 Mdot
0.05732 0.05463 Mdot
0.05826 0.10944 Mdot
0.05919 0.13818 Mdot
0.06012 0.15366 Mdot
0.06105 0.16405 Mdot
0.06198 0.17164 Mdot
0.06291 0.17741 Mdot
0.06384 0.18187 Mdot
0.06477 0.1853 Mdot
0.0657 0.18787 Mdot
0.06663 0.1897 Mdot
0.06757 0.19086 Mdot
0.0685 0.19138 Mdot
0.06943 0.19129 Mdot
0.07036 0.19057 Mdot
0.07129 0.1892 Mdot
0.07222 0.18713 Mdot
0.07315 0.18427 Mdot
0.07408 0.18046 Mdot
0.07501 0.17549 Mdot
0.07594 0.16897 Mdot
0.07687 0.16021 Mdot
0.07781 0.14771 Mdot
0.07874 0.1273 Mdot
0.07967 0.07313 Mdot
0.0806 0.10613 Mdot
0.08153 0.13779 Mdot
0.08246 0.15412 Mdot
0.08339 0.16493 Mdot
0.08432 0.1728 Mdot
0.08525 0.17877 Mdot
0.08618 0.18338 Mdot
0.08712 0.18694 Mdot
0.08805 0.18963 Mdot
0.08898 0.19157 Mdot
0.08991 0.19283 Mdot
0.09084 0.19345 Mdot
0.09177 0.19345 Mdot
0.0927 0.19283 Mdot
0.09363 0.19156 Mdot
0.09456 0.18959 Mdot
0.09549 0.18684 Mdot
0.09643 0.18316 Mdot
0.09736 0.17834 Mdot
0.09829 0.17201 Mdot
0.09922 0.16351 Mdot
0.10015 0.15145 Mdot
0.10108 0.13208 Mdot
0.10201 0.08493 Mdot
0.10294 0.10422 Mdot
0.10387 0.13864 Mdot
0.1048 0.1557 Mdot
0.10573 0.16687 Mdot
0.10667 0.17497 Mdot
0.1076 0.18111 Mdot
0.10853 0.18586 Mdot
0.10946 0.18953 Mdot
0.11039 0.19232 Mdot
0.11132 0.19434 Mdot
0.11225 0.19569 Mdot
0.11318 0.19639 Mdot
0.11411 0.19647 Mdot
0.11504 0.19592 Mdot
0.11598 0.19473 Mdot
0.11691 0.19284 Mdot
0.11784 0.19017 Mdot
0.11877 0.18658 Mdot
0.1197 0.18186 Mdot
0.12063 0.17565 Mdot
0.12156 0.16732 Mdot
0.12249 0.15552 Mdot
0.12342 0.13669 Mdot
0.12435 0.09263 Mdot
0.12529 0.10498 Mdot
0.12622 0.14116 Mdot
0.12715 0.15866 Mdot
0.12808 0.17006 Mdot
0.12901 0.1783 Mdot
0.12994 0.18455 Mdot
0.13087 0.18939 Mdot
0.1318 0.19313 Mdot
0.13273 0.19599 Mdot
0.13366 0.19808 Mdot
0.13459 0.19948 Mdot
0.13553 0.20024 Mdot
0.13646 0.20037 Mdot
0.13739 0.19987 Mdot
0.13832 0.19872 Mdot
0.13925 0.19688 Mdot
0.14018 0.19424 Mdot
0.14111 0.19069 Mdot
0.14204 0.186 Mdot
0.14297 0.17982 Mdot
0.1439 0.1715 Mdot
0.14484 0.1597 Mdot
0.14577 0.14079 Mdot
0.1467 0.09606 Mdot
0.14763 0.11014 Mdot
0.14856 0.14592 Mdot
0.14949 0.16336 Mdot
0.15042 0.17475 Mdot
0.15135 0.183 Mdot
0.15228 0.18927 Mdot
0.15321 0.19412 Mdot
0.15415 0.19789 Mdot
0.15508 0.20076 Mdot
0.15601 0.20287 Mdot
0.15694 0.20429 Mdot
0.15787 0.20506 Mdot
0.1588 0.2052 Mdot
0.15973 0.20471 Mdot
0.16066 0.20356 Mdot
0.16159 0.2017 Mdot
0.16252 0.19904 Mdot
0.16345 0.19545 Mdot
0.16439 0.19069 Mdot
0.16532 0.18439 Mdot
0.16625 0.17585 Mdot
0.16718 0.16363 Mdot
0.16811 0.14365 Mdot
0.16904 0.0916 Mdot
0.16997 0.12114 Mdot
0.1709 0.1536 Mdot
0.17183 0.17024 Mdot
0.17276 0.18128 Mdot
0.1737 0.18934 Mdot
0.17463 0.19548 Mdot
0.17556 0.20025 Mdot
0.17649 0.20396 Mdot
0.17742 0.20678 Mdot
0.17835 0.20884 Mdot
0.17928 0.21021 Mdot
0.18021 0.21093 Mdot
0.18114 0.21102 Mdot
0.18207 0.21046 Mdot
0.18301 0.20924 Mdot
0.18394 0.20728 Mdot
0.18487 0.2045 Mdot
0.1858 0.20073 Mdot
0.18673 0.19573 Mdot
0.18766 0.18906 Mdot
0.18859 0.17993 Mdot
0.18952 0.16654 Mdot
0.19045 0.14343 Mdot
0.19138 0.05062 Mdot
0.19231 0.13803 Mdot
0.19325 0.16479 Mdot
0.19418 0.17981 Mdot
0.19511 0.19007 Mdot
0.19604 0.19767 Mdot
0.19697 0.2035 Mdot
0.1979 0.20804 Mdot
0.19883 0.21155 Mdot
0.19976 0.21422 Mdot
0.20069 0.21613 Mdot
0.20162 0.21736 Mdot
0.20256 0.21794 Mdot
0.20349 0.21787 Mdot
0.20442 0.21715 Mdot
0.20535 0.21572 Mdot
0.20628 0.21352 Mdot
0.20721 0.21044 Mdot
0.20814 0.20627 Mdot
0.20907 0.20072 Mdot
0.21 0.19322 Mdot
0.21093 0.1827 Mdot
0.21187 0.16644 Mdot
0.2128 0.13371 Mdot
0.21373 0.10934 Mdot
0.21466 0.15963 Mdot
0.21559 0.17987 Mdot
0.21652 0.19255 Mdot
0.21745 0.20158 Mdot
0.21838 0.20839 Mdot
0.21931 0.21367 Mdot
0.22024 0.21777 Mdot
0.22117 0.22093 Mdot
0.22211 0.22328 Mdot
0.22304 0.2249 Mdot
0.22397 0.22584 Mdot
0.2249 0.22611 Mdot
0.22583 0.22573 Mdot
0.22676 0.22464 Mdot
0.22769 0.2228 Mdot
0.22862 0.2201 Mdot
0.22955 0.21637 Mdot
0.23048 0.21136 Mdot
0.23142 0.20458 Mdot
0.23235 0.19517 Mdot
0.23328 0.18109 Mdot
0.23421 0.15567 Mdot
0.23514 0.05188 Mdot
0.23607 0.16037 Mdot
0.237 0.18468 Mdot
0.23793 0.19893 Mdot
0.23886 0.20883 Mdot
0.23979 0.21622 Mdot
0.24073 0.22191 Mdot
0.24166 0.22633 Mdot
0.24259 0.22974 Mdot
0.24352 0.2323 Mdot
0.24445 0.23408 Mdot
0.24538 0.23516 Mdot
0.24631 0.23555 Mdot
0.24724 0.23525 Mdot
0.24817 0.23422 Mdot
0.2491 0.2324 Mdot
0.25003 0.22968 Mdot
0.25097 0.22588 Mdot
0.2519 0.2207 Mdot
0.25283 0.21363 Mdot
0.25376 0.20364 Mdot
0.25469 0.18825 Mdot
0.25562 0.15825 Mdot
0.25655 0.11927 Mdot
0.25748 0.17782 Mdot
0.25841 0.19923 Mdot
0.25934 0.21242 Mdot
0.26028 0.22176 Mdot
0.26121 0.22878 Mdot
0.26214 0.2342 Mdot
0.26307 0.23838 Mdot
0.264 0.24157 Mdot
0.26493 0.2439 Mdot
0.26586 0.24543 Mdot
0.26679 0.24623 Mdot
0.26772 0.24628 Mdot
0.26865 0.24557 Mdot
0.26959 0.24403 Mdot
0.27052 0.24157 Mdot
0.27145 0.23799 Mdot
0.27238 0.233 Mdot
0.27331 0.22609 Mdot
0.27424 0.21619 Mdot
0.27517 0.20081 Mdot
0.2761 0.17037 Mdot
0.27703 0.13528 Mdot
0.27796 0.1917 Mdot
0.27889 0.21291 Mdot
0.27983 0.22603 Mdot
0.28076 0.23532 Mdot
0.28169 0.24227 Mdot
0.28262 0.24758 Mdot
0.28355 0.25162 Mdot
0.28448 0.25462 Mdot
0.28541 0.25668 Mdot
0.28634 0.25787 Mdot
0.28727 0.25821 Mdot
0.2882 0.25768 Mdot
0.28914 0.2562 Mdot
0.29007 0.25363 Mdot
0.291 0.24975 Mdot
0.29193 0.24416 Mdot
0.29286 0.23609 Mdot
0.29379 0.22389 Mdot
0.29472 0.20269 Mdot
0.29565 0.13295 Mdot
0.29658 0.19211 Mdot
0.29751 0.22104 Mdot
0.29845 0.23681 Mdot
0.29938 0.24739 Mdot
0.30031 0.25503 Mdot
0.30124 0.26066 Mdot
0.30217 0.26473 Mdot
0.3031 0.26749 Mdot
0.30403 0.26903 Mdot
0.30496 0.26937 Mdot
0.30589 0.26843 Mdot
0.30682 0.26604 Mdot
0.30775 0.26182 Mdot
0.30869 0.25511 Mdot
0.30962 0.24443 Mdot
0.31055 0.22568 Mdot
0.31148 0.17426 Mdot
0.31241 0.20505 Mdot
0.31334 0.23757 Mdot
0.31427 0.25381 Mdot
0.3152 0.26375 Mdot
0.31613 0.26973 Mdot
0.31706 0.27234 Mdot
0.318 0.27119 Mdot
0.31893 0.26447 Mdot
0.31986 0.24503 Mdot
0.32079 0.17797 Mdot
0.32172 0.26763 Mdot
0.32265 0.29737 Mdot
0.32358 0.31755 Mdot
0.32451 0.33347 Mdot
0.32544 0.34689 Mdot
0.32637 0.35865 Mdot
0.32731 0.3692 Mdot
0.32824 0.37882 Mdot
0.32917 0.38769 Mdot
0.3301 0.39594 Mdot
0.33103 0.40368 Mdot
0.33196 0.41096 Mdot
0.33289 0.41786 Mdot
0.33382 0.42441 Mdot
0.33475 0.43065 Mdot
0.33568 0.4366 Mdot
0.33661 0.44231 Mdot
0.33755 0.44778 Mdot
0.33848 0.45304 Mdot
0.33941 0.45809 Mdot
0.34034 0.46296 Mdot
0.34127 0.46766 Mdot
0.3422 0.4722 Mdot
0.34313 0.47658 Mdot
0.34406 0.48082 Mdot
0.34499 0.48492 Mdot
0.34592 0.4889 Mdot
0.34686 0.49275 Mdot
0.34779 0.49648 Mdot
0.34872 0.50009 Mdot
0.34965 0.5036 Mdot
0.35058 0.50701 Mdot
0.35151 0.51032 Mdot
0.35244 0.51353 Mdot
0.35337 0.51665 Mdot
0.3543 0.51968 Mdot
0.35523 0.52262 Mdot
0.35617 0.52548 Mdot
0.3571 0.52826 Mdot
0.35803 0.53096 Mdot
0.35896 0.53358 Mdot
0.35989 0.53614 Mdot
0.36082 0.53862 Mdot
0.36175 0.54103 Mdot
0.36268 0.54337 Mdot
0.36361 0.54564 Mdot
0.36454 0.54785 Mdot
0.36548 0.55 Mdot
0.36641 0.55209 Mdot
0.36734 0.55412 Mdot
0.36827 0.55609 Mdot
0.3692 0.558 Mdot
0.37013 0.55985 Mdot
0.37106 0.56165 Mdot
0.37199 0.5634 Mdot
0.37292 0.5651 Mdot
0.37385 0.56674 Mdot
0.37478 0.56833 Mdot
0.37572 0.56987 Mdot
0.37665 0.57137 Mdot
0.37758 0.57282 Mdot
0.37851 0.57422 Mdot
0.37944 0.57558 Mdot
0.38037 0.57689 Mdot
0.3813 0.57816 Mdot
0.38223 0.57938 Mdot
0.38316 0.58056 Mdot
0.38409 0.58171 Mdot
0.38503 0.58281 Mdot
0.38596 0.58387 Mdot
0.38689 0.5849 Mdot
0.38782 0.58588 Mdot
0.38875 0.58683 Mdot
0.38968 0.58774 Mdot
0.39061 0.58862 Mdot
0.39154 0.58946 Mdot
0.39247 0.59027 Mdot
0.3934 0.59104 Mdot
0.39434 0.59178 Mdot
0.39527 0.59249 Mdot
0.3962 0.59317 Mdot
0.39713 0.59382 Mdot
0.39806 0.59444 Mdot
0.39899 0.59503 Mdot
0.39992 0.59559 Mdot
0.40085 0.59612 Mdot
0.40178 0.59663 Mdot
0.40271 0.59711 Mdot
0.40364 0.59757 Mdot
0.40458 0.598 Mdot
0.40551 0.59841 Mdot
0.40644 0.59879 Mdot
0.40737 0.59916 Mdot
0.4083 0.5995 Mdot
0.40923 0.59982 Mdot
0.41016 0.60012 Mdot
0.41109 0.6004 Mdot
0.41202 0.60066 Mdot
0.41295 0.60091 Mdot
0.41389 0.60114 Mdot
0.41482 0.60135 Mdot
0.41575 0.60155 Mdot
0.41668 0.60173 Mdot
0.41761 0.6019 Mdot
0.41854 0.60205 Mdot
0.41947 0.60219 Mdot
0.4204 0.60232 Mdot
0.42133 0.60244 Mdot
0.42226 0.60255 Mdot
0.4232 0.60264 Mdot
0.42413 0.60273 Mdot
0.42506 0.60281 Mdot
0.42599 0.60288 Mdot
0.42692 0.60294 Mdot
0.42785 0.603 Mdot
0.42878 0.60305 Mdot
0.42971 0.60309 Mdot
0.43064 0.60313 Mdot
0.43157 0.60317 Mdot
0.4325 0.60319 Mdot
0.43344 0.60322 Mdot
0.43437 0.60324 Mdot
0.4353 0.60326 Mdot
0.43623 0.60327 Mdot
0.43716 0.60328 Mdot
0.43809 0.60329 Mdot
0.43902 0.6033 Mdot
0.43995 0.60331 Mdot
0.44088 0.60331 Mdot
0.44181 0.60331 Mdot
0.44275 0.60332 Mdot
0.44368 0.60332 Mdot
0.44461 0.60332 Mdot
0.44554 0.60332 Mdot
0.44647 0.60332 Mdot
0.4474 0.60332 Mdot
0.44833 0.60332 Mdot
0.44926 0.60332 Mdot
0.45019 0.60332 Mdot
0.45112 0.60331 Mdot
0.45206 0.60331 Mdot
0.45299 0.60331 Mdot
0.45392 0.60331 Mdot
0.45485 0.60331 Mdot
0.45578 0.60331 Mdot
0.45671 0.60331 Mdot
0.45764 0.60331 Mdot
0.45857 0.60331 Mdot
0.4595 0.60331 Mdot
0.46043 0.60331 Mdot
0.46136 0.60331 Mdot
0.4623 0.60331 Mdot
0.46323 0.60331 Mdot
0.46416 0.60331 Mdot
0.46509 0.60331 Mdot
0.46602 0.60331 Mdot
0.46695 0.60331 Mdot
0.46788 0.60331 Mdot
0.46881 0.60331 Mdot
0.46974 0.60331 Mdot
0.47067 0.60332 Mdot
0.47161 0.60332 Mdot
0.47254 0.60332 Mdot
0.47347 0.60332 Mdot
0.4744 0.60332 Mdot
0.47533 0.60332 Mdot
0.47626 0.60332 Mdot
0.47719 0.60332 Mdot
0.47812 0.60332 Mdot
0.47905 0.60332 Mdot
0.47998 0.60332 Mdot
0.48092 0.60332 Mdot
0.48185 0.60332 Mdot
0.48278 0.60332 Mdot
0.48371 0.60332 Mdot
0.48464 0.60332 Mdot
0.48557 0.60332 Mdot
0.4865 0.60332 Mdot
0.48743 0.60331 Mdot
0.48836 0.60331 Mdot
0.48929 0.60331 Mdot
0.49022 0.60331 Mdot
0.49116 0.60331 Mdot
0.49209 0.60331 Mdot
0.49302 0.60331 Mdot
0.49395 0.60331 Mdot
0.49488 0.60331 Mdot
0.49581 0.60331 Mdot
0.49674 0.60331 Mdot
0.49767 0.60331 Mdot
0.4986 0.60331 Mdot
0.49953 0.60331 Mdot
grestore
grestore
% End of Graphics
MathPictureEnd
%%EPS Trailer
end
 
%%EndDocument
 @endspecial 49 x Fb(Figure)g(5.)46 b Fk(F)-5 b(requency)18
b(resp)r(onse)e(of)i(the)f(ideal)h(lo)n(wpass)h(\014lter)e(Kaiser)417
2979 y(windo)n(w)n(ed)h(at)g(the)f(\014fth)g(zero)g(crossing)g(to)h(the)f
(left)h(and)g(righ)n(t.)0 3136 y Fl(4.)26 b(Implemen)n(tation)0
3240 y Fj(Our)c(implemen)n(tation)g(pro)n(vides)h(signal)h(ev)l(aluation)f
(at)g(an)g(arbitrary)g(time,)f(where)g(time)f(is)0 3317 y(sp)r(eci\014ed)i
(as)i(an)f(unsigned)h(binary)g(\014xed-p)r(oin)n(t)f(n)n(um)n(b)r(er)f(in)i
(units)f(of)h(the)f(input)g(sampling)0 3394 y(p)r(erio)r(d)e(\(assumed)f
(constan)n(t\).)30 b(Figure)22 b(6)g(sho)n(ws)h(the)f(time)f(register)h
Fh(t)p Fj(,)g(and)g(Figure)h(7)f(sho)n(ws)1186 3533 y Fk(5)p
eop
%%Page: 6 6
5 bop 0 198 a Fj(an)19 b(example)f(con\014guration)h(of)h(the)e(input)h
(signal)h(and)f(lo)n(wpass)h(\014lter)f(at)g(a)g(giv)n(en)h(time.)28
b(The)0 275 y(time)c(register)h(is)h(divided)f(in)n(to)h(three)e(\014elds:)36
b(The)24 b(leftmost)h(\014eld)g(giv)n(es)h(the)e(n)n(um)n(b)r(er)g
Fh(n)h Fj(of)0 353 y(samples)15 b(in)n(to)i(the)e(input)g(signal)i(bu\013er,)
g(the)e(middle)g(\014eld)g(is)h(an)g(initial)i(index)d Fh(l)h
Fj(in)n(to)g(the)f(\014lter)0 430 y(co)r(e\016cien)n(t)23 b(table)h
Fh(h)p Fk(\()p Fh(l)q Fk(\))p Fj(,)g(and)h(the)e(righ)n(tmost)i(\014eld)f(is)
h(in)n(terpreted)e(as)h(a)h(n)n(um)n(b)r(er)e Fh(\021)k Fj(b)r(et)n(w)n(een)0
508 y Fk(0)d Fj(and)h Fk(1)f Fj(for)h(doing)g(linear)g(in)n(terp)r(olation)g
(b)r(et)n(w)n(een)e(samples)i Fh(l)g Fj(and)f Fh(l)14 b Fk(+)g(1)24
b Fj(\(initially\))j(of)e(the)0 585 y(\014lter)c(table.)29
b(The)21 b(concatenation)f(of)h Fh(l)h Fj(and)f Fh(\021)j Fj(are)d(called)g
Fh(P)h Fg(2)15 b Fk([0)p Fh(;)9 b Fk(1\))21 b Fj(whic)n(h)g(is)h(in)n
(terpreted)e(as)0 663 y(the)h(p)r(osition)j(of)e(the)g(curren)n(t)f(time)g(b)
r(et)n(w)n(een)f(samples)i Fh(n)h Fj(and)f Fh(n)12 b Fk(+)h(1)21
b Fj(of)i(the)e(input)i(signal.)0 800 y(Let)k(the)h(three)f(\014elds)i(ha)n
(v)n(e)f Fh(n)791 808 y Ff(n)821 800 y Fj(,)j Fh(n)903 808
y Ff(l)920 800 y Fj(,)g(and)d Fh(n)1137 808 y Ff(\021)1193
800 y Fj(bits,)i(resp)r(ectiv)n(ely)-6 b(.)49 b(Then)27 b(the)h(input)h
(signal)0 878 y(bu\013er)24 b(con)n(tains)g Fh(N)i Fk(=)18
b(2)614 858 y Ff(n)641 864 y Fa(n)696 878 y Fj(samples,)25
b(and)g(the)e(\014lter)i(table)f(con)n(tains)h Fh(L)18 b Fk(=)h(2)1952
858 y Ff(n)1979 864 y Fa(l)2022 878 y Fj(\\samples)25 b(p)r(er)0
955 y(zero-crossing.")42 b(\(The)25 b(term)g(\\zero-crossing")i(is)f(precise)
g(only)g(for)h(the)e(case)h(of)g(the)f(ideal)0 1033 y(lo)n(wpass;)j(to)d(co)n
(v)n(er)f(practical)h(cases)g(w)n(e)g(generalize)f(\\zero-crossing")h(to)g
(mean)f(a)h(m)n(ultiple)0 1110 y(of)e(time)e Fh(t)247 1118
y Ff(c)286 1110 y Fk(=)15 b(1)p Fh(=f)427 1118 y Ff(c)449 1110
y Fj(,)23 b(where)f Fh(f)710 1118 y Ff(c)755 1110 y Fj(is)h(the)e(lo)n(wpass)
j(cuto\013)d(frequency)-6 b(.\))30 b(F)-6 b(or)23 b(example,)f(to)h(use)f
(the)0 1188 y(ideal)h(lo)n(wpass)g(\014lter,)f(the)g(table)g(w)n(ould)h(con)n
(tain)f Fh(h)p Fk(\()p Fh(l)q Fk(\))14 b(=)h Fj(sinc)p Fk(\()p
Fh(l)q(=L)p Fk(\))p Fj(.)0 1325 y(Our)30 b(implemen)n(tation)g(stores)h(only)
g(the)f(\\righ)n(t)i(wing")f(of)g(a)g(symmetric)e(\014nite-impulse-)0
1403 y(resp)r(onse)c(\(FIR\))g(\014lter)g(\(designed)g(b)n(y)g(the)f(windo)n
(w)i(metho)r(d)e(based)h(on)h(a)f(Kaiser)g(windo)n(w)0 1480
y(\(Rabiner)h(and)g(Gold)g(1975\)\).)42 b(It)26 b(also)h(stores)f(a)g(table)g
(of)g(di\013erences)p 1867 1435 32 3 v 25 w Fh(h)o Fk(\()p
Fh(l)q Fk(\))20 b(=)g Fh(h)p Fk(\()p Fh(l)15 b Fk(+)f(1\))g
Fg(\000)g Fh(h)p Fk(\()p Fh(l)q Fk(\))0 1558 y Fj(b)r(et)n(w)n(een)k
(successiv)n(e)i(FIR)g(sample)g(v)l(alues)h(in)f(order)g(to)h(sp)r(eed)e(up)h
(the)f(linear)i(in)n(terp)r(olation.)0 1635 y(The)h(length)f(of)i(eac)n(h)f
(table)g(is)g(then)g Fh(N)993 1643 y Ff(h)1037 1635 y Fk(=)16
b Fh(L)p Fk(\()p Fh(N)1200 1643 y Ff(z)1237 1635 y Fk(+)c(1\))p
Fj(.)0 1773 y(Consider)j(a)h(sampling-rate)f(con)n(v)n(ersion)h(b)n(y)f(the)g
(factor)g Fh(\032)g Fk(=)g Fh(F)1568 1753 y Fd(0)1560 1787
y Ff(s)1584 1773 y Fh(=F)1648 1781 y Ff(s)1671 1773 y Fj(.)27
b(F)-6 b(or)17 b(eac)n(h)d(output)h(sample,)0 1850 y(the)21
b(basic)g(in)n(terp)r(olation)i(Eq.)f(1)f(is)i(p)r(erformed.)28
b(The)21 b(\014lter)g(table)g(is)h(tra)n(v)n(ersed)f(t)n(wice|\014rst)0
1928 y(to)i(apply)h(the)f(left)g(wing)h(of)g(the)f(FIR)g(\014lter,)h(and)g
(second)e(to)i(apply)g(the)e(righ)n(t)i(wing.)35 b(After)0
2005 y(eac)n(h)23 b(output)g(sample)g(is)h(computed,)e(the)h(time)g(register)
g(is)h(incremen)n(ted)d(b)n(y)j Fk(2)2060 1985 y Ff(n)2087
1991 y Fa(l)2103 1985 y Fc(+)p Ff(n)2164 1991 y Fa(\021)2191
2005 y Fh(=\032)f Fj(\(i.e.,)0 2083 y(time)g(is)i(incremen)n(ted)c(b)n(y)k
Fk(1)p Fh(=\032)e Fj(in)h(\014xed-p)r(oin)n(t)g(format\).)35
b(Supp)r(ose)23 b(the)h(time)f(register)h Fh(t)g Fj(has)0 2160
y(just)g(b)r(een)f(up)r(dated,)h(and)g(an)h(in)n(terp)r(olated)f(output)f
Fh(y)r Fk(\()p Fh(t)p Fk(\))h Fj(is)g(desired.)36 b(F)-6 b(or)25
b Fh(\032)18 b Fg(\025)g Fk(1)p Fj(,)25 b(output)e(is)0 2238
y(computed)d(via)588 2481 y Fh(v)d Fg( )703 2412 y Fh(h)22
b Fj(end)741 2429 y Fe(X)745 2547 y Ff(i)p Fc(=0)869 2481 y
Fh(x)p Fk(\()p Fh(n)12 b Fg(\000)g Fh(i)p Fk(\))1073 2437 y
Fe(\002)1096 2481 y Fh(h)p Fk(\()p Fh(l)g Fk(+)h Fh(iL)p Fk(\))e(+)i
Fh(\021)p 1410 2436 V 2 w(h)p Fk(\()p Fh(l)f Fk(+)h Fh(iL)p
Fk(\))1628 2437 y Fe(\003)573 2649 y Fh(P)23 b Fg( )16 b Fk(1)c
Fg(\000)g Fh(P)524 2839 y(y)r Fk(\()p Fh(t)p Fk(\))j Fg( )h
Fh(v)e Fk(+)799 2770 y Fh(h)22 b Fj(end)838 2787 y Fe(X)842
2904 y Ff(i)p Fc(=0)966 2839 y Fh(x)p Fk(\()p Fh(n)11 b Fk(+)i(1)f(+)g
Fh(i)p Fk(\))1265 2794 y Fe(\002)1288 2839 y Fh(h)p Fk(\()p
Fh(l)g Fk(+)g Fh(iL)p Fk(\))g(+)g Fh(\021)p 1601 2794 V 2 w(h)q
Fk(\()p Fh(l)g Fk(+)h Fh(iL)p Fk(\))1820 2794 y Fe(\003)1860
2839 y Fh(;)2324 2660 y Fk(\()p Fj(3)o Fk(\))0 3088 y Fj(where)29
b Fh(x)p Fk(\()p Fh(n)p Fk(\))g Fj(is)i(the)e(curren)n(t)g(input)h(sample,)j
(and)d Fh(\021)f Fg(2)d Fk([0)p Fh(;)9 b Fk(1\))30 b Fj(is)h(the)e(in)n(terp)
r(olation)i(factor.)0 3166 y(When)21 b Fh(\032)15 b(<)g Fk(1)p
Fj(,)22 b(the)f(initial)i Fh(P)29 b Fj(is)22 b(replaced)f(b)n(y)g
Fh(P)1196 3146 y Fd(0)1226 3166 y Fk(=)16 b Fh(\032P)8 b Fj(,)21
b Fk(1)11 b Fg(\000)g Fh(P)29 b Fj(b)r(ecomes)19 b Fh(\032)11
b Fg(\000)g Fh(P)1956 3146 y Fd(0)1986 3166 y Fk(=)16 b Fh(\032)p
Fk(\(1)10 b Fg(\000)h Fh(P)d Fk(\))p Fj(,)21 b(and)0 3243 y(the)j(step-size)g
(through)h(the)f(\014lter)g(table)h(is)g(reduced)e(to)i Fh(\032L)f
Fj(instead)h(of)g Fh(L)p Fj(;)h(this)f(lo)n(w)n(ers)h(the)0
3321 y(\014lter)f(cuto\013)f(to)i(a)n(v)n(oid)g(aliasing.)41
b(Note)25 b(that)g Fh(\021)j Fj(is)e(\014xed)e(throughout)h(the)g
(computation)f(of)0 3398 y(an)e(output)g(sample)g(when)f Fh(\032)15
b Fg(\025)h Fk(1)21 b Fj(but)h(c)n(hanges)g(when)f Fh(\032)15
b(<)h Fk(1)p Fj(.)1186 3533 y Fk(6)p eop
%%Page: 7 7
6 bop 433 700 a @beginspecial 127 @llx 12 @lly 403 @urx 139
@ury 2760 @rwi @setspecial
%%BeginDocument: eps/TimeRegisterFormat.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: TimeRegisterFormat.draw
%%Creator: Draw
%%CreationDate: Thu Nov  5 10:18:59 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 127 12 403 139
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc closepath
} def /line {
    moveto rlineto stroke
} def /setup {
    setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -5 1 rlineto -3 1 rlineto 1 -2 rlineto -1 -2 rlineto 3 1 rlineto closepath closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def
%%EndSetup
gsave
127 12 276 127 rectclip
127 12 276 127 rectclip
0 0 0 setup
0 nxsetgray
145 45 240 60 rectstroke
grestore
0 0 0 setup
gsave
/Times-Italic findfont 10 scalefont [1 0 0 -1 0 0] makefont
60
exch
defineuserobject
60 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 150] concat
/Times-Roman findfont 10 scalefont [1 0 0 -1 0 0] makefont
61
exch
defineuserobject
61 execuserobject setfont
0 nxsetgray
177 64 moveto (Input) show
177 76 moveto (Signal) show
177 88 moveto (Index ) show
60 execuserobject setfont
(n) show
grestore
grestore
0 0 0 setup
340.000000 22.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 15 11 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 11:34:36 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 15 11
%%Baseline: 1 3.617976 13.627 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".Ri5#Ig!!!E/![m51(eK#D,X_XRS2ihA"VLe`-6WLgVDQ[
% K-Oh*sQ3\5X&jqDA/d.?W9aUk%J[c<T!&,[T+s@.djH)sn-B+HW60Psqo9!eI`HNk)RQT7V!
% @DLl#"T[UblFbJAcV)T=2C+`D8a(qo9aO:+_V:n^9`Z:VS8Tdm3O#CBMqY-/t!-@Jmn]kV2W
% #@j>TAe2K/lG#%\a_DF:4K(D*1n<-M/ib-5=RWB-a.Ha<eS[2hO,j:TcV_YuX,qc/eA8KoH0
% eb-Wj.54.1Em4'.*4+0RfhU^9V]Kg4&Rl)SR=Km>>'g\.#6P8L!8diWUsXoh/P*-K(iI.05_
% pZ1d6\IfKY^+rA&+uBM^/Y7)B%H:Yaut$"p"iT5QW(h,m6Um7M)'i^kk:1zx
% EndExpression N 393 189 E 94 S 9aa2 R c8a66d32
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
50 dict dup begin /FontType 3 def /FontMatrix [0.001 0 0 0.001 0 0] def /FontBBox [15 -2950 1360 1045] def /Encoding 256 array def 0 1 255 {
    Encoding exch /.notdef put
} for Encoding dup <01> 0 get /rad1 put dup <02> 0 get /rad2 put dup <03> 0 get /rad3 put dup <04> 0 get /rad4 put dup <05> 0 get /rad5 put dup <06> 0 get /radext put dup <07> 0 get /int put dup <08> 0 get /pathint put dup <09> 0 get /sum put dup <0a> 0 get /prod put dup <0b> 0 get /cdot put dup <0c> 0 get /vdot put dup <0d> 0 get /ddot put dup <0e> 0 get /hbar put dup <0f> 0 get /bigcap put dup <10> 0 get /bigcup put <11> 0 get /parallel put /Metrics 18 dict def Metrics begin /.notdef 0 def /rad1 1000 def /rad2 1000 def /rad3 1000 def /rad4 1000 def /rad5 1048 def /radext 1048 def /int 500 def /pathint 500 def /sum 700 def /prod 700 def /cdot 1000 def /vdot 550 def /ddot 1000 def /hbar 500 def /bigcap 700 def /bigcup 700 def /parallel 500 def end /BBox 18 dict def BBox begin /.notdef [0 0 0 0] def /rad1 [110 -1150 1020 0] def /rad2 [110 -1750 1020 0] def /rad3 [110 -2350 1020 0] def /rad4 [110 -2950 1020 0] def /rad5 [128 -2890 740 0] def /radext [700 -600 740 0] def /int [20 0 425 1045] def /pathint [20 0 425 1045] def /sum [15 5 640 715] def /prod [15 0 670 715] def /cdot [110 215 890 325] def /vdot [165 -5 280 770] def /ddot [110 -5 890 770] def /hbar [20 -10 480 685] def /bigcap [0 0 680 720] def /bigcup [0 0 680 720] def /parallel [65 -175 400 675] def end /CharacterDefs 18 dict def CharacterDefs begin /.notdef {
    
} def /rad1 {
    newpath 980 0 moveto 464 -1048 lineto 248 -560 lineto 110 -656 lineto 125 -675 lineto 200 -624 lineto 420 -1150 lineto 460 -1150 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad2 {
    newpath 980 0 moveto 460 -1600 lineto 245 -864 lineto 110 -1000 lineto 128 -1023 lineto 200 -950 lineto 424 -1750 lineto 456 -1750 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad3 {
    newpath 980 0 moveto 464 -2144 lineto 248 -1160 lineto 110 -1368 lineto 130 -1390 lineto 192 -1288 lineto 424 -2350 lineto 464 -2350 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad4 {
    newpath 980 0 moveto 880 -488 lineto 672 -1600 lineto 464 -2696 lineto 248 -1464 lineto 110 -1728 lineto 130 -1750 lineto 192 -1616 lineto 424 -2950 lineto 464 -2950 lineto 768 -1312 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad5 {
    newpath 700 0 moveto 700 -2628 lineto 248 -1284 lineto 128 -1564 lineto 150 -1580 lineto 215 -1425 lineto 688 -2890 lineto 740 -2890 lineto 740 0 lineto 700 0 lineto closepath fill
} def /radext {
    newpath 700 0 moveto 700 -600 lineto 740 -600 lineto 740 0 lineto 700 0 lineto closepath fill
} def /int {
    newpath 245 390 moveto 225 235 195 145 180 100 curveto 165 60 150 50 140 40 curveto 135 30 85 0 50 20 curveto 35 25 25 45 25 55 curveto 20 80 30 100 55 110 curveto 80 125 93 110 110 90 curveto 135 60 155 135 160 195 curveto 165 270 170 340 190 510 curveto 205 650 lineto 220 810 230 890 265 960 curveto 275 980 295 1015 320 1030 curveto 350 1045 380 1030 395 1020 curveto 410 1010 425 980 400 955 curveto 385 940 347 925 330 950 curveto 310 970 290 955 290 940 curveto 280 900 285 745 270 610 curveto 245 390 lineto closepath fill
} def /pathint {
    newpath 245 390 moveto 225 235 195 145 180 100 curveto 165 60 150 50 140 40 curveto 135 30 85 0 50 20 curveto 35 25 25 45 25 55 curveto 20 80 30 100 55 110 curveto 80 125 93 110 110 90 curveto 135 60 155 135 160 195 curveto 165 270 170 340 190 510 curveto 205 650 lineto 220 810 230 890 265 960 curveto 275 980 295 1015 320 1030 curveto 350 1045 380 1030 395 1020 curveto 410 1010 425 980 400 955 curveto 385 940 347 925 330 950 curveto 310 970 290 955 290 940 curveto 280 900 285 745 270 610 curveto 245 390 lineto fill 20 setlinewidth 220 400 moveto 290 400 340 455 340 500 curveto 340 585 290 640 220 640 curveto 155 640 100 585 100 500 curveto 100 455 155 400 220 400 curveto stroke
} def /sum {
    newpath 330 335 moveto 20 715 lineto 575 715 lineto 600 545 lineto 575 535 lineto 550 625 525 685 395 685 curveto 160 685 lineto 411 370 lineto 160 90 lineto 470 90 lineto 565 90 590 140 610 210 curveto 640 200 lineto 585 5 lineto 15 5 lineto 330 335 lineto closepath fill
} def /prod {
    newpath 590 90 moveto 590 30 620 20 670 20 curveto 670 0 lineto 410 0 lineto 410 20 lineto 460 20 495 30 495 90 curveto 495 670 lineto 190 670 lineto 190 90 lineto 190 30 225 20 275 20 curveto 275 0 lineto 15 0 lineto 15 20 lineto 65 20 100 30 100 90 curveto 100 615 lineto 100 690 40 700 20 700 curveto 20 715 lineto 670 715 lineto 670 700 lineto 645 700 590 690 590 615 curveto 590 90 lineto closepath fill
} def /cdot {
    110 270 moveto 110 300 135 325 165 325 curveto 195 325 220 300 220 270 curveto 220 235 185 215 165 215 curveto 145 215 110 235 110 270 curveto fill 445 270 moveto 445 300 470 325 500 325 curveto 530 325 555 300 555 270 curveto 555 235 520 215 500 215 curveto 480 215 445 235 445 270 curveto fill 775 270 moveto 775 300 800 325 830 325 curveto 860 325 890 300 890 270 curveto 890 235 850 215 830 215 curveto 810 215 775 235 775 270 curveto fill
} def /vdot {
    220 770 moveto 250 770 280 750 280 720 curveto 280 680 250 660 220 660 curveto 185 660 165 695 165 720 curveto 165 740 185 770 220 770 curveto fill 220 440 moveto 250 440 280 415 280 385 curveto 280 355 250 330 220 330 curveto 185 330 165 365 165 385 curveto 165 405 185 440 220 440 curveto fill 220 105 moveto 250 105 280 80 280 50 curveto 280 20 250 -5 220 -5 curveto 185 -5 165 30 165 50 curveto 165 70 185 105 220 105 curveto fill
} def /ddot {
    165 720 moveto 205 720 220 700 220 665 curveto 220 630 195 610 165 610 curveto 130 620 110 645 110 665 curveto 110 690 130 720 165 720 curveto fill 500 440 moveto 530 440 555 415 555 385 curveto 555 355 530 330 500 330 curveto 465 330 445 365 445 385 curveto 445 405 465 440 500 440 curveto fill 830 155 moveto 860 155 890 130 890 100 curveto 890 70 860 45 830 45 curveto 795 45 775 80 775 100 curveto 775 120 795 155 830 155 curveto fill
} def /hbar {
    480 105 moveto 440 55 400 -10 335 -10 curveto 300 -10 290 10 290 35 curveto 290 65 370 350 370 365 curveto 370 380 355 390 340 390 curveto 290 390 205 275 185 250 curveto 140 180 125 125 95 0 curveto 20 0 lineto 150 500 lineto 160 545 180 600 180 615 curveto 180 625 170 640 135 640 curveto 110 640 lineto 100 655 lineto 165 660 215 670 270 685 curveto 275 680 lineto 155 240 lineto 155 235 lineto 190 290 290 440 380 440 curveto 400 440 450 435 450 370 curveto 450 335 365 80 365 55 curveto 365 45 375 40 385 40 curveto 405 40 425 70 465 115 curveto 480 105 lineto fill 55 545 moveto 55 520 lineto 310 560 lineto 310 585 lineto 55 545 lineto fill
} def /bigcap {
    newpath 615 400 moveto 615 575 500 655 340 655 curveto 180 655 70 575 70 400 curveto 70 0 lineto 5 0 lineto 5 400 lineto 5 610 140 720 340 720 curveto 545 720 680 610 680 400 curveto 680 0 lineto 615 0 lineto 615 400 lineto closepath fill
} def /bigcup {
    newpath 65 320 moveto 65 145 180 65 340 65 curveto 500 65 615 145 615 320 curveto 615 720 lineto 680 720 lineto 680 320 lineto 680 110 540 0 340 0 curveto 140 0 0 110 0 320 curveto 0 720 lineto 65 720 lineto 65 320 lineto closepath fill
} def /parallel {
    135 675 moveto 135 -175 lineto 65 -175 lineto 65 675 lineto 135 675 lineto fill 335 675 moveto 335 -175 lineto 265 -175 lineto 265 675 lineto 335 675 lineto fill 400 675 moveto
} def end /BuildChar {
    0 begin /char exch def /fontdict exch def /charname fontdict /Encoding get char get def fontdict begin Metrics charname get 0 BBox charname get aload pop setcachedevice CharacterDefs charname get exec end end
} def /BuildChar load 0 3 dict put /UniqueID 1 def end /EqBFont exch definefont pop
%%EndSetup
0 0 14.627 10.909976 rectclip
0 0 14.627 10.909976 rectclip
0 nxsetgray
/Times-Italic findfont 12 scalefont
49
exch
defineuserobject
49 execuserobject setfont
1 4.617976 moveto
(n) [0 0 6.652403e+22 4.246861e+30] xyshow
/Symbol findfont 9 scalefont
50
exch
defineuserobject
50 execuserobject setfont
7 2.818 moveto
(h) [0 0 0 0] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
262.000000 23.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 12 10 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 11:34:44 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 12 10
%%Baseline: 1 1.926001 10.711 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".RJ:Rbq!!!EE"9_+jSid;k!&A0sO@"L$!/a>R!L,$-1s/C
% B#Cn*e"h)@2@AXE`Ui2FuJ3`%0`&Rf+8YSb3_%Sh>d^TT.-Vk:7Dq]T'H8tF899LJhk"C4r)
% MA.:#"UO8lBW;Q]'r]R,u5I7DqHmI>]C#f_Q3-AP+66)-W#'p#nWO><.IUg"/qk0!(89qD@H
% &0:o"PjJ[%Mg[Z0#QWSRf/+#gSJ<1l!_P^f,sk]YhK!.8Q0`1;-tlb.cM.()[1-V:*ZV5h7r
% U4OP2a>(^SEl9k?A36&X*I@"qa.?V*J:[c)HOSF0!sof`*$G\dO[^9>[3.nI@CWQc"!3%R7g
% ho8&I'1gN3T&X.>B6=C1MQ*5^J%K(^(DCoE`6nQOj_U(dW*B!%7a_!WW3#x
% EndExpression N 389 185 E c0 S 93da R 68e52ba9
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
50 dict dup begin /FontType 3 def /FontMatrix [0.001 0 0 0.001 0 0] def /FontBBox [15 -2950 1360 1045] def /Encoding 256 array def 0 1 255 {
    Encoding exch /.notdef put
} for Encoding dup <01> 0 get /rad1 put dup <02> 0 get /rad2 put dup <03> 0 get /rad3 put dup <04> 0 get /rad4 put dup <05> 0 get /rad5 put dup <06> 0 get /radext put dup <07> 0 get /int put dup <08> 0 get /pathint put dup <09> 0 get /sum put dup <0a> 0 get /prod put dup <0b> 0 get /cdot put dup <0c> 0 get /vdot put dup <0d> 0 get /ddot put dup <0e> 0 get /hbar put dup <0f> 0 get /bigcap put dup <10> 0 get /bigcup put <11> 0 get /parallel put /Metrics 18 dict def Metrics begin /.notdef 0 def /rad1 1000 def /rad2 1000 def /rad3 1000 def /rad4 1000 def /rad5 1048 def /radext 1048 def /int 500 def /pathint 500 def /sum 700 def /prod 700 def /cdot 1000 def /vdot 550 def /ddot 1000 def /hbar 500 def /bigcap 700 def /bigcup 700 def /parallel 500 def end /BBox 18 dict def BBox begin /.notdef [0 0 0 0] def /rad1 [110 -1150 1020 0] def /rad2 [110 -1750 1020 0] def /rad3 [110 -2350 1020 0] def /rad4 [110 -2950 1020 0] def /rad5 [128 -2890 740 0] def /radext [700 -600 740 0] def /int [20 0 425 1045] def /pathint [20 0 425 1045] def /sum [15 5 640 715] def /prod [15 0 670 715] def /cdot [110 215 890 325] def /vdot [165 -5 280 770] def /ddot [110 -5 890 770] def /hbar [20 -10 480 685] def /bigcap [0 0 680 720] def /bigcup [0 0 680 720] def /parallel [65 -175 400 675] def end /CharacterDefs 18 dict def CharacterDefs begin /.notdef {
    
} def /rad1 {
    newpath 980 0 moveto 464 -1048 lineto 248 -560 lineto 110 -656 lineto 125 -675 lineto 200 -624 lineto 420 -1150 lineto 460 -1150 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad2 {
    newpath 980 0 moveto 460 -1600 lineto 245 -864 lineto 110 -1000 lineto 128 -1023 lineto 200 -950 lineto 424 -1750 lineto 456 -1750 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad3 {
    newpath 980 0 moveto 464 -2144 lineto 248 -1160 lineto 110 -1368 lineto 130 -1390 lineto 192 -1288 lineto 424 -2350 lineto 464 -2350 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad4 {
    newpath 980 0 moveto 880 -488 lineto 672 -1600 lineto 464 -2696 lineto 248 -1464 lineto 110 -1728 lineto 130 -1750 lineto 192 -1616 lineto 424 -2950 lineto 464 -2950 lineto 768 -1312 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad5 {
    newpath 700 0 moveto 700 -2628 lineto 248 -1284 lineto 128 -1564 lineto 150 -1580 lineto 215 -1425 lineto 688 -2890 lineto 740 -2890 lineto 740 0 lineto 700 0 lineto closepath fill
} def /radext {
    newpath 700 0 moveto 700 -600 lineto 740 -600 lineto 740 0 lineto 700 0 lineto closepath fill
} def /int {
    newpath 245 390 moveto 225 235 195 145 180 100 curveto 165 60 150 50 140 40 curveto 135 30 85 0 50 20 curveto 35 25 25 45 25 55 curveto 20 80 30 100 55 110 curveto 80 125 93 110 110 90 curveto 135 60 155 135 160 195 curveto 165 270 170 340 190 510 curveto 205 650 lineto 220 810 230 890 265 960 curveto 275 980 295 1015 320 1030 curveto 350 1045 380 1030 395 1020 curveto 410 1010 425 980 400 955 curveto 385 940 347 925 330 950 curveto 310 970 290 955 290 940 curveto 280 900 285 745 270 610 curveto 245 390 lineto closepath fill
} def /pathint {
    newpath 245 390 moveto 225 235 195 145 180 100 curveto 165 60 150 50 140 40 curveto 135 30 85 0 50 20 curveto 35 25 25 45 25 55 curveto 20 80 30 100 55 110 curveto 80 125 93 110 110 90 curveto 135 60 155 135 160 195 curveto 165 270 170 340 190 510 curveto 205 650 lineto 220 810 230 890 265 960 curveto 275 980 295 1015 320 1030 curveto 350 1045 380 1030 395 1020 curveto 410 1010 425 980 400 955 curveto 385 940 347 925 330 950 curveto 310 970 290 955 290 940 curveto 280 900 285 745 270 610 curveto 245 390 lineto fill 20 setlinewidth 220 400 moveto 290 400 340 455 340 500 curveto 340 585 290 640 220 640 curveto 155 640 100 585 100 500 curveto 100 455 155 400 220 400 curveto stroke
} def /sum {
    newpath 330 335 moveto 20 715 lineto 575 715 lineto 600 545 lineto 575 535 lineto 550 625 525 685 395 685 curveto 160 685 lineto 411 370 lineto 160 90 lineto 470 90 lineto 565 90 590 140 610 210 curveto 640 200 lineto 585 5 lineto 15 5 lineto 330 335 lineto closepath fill
} def /prod {
    newpath 590 90 moveto 590 30 620 20 670 20 curveto 670 0 lineto 410 0 lineto 410 20 lineto 460 20 495 30 495 90 curveto 495 670 lineto 190 670 lineto 190 90 lineto 190 30 225 20 275 20 curveto 275 0 lineto 15 0 lineto 15 20 lineto 65 20 100 30 100 90 curveto 100 615 lineto 100 690 40 700 20 700 curveto 20 715 lineto 670 715 lineto 670 700 lineto 645 700 590 690 590 615 curveto 590 90 lineto closepath fill
} def /cdot {
    110 270 moveto 110 300 135 325 165 325 curveto 195 325 220 300 220 270 curveto 220 235 185 215 165 215 curveto 145 215 110 235 110 270 curveto fill 445 270 moveto 445 300 470 325 500 325 curveto 530 325 555 300 555 270 curveto 555 235 520 215 500 215 curveto 480 215 445 235 445 270 curveto fill 775 270 moveto 775 300 800 325 830 325 curveto 860 325 890 300 890 270 curveto 890 235 850 215 830 215 curveto 810 215 775 235 775 270 curveto fill
} def /vdot {
    220 770 moveto 250 770 280 750 280 720 curveto 280 680 250 660 220 660 curveto 185 660 165 695 165 720 curveto 165 740 185 770 220 770 curveto fill 220 440 moveto 250 440 280 415 280 385 curveto 280 355 250 330 220 330 curveto 185 330 165 365 165 385 curveto 165 405 185 440 220 440 curveto fill 220 105 moveto 250 105 280 80 280 50 curveto 280 20 250 -5 220 -5 curveto 185 -5 165 30 165 50 curveto 165 70 185 105 220 105 curveto fill
} def /ddot {
    165 720 moveto 205 720 220 700 220 665 curveto 220 630 195 610 165 610 curveto 130 620 110 645 110 665 curveto 110 690 130 720 165 720 curveto fill 500 440 moveto 530 440 555 415 555 385 curveto 555 355 530 330 500 330 curveto 465 330 445 365 445 385 curveto 445 405 465 440 500 440 curveto fill 830 155 moveto 860 155 890 130 890 100 curveto 890 70 860 45 830 45 curveto 795 45 775 80 775 100 curveto 775 120 795 155 830 155 curveto fill
} def /hbar {
    480 105 moveto 440 55 400 -10 335 -10 curveto 300 -10 290 10 290 35 curveto 290 65 370 350 370 365 curveto 370 380 355 390 340 390 curveto 290 390 205 275 185 250 curveto 140 180 125 125 95 0 curveto 20 0 lineto 150 500 lineto 160 545 180 600 180 615 curveto 180 625 170 640 135 640 curveto 110 640 lineto 100 655 lineto 165 660 215 670 270 685 curveto 275 680 lineto 155 240 lineto 155 235 lineto 190 290 290 440 380 440 curveto 400 440 450 435 450 370 curveto 450 335 365 80 365 55 curveto 365 45 375 40 385 40 curveto 405 40 425 70 465 115 curveto 480 105 lineto fill 55 545 moveto 55 520 lineto 310 560 lineto 310 585 lineto 55 545 lineto fill
} def /bigcap {
    newpath 615 400 moveto 615 575 500 655 340 655 curveto 180 655 70 575 70 400 curveto 70 0 lineto 5 0 lineto 5 400 lineto 5 610 140 720 340 720 curveto 545 720 680 610 680 400 curveto 680 0 lineto 615 0 lineto 615 400 lineto closepath fill
} def /bigcup {
    newpath 65 320 moveto 65 145 180 65 340 65 curveto 500 65 615 145 615 320 curveto 615 720 lineto 680 720 lineto 680 320 lineto 680 110 540 0 340 0 curveto 140 0 0 110 0 320 curveto 0 720 lineto 65 720 lineto 65 320 lineto closepath fill
} def /parallel {
    135 675 moveto 135 -175 lineto 65 -175 lineto 65 675 lineto 135 675 lineto fill 335 675 moveto 335 -175 lineto 265 -175 lineto 265 675 lineto 335 675 lineto fill 400 675 moveto
} def end /BuildChar {
    0 begin /char exch def /fontdict exch def /charname fontdict /Encoding get char get def fontdict begin Metrics charname get 0 BBox charname get aload pop setcachedevice CharacterDefs charname get exec end end
} def /BuildChar load 0 3 dict put /UniqueID 1 def end /EqBFont exch definefont pop
%%EndSetup
0 0 11.711 9.218 rectclip
0 0 11.711 9.218 rectclip
0 nxsetgray
/Times-Italic findfont 12 scalefont
49
exch
defineuserobject
49 execuserobject setfont
1 2.926001 moveto
(n) [0 0 6.652403e+22 4.246861e+30] xyshow
/Symbol findfont 9 scalefont
50
exch
defineuserobject
50 execuserobject setfont
7 2.818 moveto
() [0 0] xyshow
/Times-Italic findfont 9 scalefont
51
exch
defineuserobject
51 execuserobject setfont
7 1.099 moveto
(l) [0 0 0 0] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
181.000000 23.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 14 10 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 11:34:58 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 14 10
%%Baseline: 1 1.880976 12.7 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".R^juP\!!!E/![d/0&4q0<,X_XRS2ihA"VLe`-6WLgVDQ[
% K-Oh*sQ3\5X&jqDA/d.?W9aUk%J[c<T!&,[T+s@.djH)sn-B+HW60Psqo9!eI`HNk)RQT7V!
% @DLl#"T[UblFbJAcV)T=2C+`D8a(qo9aO:+_V:n^9`Z:VS8Tdm3O#CBMqY-/t!-@Jmn]kV2W
% #@j>TAe2K/lG#%\a_DF:4K(D*1n<-M/ib-5=RWB-a.Ha<eScCL&@6Dk6#ruE(EWE#*D8KoH0
% eb-Wj.54.1Em4'.*4+0RfhU^9V]L3Y\]7buTHKoY*^fV:5QV-88&ta2UsXoh/P*-K(iFT>5_
% pZ1d6\IfKY^+r@sFpPM^/Y7)B%H:Yaut$"p"iT5QW(h,m6Um7M)'i^kk:1zx
% EndExpression N 393 189 E e0 S 9a32 R 292717f7
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
50 dict dup begin /FontType 3 def /FontMatrix [0.001 0 0 0.001 0 0] def /FontBBox [15 -2950 1360 1045] def /Encoding 256 array def 0 1 255 {
    Encoding exch /.notdef put
} for Encoding dup <01> 0 get /rad1 put dup <02> 0 get /rad2 put dup <03> 0 get /rad3 put dup <04> 0 get /rad4 put dup <05> 0 get /rad5 put dup <06> 0 get /radext put dup <07> 0 get /int put dup <08> 0 get /pathint put dup <09> 0 get /sum put dup <0a> 0 get /prod put dup <0b> 0 get /cdot put dup <0c> 0 get /vdot put dup <0d> 0 get /ddot put dup <0e> 0 get /hbar put dup <0f> 0 get /bigcap put dup <10> 0 get /bigcup put <11> 0 get /parallel put /Metrics 18 dict def Metrics begin /.notdef 0 def /rad1 1000 def /rad2 1000 def /rad3 1000 def /rad4 1000 def /rad5 1048 def /radext 1048 def /int 500 def /pathint 500 def /sum 700 def /prod 700 def /cdot 1000 def /vdot 550 def /ddot 1000 def /hbar 500 def /bigcap 700 def /bigcup 700 def /parallel 500 def end /BBox 18 dict def BBox begin /.notdef [0 0 0 0] def /rad1 [110 -1150 1020 0] def /rad2 [110 -1750 1020 0] def /rad3 [110 -2350 1020 0] def /rad4 [110 -2950 1020 0] def /rad5 [128 -2890 740 0] def /radext [700 -600 740 0] def /int [20 0 425 1045] def /pathint [20 0 425 1045] def /sum [15 5 640 715] def /prod [15 0 670 715] def /cdot [110 215 890 325] def /vdot [165 -5 280 770] def /ddot [110 -5 890 770] def /hbar [20 -10 480 685] def /bigcap [0 0 680 720] def /bigcup [0 0 680 720] def /parallel [65 -175 400 675] def end /CharacterDefs 18 dict def CharacterDefs begin /.notdef {
    
} def /rad1 {
    newpath 980 0 moveto 464 -1048 lineto 248 -560 lineto 110 -656 lineto 125 -675 lineto 200 -624 lineto 420 -1150 lineto 460 -1150 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad2 {
    newpath 980 0 moveto 460 -1600 lineto 245 -864 lineto 110 -1000 lineto 128 -1023 lineto 200 -950 lineto 424 -1750 lineto 456 -1750 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad3 {
    newpath 980 0 moveto 464 -2144 lineto 248 -1160 lineto 110 -1368 lineto 130 -1390 lineto 192 -1288 lineto 424 -2350 lineto 464 -2350 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad4 {
    newpath 980 0 moveto 880 -488 lineto 672 -1600 lineto 464 -2696 lineto 248 -1464 lineto 110 -1728 lineto 130 -1750 lineto 192 -1616 lineto 424 -2950 lineto 464 -2950 lineto 768 -1312 lineto 1020 0 lineto 980 0 lineto closepath fill
} def /rad5 {
    newpath 700 0 moveto 700 -2628 lineto 248 -1284 lineto 128 -1564 lineto 150 -1580 lineto 215 -1425 lineto 688 -2890 lineto 740 -2890 lineto 740 0 lineto 700 0 lineto closepath fill
} def /radext {
    newpath 700 0 moveto 700 -600 lineto 740 -600 lineto 740 0 lineto 700 0 lineto closepath fill
} def /int {
    newpath 245 390 moveto 225 235 195 145 180 100 curveto 165 60 150 50 140 40 curveto 135 30 85 0 50 20 curveto 35 25 25 45 25 55 curveto 20 80 30 100 55 110 curveto 80 125 93 110 110 90 curveto 135 60 155 135 160 195 curveto 165 270 170 340 190 510 curveto 205 650 lineto 220 810 230 890 265 960 curveto 275 980 295 1015 320 1030 curveto 350 1045 380 1030 395 1020 curveto 410 1010 425 980 400 955 curveto 385 940 347 925 330 950 curveto 310 970 290 955 290 940 curveto 280 900 285 745 270 610 curveto 245 390 lineto closepath fill
} def /pathint {
    newpath 245 390 moveto 225 235 195 145 180 100 curveto 165 60 150 50 140 40 curveto 135 30 85 0 50 20 curveto 35 25 25 45 25 55 curveto 20 80 30 100 55 110 curveto 80 125 93 110 110 90 curveto 135 60 155 135 160 195 curveto 165 270 170 340 190 510 curveto 205 650 lineto 220 810 230 890 265 960 curveto 275 980 295 1015 320 1030 curveto 350 1045 380 1030 395 1020 curveto 410 1010 425 980 400 955 curveto 385 940 347 925 330 950 curveto 310 970 290 955 290 940 curveto 280 900 285 745 270 610 curveto 245 390 lineto fill 20 setlinewidth 220 400 moveto 290 400 340 455 340 500 curveto 340 585 290 640 220 640 curveto 155 640 100 585 100 500 curveto 100 455 155 400 220 400 curveto stroke
} def /sum {
    newpath 330 335 moveto 20 715 lineto 575 715 lineto 600 545 lineto 575 535 lineto 550 625 525 685 395 685 curveto 160 685 lineto 411 370 lineto 160 90 lineto 470 90 lineto 565 90 590 140 610 210 curveto 640 200 lineto 585 5 lineto 15 5 lineto 330 335 lineto closepath fill
} def /prod {
    newpath 590 90 moveto 590 30 620 20 670 20 curveto 670 0 lineto 410 0 lineto 410 20 lineto 460 20 495 30 495 90 curveto 495 670 lineto 190 670 lineto 190 90 lineto 190 30 225 20 275 20 curveto 275 0 lineto 15 0 lineto 15 20 lineto 65 20 100 30 100 90 curveto 100 615 lineto 100 690 40 700 20 700 curveto 20 715 lineto 670 715 lineto 670 700 lineto 645 700 590 690 590 615 curveto 590 90 lineto closepath fill
} def /cdot {
    110 270 moveto 110 300 135 325 165 325 curveto 195 325 220 300 220 270 curveto 220 235 185 215 165 215 curveto 145 215 110 235 110 270 curveto fill 445 270 moveto 445 300 470 325 500 325 curveto 530 325 555 300 555 270 curveto 555 235 520 215 500 215 curveto 480 215 445 235 445 270 curveto fill 775 270 moveto 775 300 800 325 830 325 curveto 860 325 890 300 890 270 curveto 890 235 850 215 830 215 curveto 810 215 775 235 775 270 curveto fill
} def /vdot {
    220 770 moveto 250 770 280 750 280 720 curveto 280 680 250 660 220 660 curveto 185 660 165 695 165 720 curveto 165 740 185 770 220 770 curveto fill 220 440 moveto 250 440 280 415 280 385 curveto 280 355 250 330 220 330 curveto 185 330 165 365 165 385 curveto 165 405 185 440 220 440 curveto fill 220 105 moveto 250 105 280 80 280 50 curveto 280 20 250 -5 220 -5 curveto 185 -5 165 30 165 50 curveto 165 70 185 105 220 105 curveto fill
} def /ddot {
    165 720 moveto 205 720 220 700 220 665 curveto 220 630 195 610 165 610 curveto 130 620 110 645 110 665 curveto 110 690 130 720 165 720 curveto fill 500 440 moveto 530 440 555 415 555 385 curveto 555 355 530 330 500 330 curveto 465 330 445 365 445 385 curveto 445 405 465 440 500 440 curveto fill 830 155 moveto 860 155 890 130 890 100 curveto 890 70 860 45 830 45 curveto 795 45 775 80 775 100 curveto 775 120 795 155 830 155 curveto fill
} def /hbar {
    480 105 moveto 440 55 400 -10 335 -10 curveto 300 -10 290 10 290 35 curveto 290 65 370 350 370 365 curveto 370 380 355 390 340 390 curveto 290 390 205 275 185 250 curveto 140 180 125 125 95 0 curveto 20 0 lineto 150 500 lineto 160 545 180 600 180 615 curveto 180 625 170 640 135 640 curveto 110 640 lineto 100 655 lineto 165 660 215 670 270 685 curveto 275 680 lineto 155 240 lineto 155 235 lineto 190 290 290 440 380 440 curveto 400 440 450 435 450 370 curveto 450 335 365 80 365 55 curveto 365 45 375 40 385 40 curveto 405 40 425 70 465 115 curveto 480 105 lineto fill 55 545 moveto 55 520 lineto 310 560 lineto 310 585 lineto 55 545 lineto fill
} def /bigcap {
    newpath 615 400 moveto 615 575 500 655 340 655 curveto 180 655 70 575 70 400 curveto 70 0 lineto 5 0 lineto 5 400 lineto 5 610 140 720 340 720 curveto 545 720 680 610 680 400 curveto 680 0 lineto 615 0 lineto 615 400 lineto closepath fill
} def /bigcup {
    newpath 65 320 moveto 65 145 180 65 340 65 curveto 500 65 615 145 615 320 curveto 615 720 lineto 680 720 lineto 680 320 lineto 680 110 540 0 340 0 curveto 140 0 0 110 0 320 curveto 0 720 lineto 65 720 lineto 65 320 lineto closepath fill
} def /parallel {
    135 675 moveto 135 -175 lineto 65 -175 lineto 65 675 lineto 135 675 lineto fill 335 675 moveto 335 -175 lineto 265 -175 lineto 265 675 lineto 335 675 lineto fill 400 675 moveto
} def end /BuildChar {
    0 begin /char exch def /fontdict exch def /charname fontdict /Encoding get char get def fontdict begin Metrics charname get 0 BBox charname get aload pop setcachedevice CharacterDefs charname get exec end end
} def /BuildChar load 0 3 dict put /UniqueID 1 def end /EqBFont exch definefont pop
%%EndSetup
0 0 13.7 9.172976 rectclip
0 0 13.7 9.172976 rectclip
0 nxsetgray
/Times-Italic findfont 12 scalefont
49
exch
defineuserobject
49 execuserobject setfont
1 2.880976 moveto
(n) [0 0 6.652403e+22 4.246861e+30] xyshow
/Symbol findfont 9 scalefont
50
exch
defineuserobject
50 execuserobject setfont
7 2.818 moveto
() [0 0] xyshow
/Times-Italic findfont 9 scalefont
51
exch
defineuserobject
51 execuserobject setfont
7 1.081 moveto
(n) [0 0 0 0] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
0 nxsetgray
0 -60 225 105 line
grestore
0 0 0 setup
0 nxsetgray
0 60 305 45 line
grestore
0 0 0 setup
gsave
60 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 150] concat
61 execuserobject setfont
0 nxsetgray
237 64 moveto (Filter Table) show
237 76 moveto (Initial) show
237 88 moveto (Index ) show
60 execuserobject setfont
(l) show
grestore
grestore
0 0 0 setup
gsave
60 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 160] concat
61 execuserobject setfont
0 nxsetgray
317 74 moveto (Interpolation) show
317 88 moveto (Factor ) show
/Symbol findfont 10 scalefont [1 0 0 -1 0 0] makefont
62
exch
defineuserobject
62 execuserobject setfont
(h) show
grestore
grestore
0 0 0 setup
0 nxsetgray
0 -10 225 35 line
grestore
0 0 0 setup
0 nxsetgray
0 -10 305 35 line
grestore
0 0 0 setup
0 nxsetgray
0 -10 385 35 line
grestore
0 0 0 setup
0 nxsetgray
0 -10 145 35 line
grestore
0 0 0 setup
0 nxsetgray
25 0 145 30 line
180 145 30 arrow
grestore
0 0 0 setup
0 nxsetgray
25 0 200 30 line
0 225 30 arrow
grestore
0 0 0 setup
0 nxsetgray
25 0 225 30 line
180 225 30 arrow
grestore
0 0 0 setup
0 nxsetgray
25 0 305 30 line
180 305 30 arrow
grestore
0 0 0 setup
0 nxsetgray
25 0 280 30 line
0 305 30 arrow
grestore
0 0 0 setup
0 nxsetgray
25 0 360 30 line
0 385 30 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 223 42 oval fill
grestore
0 nxsetgray
5 5 223 42 oval matrix defaultmatrix setmatrix stroke
grestore
0 0 0 setup
0 nxsetgray
0 -10 225 125 line
grestore
0 0 0 setup
0 nxsetgray
0 -10 385 125 line
grestore
0 0 0 setup
0 nxsetgray
45 0 225 120 line
180 225 120 arrow
grestore
0 0 0 setup
0 nxsetgray
50 0 335 120 line
0 385 120 arrow
grestore
0 0 0 setup
gsave
62 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 237] concat
61 execuserobject setfont
0 nxsetgray
149 120 moveto (Binary Point) show
grestore
grestore
0 0 0 setup
0 nxsetgray
20 0 205 120 line
0 225 120 arrow
grestore
0 0 0 setup
278.000000 112.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 52 13 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Nov  5 10:18:00 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 52 13
%%Baseline: 1 2.19 50.874664 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".RJ49W7!!"hm"9_=pSid;k!&A0sO@"L$!/a>R!L,$-1s/C
% B#Cn*e"h)@2@AXE`Ui2FuJ3`%0`&Rf+8YXkFaW!,slN$o42$fa3D=1Mh`0`8d!_h#b$ue*iR
% K6<qbQ-(FYC\3Kg5,Q?(boG%6dULK;`aHG`gQOD!gT+6!22tM"h8(uJ-q/75a2<[`=QA\.G8
% Cqkbe"n:p=N[2FK$=!T(^g%?K]]<1k2gN)OOXU^W_LD:6dVl23F!fS!iAa;fgg+\dqp8KSM$
% d&4mb8=*D#!9f.X+kcr%K6W%p!(@oGi8bl"N!1'UF9EKf5^(lc^k-S+<@Au4\a?gKJfVj=#`
% /_R=@t3=r3Kje0#B#eDP.7J^lAT`#f$t$j;>[n5mdZY$7U(Z,EPLA=<_oBb.&6V$4Kde*-8d
% /g0q-A[aTp45'`kOH=[-b!bgsU<$)Mo@)-pn:k>31/P(Fp(iF01J=LK'R04O=S2\H2$LgWb&
% :]i$h2jr)&-NQ(5'dM9&WIA*-NJ,FO!+K'x
% EndExpression N 486 1e6 E f6 S c08e R b374721b
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 51.874664 12.380001 rectclip
0 0 51.874664 12.380001 rectclip
0 nxsetgray
1 1 scale
/Symbol findfont 12 scalefont
49
exch
defineuserobject
49 execuserobject setfont
23.722666 3.082 moveto
([) [0 0] xyshow
1 1 scale
1 1 scale
49 execuserobject setfont
46.350666 3.292 moveto
(\)) [0 0] xyshow
1 1 scale
0 nxsetgray
/Times-Italic findfont 12 scalefont
64
exch
defineuserobject
64 execuserobject setfont
1 3.19 moveto
(P) [0 0 4.465441e+30 1.895814e-10] xyshow
49 execuserobject setfont
11.665333 3.19 moveto
<ce> [0 0 0 0] xyshow
/Times-Roman findfont 12 scalefont
50
exch
defineuserobject
50 execuserobject setfont
39.510666 3.19 moveto
(1,0) [-5 0 -6 0 0 0 0 0] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 setgray
0.333333 setgray
gsave
0 0 540 144 rectclip
[1 0 0 -1 0 144] concat
grestore
grestore
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Symbol
%%+ Times-Italic
%%+ Symbol
%%+ Times-Italic
%%+ Times-Roman
%%EndDocument
 @endspecial 803 777 a Fb(Figure)23 b(6.)d Fk(Time)e(register)e(format.)167
2652 y @beginspecial 97 @llx 6 @lly 469 @urx 330 @ury 3720
@rwi @setspecial
%%BeginDocument: eps/Waveforms.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Waveforms.draw
%%Creator: Draw
%%CreationDate: Thu Oct 29 22:11:08 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 97 6 469 330
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc closepath
} def /line {
    moveto rlineto stroke
} def /setup {
    setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -5 1 rlineto -3 1 rlineto 1 -2 rlineto -1 -2 rlineto 3 1 rlineto closepath closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def
%%EndSetup
gsave
97 6 372 324 rectclip
97 6 372 324 rectclip
0 0 0 setup
0 0 0 setup
0 0 0 setup
121.000000 62.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 282 174 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 282 174
%%Creator: Mathematica
%%Title: Clipboard
%%CreationDate: Never Never
%%EndComments
50 dict begin
/Mnodistort true def
/pageDashArray [4] def
/nullDashArray [] def

% Compute the minimum of two numbers.
/Mmin {		% p q Mmin min(p,q)
	2 copy		% p q p q
	gt		% p q p>q?
	{ exch } if	% min(p,q) max(p,q)
	pop		% min(p,q)
} bind def


% Compute the maximum of two numbers.
/Mmax {		% p q Mmax max(p,q)
	2 copy		% p q p q
	lt		% p q p<q?
	{ exch } if	% max(p,q) min(p,q)
	pop		% max(p,q)
} bind def

/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain
	/Courier findfont
def
/Bold
	/Courier-Bold findfont
def
/Italic
	/Courier-Oblique findfont
def
/MathPictureStart {
	gsave
	newpath
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
0 setgray 0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	[
	7 -2 roll
	[ 2 index 2 index
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
	
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	show
	} for
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Mgmatrix
	matrix currentmatrix
	def
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/Mfontsize	12 def
/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Courier findfont 12 scalefont setfont
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
% Scaling calculations
0.5 0.13605 0.11976 0.48356 [
[ 0 0 0 0 ]
[ 1 0.618034 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
grestore
grestore
0 0 moveto
1 0 lineto
1 0.618034 lineto
0 0.618034 lineto
closepath
clip
newpath
0 setgray
gsave
gsave
0.004 setlinewidth
0.02381 0.07578 moveto
0.02505 0.07569 lineto
0.02629 0.07562 lineto
0.02753 0.0756 lineto
0.02877 0.07561 lineto
0.03001 0.07566 lineto
0.03125 0.07574 lineto
0.03249 0.07586 lineto
0.03373 0.07602 lineto
0.03621 0.07645 lineto
0.03869 0.07702 lineto
0.04365 0.0786 lineto
0.04861 0.08077 lineto
0.05357 0.0835 lineto
0.06349 0.09055 lineto
0.08333 0.10995 lineto
0.10317 0.13342 lineto
0.12302 0.15639 lineto
0.13294 0.16613 lineto
0.14286 0.17393 lineto
0.14782 0.17694 lineto
0.1503 0.17819 lineto
0.15278 0.17927 lineto
0.15526 0.18016 lineto
0.15774 0.18087 lineto
0.15898 0.18116 lineto
0.16022 0.18139 lineto
0.16146 0.18158 lineto
0.1627 0.18171 lineto
0.16394 0.1818 lineto
0.16518 0.18184 lineto
0.16642 0.18182 lineto
0.16766 0.18175 lineto
0.1689 0.18164 lineto
0.17014 0.18147 lineto
0.17262 0.18097 lineto
0.17386 0.18065 lineto
0.1751 0.18027 lineto
0.17758 0.17935 lineto
0.18254 0.17689 lineto
0.1875 0.17359 lineto
0.19246 0.16946 lineto
0.20238 0.15885 lineto
0.22222 0.1296 lineto
0.2619 0.05757 lineto
0.27183 0.04182 lineto
0.28175 0.0289 lineto
0.28671 0.02379 lineto
0.29167 0.01972 lineto
0.29415 0.01811 lineto
Mistroke
0.29663 0.0168 lineto
0.29911 0.0158 lineto
0.30035 0.01542 lineto
0.30159 0.01512 lineto
0.30283 0.0149 lineto
0.30407 0.01476 lineto
0.30531 0.01472 lineto
0.30655 0.01475 lineto
0.30779 0.01488 lineto
0.30903 0.01509 lineto
0.31027 0.01539 lineto
0.31151 0.01578 lineto
0.31399 0.01684 lineto
0.31647 0.01826 lineto
0.32143 0.02225 lineto
0.32639 0.02778 lineto
0.33135 0.03488 lineto
0.34127 0.05379 lineto
0.35119 0.07891 lineto
0.36111 0.1099 lineto
0.38095 0.18708 lineto
0.42063 0.37463 lineto
0.44048 0.46482 lineto
0.46032 0.53844 lineto
0.47024 0.56615 lineto
0.48016 0.58658 lineto
0.48512 0.59386 lineto
0.4876 0.59674 lineto
0.49008 0.5991 lineto
0.49256 0.60094 lineto
0.4938 0.60167 lineto
0.49504 0.60226 lineto
0.49628 0.60272 lineto
0.49752 0.60305 lineto
0.49876 0.60325 lineto
0.5 0.60332 lineto
0.50124 0.60325 lineto
0.50248 0.60305 lineto
0.50372 0.60272 lineto
0.50496 0.60226 lineto
0.50744 0.60094 lineto
0.50992 0.5991 lineto
0.5124 0.59674 lineto
0.51488 0.59386 lineto
0.51984 0.58658 lineto
0.52976 0.56615 lineto
0.53968 0.53844 lineto
0.55952 0.46482 lineto
0.57937 0.37463 lineto
0.61905 0.18708 lineto
Mistroke
0.63889 0.1099 lineto
0.64881 0.07891 lineto
0.65873 0.05379 lineto
0.66369 0.04355 lineto
0.66865 0.03488 lineto
0.67361 0.02778 lineto
0.67857 0.02225 lineto
0.68105 0.02007 lineto
0.68353 0.01826 lineto
0.68601 0.01684 lineto
0.68849 0.01578 lineto
0.68973 0.01539 lineto
0.69097 0.01509 lineto
0.69221 0.01488 lineto
0.69345 0.01475 lineto
0.69469 0.01472 lineto
0.69593 0.01476 lineto
0.69717 0.0149 lineto
0.69841 0.01512 lineto
0.69965 0.01542 lineto
0.70089 0.0158 lineto
0.70337 0.0168 lineto
0.70585 0.01811 lineto
0.70833 0.01972 lineto
0.71329 0.02379 lineto
0.71825 0.0289 lineto
0.72817 0.04182 lineto
0.7381 0.05757 lineto
0.77778 0.1296 lineto
0.7877 0.1454 lineto
0.79762 0.15885 lineto
0.80754 0.16946 lineto
0.8125 0.17359 lineto
0.81746 0.17689 lineto
0.82242 0.17935 lineto
0.8249 0.18027 lineto
0.82614 0.18065 lineto
0.82738 0.18097 lineto
0.82862 0.18125 lineto
0.82986 0.18147 lineto
0.8311 0.18164 lineto
0.83234 0.18175 lineto
0.83358 0.18182 lineto
0.83482 0.18184 lineto
0.83606 0.1818 lineto
0.8373 0.18171 lineto
0.83854 0.18158 lineto
0.83978 0.18139 lineto
0.84226 0.18087 lineto
0.84474 0.18016 lineto
Mistroke
0.84722 0.17927 lineto
0.85218 0.17694 lineto
0.85714 0.17393 lineto
0.86706 0.16613 lineto
0.87698 0.15639 lineto
0.89683 0.13342 lineto
0.91667 0.10995 lineto
0.92659 0.0995 lineto
0.93651 0.09055 lineto
0.94147 0.08677 lineto
0.94643 0.0835 lineto
0.95139 0.08077 lineto
0.95635 0.0786 lineto
0.95883 0.07774 lineto
0.96131 0.07702 lineto
0.96379 0.07645 lineto
0.96503 0.07621 lineto
0.96627 0.07602 lineto
0.96751 0.07586 lineto
0.96875 0.07574 lineto
0.96999 0.07566 lineto
0.97123 0.07561 lineto
0.97247 0.0756 lineto
0.97371 0.07562 lineto
0.97619 0.07578 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd
%%EPS Trailer
end
 
%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
0 nxsetgray
272 1 125 95 line
grestore
grestore
0 0 0 setup
gsave
/Times-Roman findfont 10 scalefont [1 0 0 -1 0 0] makefont
89
exch
defineuserobject
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 196] concat
89 execuserobject setfont
0 nxsetgray
112 101 moveto (. . .) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 196] concat
89 execuserobject setfont
0 nxsetgray
401 101 moveto (. . .) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 172] concat
89 execuserobject setfont
0 nxsetgray
401 89 moveto (. . .) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 172] concat
89 execuserobject setfont
0 nxsetgray
115 89 moveto (. . .) show
grestore
grestore
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 131 81 oval fill
grestore
0 nxsetgray
5 5 131 81 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
10 10 129 188 oval fill
grestore
0 nxsetgray
10 10 129 188 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
10 10 165 210 oval fill
grestore
0 nxsetgray
10 10 165 210 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
10 10 201 232 oval fill
grestore
0 nxsetgray
10 10 201 232 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
10 10 237 246 oval fill
grestore
0 nxsetgray
10 10 237 246 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
10 10 273 243 oval fill
grestore
0 nxsetgray
10 10 273 243 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
10 10 309 226 oval fill
grestore
0 nxsetgray
10 10 309 226 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
10 10 345 200 oval fill
grestore
0 nxsetgray
10 10 345 200 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
10 10 381 177 oval fill
grestore
0 nxsetgray
10 10 381 177 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0.333293 nxsetgray
1 104 133 84 line
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 66] concat
89 execuserobject setfont
0 nxsetgray
121 30 moveto (Filter Coefficients) show
121 42 moveto (for Current Output) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 68] concat
89 execuserobject setfont
0 nxsetgray
247 31 moveto (Current) show
237 43 moveto (Output Time) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 66] concat
89 execuserobject setfont
0 nxsetgray
311 30 moveto (Lowpass Filter) show
311 42 moveto (Impulse Response) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 514] concat
89 execuserobject setfont
0 nxsetgray
335 260 moveto (Input Signal Samples) show
grestore
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0.333293 nxsetgray
1 -99 170 210 line
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0.333293 nxsetgray
0 -165 206 231 line
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0.333293 nxsetgray
0 64 242 182 line
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0.333293 nxsetgray
0 -55 278 243 line
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0.333293 nxsetgray
1 -160 314 226 line
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0.333293 nxsetgray
0 -88 350 200 line
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0.333293 nxsetgray
1 -93 386 178 line
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 168 109 oval fill
grestore
0 nxsetgray
5 5 168 109 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 204 63 oval fill
grestore
0 nxsetgray
5 5 204 63 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 241 180 oval fill
grestore
0 nxsetgray
5 5 241 180 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 276 188 oval fill
grestore
0 nxsetgray
5 5 276 188 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 312 65 oval fill
grestore
0 nxsetgray
5 5 312 65 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 348 108 oval fill
grestore
0 nxsetgray
5 5 348 108 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
gsave
0 nxsetgray
5 5 384 83 oval fill
grestore
0 nxsetgray
5 5 384 83 oval matrix defaultmatrix setmatrix stroke
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
17 -27 137 79 line
122.194031 137 79 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
6 57 163 50 line
83.993469 169 107 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
29 13 173 51 line
24.146254 202 64 arrow
grestore
0 setgray
0.333333 setgray
0 0 1.744186 setup
0 nxsetgray
0 133 262 95 line
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
0 -40 261 91 line
89.997345 261 91 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
10 -33 335 83 line
106.856239 335 83 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
21 12 322 236 line
209.745758 322 236 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
7 35 354 215 line
258.692383 354 215 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
0 57 385 193 line
270.002655 385 193 arrow
grestore
0 0 0 setup
0 0 0 setup
0 nxsetgray
10 -11 257 238 line
grestore
0 0 0 setup
0 nxsetgray
10 11 257 227 line
grestore
grestore
0 0 0 setup
0 0 0 setup
0 nxsetgray
10 -10 244 210 line
grestore
0 0 0 setup
0 nxsetgray
10 10 244 200 line
grestore
grestore
0 0 0 setup
0 0 0 setup
0 nxsetgray
10 -10 233 164 line
grestore
0 0 0 setup
0 nxsetgray
10 10 233 154 line
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 390] concat
89 execuserobject setfont
0 nxsetgray
107 198 moveto (. . .) show
grestore
grestore
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 367] concat
89 execuserobject setfont
0 nxsetgray
404 186 moveto (. . .) show
grestore
grestore
0 0 0 setup
215.000000 253.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 21 11 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 16:44:49 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 21 11
%%Baseline: 1 1.825 19.380001 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".RTY^b(!!!E/Jh$"_(eK#D,X_XRS2ihA"VLe`-6WLgVDQ[
% K-Oh*sQ3\5X&jqDA/d.?W9aUk%J[c<T!&,[Tin#Mqf\EPQp`n<3FPaC8@nDhna*n=K8V8]^g
% &Pgi:u*;t8/K#JVW;G9-88oJL(Oh['1U:3`L@o]lIuWp?:"^H-3Y.BP0!\R-jBZK8iRkZIN&
% hI_^8*I1j!'<^(]8kCdPN3Cl[JBd&4p[B\PF5C3ORr`D%).kf+0Zo=dkoi_<cVJGT=3fa%!K
% OT#7Xq'QFJ.AY=EIf1SS??u@;-Qac:n-.MWFiZ;X)m1IkgLE<R2]dUa`CG_5Ht<?d!c%*W<$
% )Gm@).'r:uRp:/P)R;(iHFqJ;e?lQinF<1cNF#$LgT]&:orE8g"-5#=&hC3!n[m"@P(9&=`a
% 9M*H^px
% EndExpression N 408 198 E 89 S a0a7 R e28ddf3a
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 20.380001 10.650001 rectclip
0 0 20.380001 10.650001 rectclip
0 nxsetgray
1 1 scale
/Symbol findfont 10 scalefont
78
exch
defineuserobject
78 execuserobject setfont
5.91 2.915 moveto
(\() [0 0] xyshow
1 1 scale
1 1 scale
78 execuserobject setfont
15.61 2.91 moveto
(\)) [0 0] xyshow
1 1 scale
0 nxsetgray
/Times-Italic findfont 10 scalefont
79
exch
defineuserobject
79 execuserobject setfont
9.91 2.825 moveto
(nx) [-8.91 0 0 0 9.684482e-39 2.000018] xyshow
78 execuserobject setfont
0 0 moveto
() [4.987648e+16 5.764608e+17] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
164.000000 241.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 36 11 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 16:45:23 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 36 11
%%Baseline: 1 1.825 34.314445 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".RJA_L_!!"8]"9_1lSid;k!&A0sO@"L$!/a>R!L,$-1s/C
% B#Cn*e"h)@2@AXE`Ui2FuJ3`%0`&Rf+8YXkFaW!,slN$o42$fa3D=1Mh`0`8d!_h#b$ue*i)
% ?EaFa8jYBYC\3Kg5,Q?(boG%6dULK;`aHG`gQOD!gT+6!22tM"h8(uJ-q/75a2>1`t7,47*;
% `*dj>NpQ`]_hAfR;eli<G`E$hB[0e(eK#%X=1rDV`Ti:E,S]c4b+;o9ik0htSsO>LiUkD9]6
% I!S0G!<>^m]Y,+g!%f%#*b4D:7iR!F'hAUX^r9[eKEAS`$8%qKF('U1(!'e`\q)%r!%82!+o
% jh-@U]<g\gRga.AY=EM(L(I@>+&gki#k@%8hm#F1f?C@BMJrPCr/jpmtf[J:[c)HOSG[!XT\
% ThZ?b2Vc!n#+;T\NnM/C%)dapX7i9F/&YB,;IOW3BA:P9uN%Y5D":0;@GmOK`N=c:@!-$qY+
% TMKBx
% EndExpression N 461 1cd E d9 S b74f R c1416c73
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 35.314445 10.650001 rectclip
0 0 35.314445 10.650001 rectclip
0 nxsetgray
1 1 scale
/Symbol findfont 10 scalefont
78
exch
defineuserobject
78 execuserobject setfont
5.91 2.915 moveto
(\() [0 0] xyshow
1 1 scale
1 1 scale
78 execuserobject setfont
30.544445 2.91 moveto
(\)) [0 0] xyshow
1 1 scale
0 nxsetgray
/Times-Italic findfont 10 scalefont
79
exch
defineuserobject
79 execuserobject setfont
9.91 2.825 moveto
(nx) [-8.91 0 0 0 9.684482e-39 2.000018] xyshow
78 execuserobject setfont
17.132221 2.825 moveto
(-) [0 0 0 0] xyshow
/Times-Roman findfont 10 scalefont
84
exch
defineuserobject
84 execuserobject setfont
24.844444 2.825 moveto
(1) [0 0 2.000008 1.397868e-39] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
251.000000 239.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 21 11 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 16:46:04 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 21 11
%%Baseline: 1 1.825 19.940001 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".RTY^b(!!!E/Jh$"_(eK#D,X_XRS2ihA"VLe`-6WLgVDQ[
% K-Oh*sQ3\5X&jqDA/d.?W9aUk%J[c<T!&,[Tin#Mqf\EPQp`n<3FPaC8@nDhna*n=K8V8]^g
% &Pgi:u*;t8/K#JVW;G9-88oJL(Oh['1U:3`L@o]lIuWp?:"^H-3Y.BP0!\R-jBZK8iR_VIN&
% hI_^8*I1j!'<^(]8kCdPN3Cl[JBd&4p[B\PF5C3ORr`D%).#f@4!o=dkoi_<cVJGT=3fa%!K
% OT#7Xq'QFJ.AY=EIf1SS??u@;-Qac:n-.MWFiZ;X)m1IkgLE<R2]dUa`CG_5Ht<?d!c%*W<$
% )Gm@).'r:uRp:/P)R;(iHFqJ;e?lQinF<1cNF#$LgT]&:orE8g"-5#=&hC3!n[m"@P(9&=`a
% 9M*H^px
% EndExpression N 408 198 E 68 S 9fc0 R e206d33a
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 20.940001 10.655001 rectclip
0 0 20.940001 10.655001 rectclip
0 nxsetgray
1 1 scale
/Symbol findfont 10 scalefont
78
exch
defineuserobject
78 execuserobject setfont
6.47 2.915 moveto
(\() [0 0] xyshow
1 1 scale
1 1 scale
78 execuserobject setfont
16.17 2.91 moveto
(\)) [0 0] xyshow
1 1 scale
0 nxsetgray
/Times-Italic findfont 10 scalefont
79
exch
defineuserobject
79 execuserobject setfont
1 2.825 moveto
(h) [0 0 0 0] xyshow
78 execuserobject setfont
17.692223 2.825 moveto
() [0 0] xyshow
/Times-Roman findfont 10 scalefont
84
exch
defineuserobject
84 execuserobject setfont
10.47 2.825 moveto
(0) [0 0 2.000008 1.397868e-39] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
209.000000 199.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 19 11 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 16:48:41 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 19 11
%%Baseline: 1 1.825 17.73 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".R@);t=!!!E/JlF01(eK#D,X_XRS2ihA"VLe`-6WLgVDQ[
% K-Oh*sQ3\5X&jqDA/d.?W9aUk%J[c<T!&,[Tin#Mqf\EPQp`n<3FPaC8@nDhna*n=K8V8]^g
% &Pgi:u*;t8/K#JVW;G9-88oJL(Oh['1U:3`L@o]lIuWp?:"^H-3Y.BP0!\R-jBZK8iR_VIN&
% hI_^8*I1j!'<^(]8kCdPN3Cl[JBd&4p[B\PF5C3ORr`D%).aMnd:o=dkoi_<cVJGT=3fa%!K
% OT#7Xq'QFJ.AY=EIf1SS??u@;-Qac:n-.MWFiZ;X)m1IkgLE<R2]dUa`CG_5Ht<?d!c%*W<$
% )Gm@).'r:uRp:/P)R;(iHFqJ;e?lQinF<1cNF#$LgT]&:orE8g"-5#=&hC3!n[m"@P(9&=`a
% 9M*H^px
% EndExpression N 408 198 E 91 S 9f6b R 420cbf29
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 18.73 10.655001 rectclip
0 0 18.73 10.655001 rectclip
0 nxsetgray
1 1 scale
/Symbol findfont 10 scalefont
78
exch
defineuserobject
78 execuserobject setfont
6.47 2.915 moveto
(\() [0 0] xyshow
1 1 scale
1 1 scale
78 execuserobject setfont
13.96 2.91 moveto
(\)) [0 0] xyshow
1 1 scale
0 nxsetgray
/Times-Italic findfont 10 scalefont
79
exch
defineuserobject
79 execuserobject setfont
10.47 2.825 moveto
(lh) [-9.47 0 0 0 0 0] xyshow
78 execuserobject setfont
17.692223 2.825 moveto
() [0 0] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
173.000000 153.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 35 11 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 16:55:04 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 35 11
%%Baseline: 1 1.825 33.244446 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".R@)N+?!!!E7_BA(c+>AuLj@P.-O?%B4'FH)c:eX1]TM0'
% o;,/#l!%\^3YU,#41L183Q(&Hf"9NTgc2h<D&k0$!hQXOnBCNsA60PsqF2sH>a,g65@$1_&!
% 4;jU#cP='#*:He'hl`u7Z?9DM[q$LJgQEre;Q=PcK)GJ.)(?;#YbXU^a50F<)<u'U==-=LAj
% (R;MIo72JMBfKRHAaA(lTP#N-T^1EfJS8_"#&JFa3<T-0aEc^,>ahZ/V)1*2QPEf(3WUiGEU
% %s:_6Z"Jl>!.[t_Dt;9l^^A2[pXjfFh)=2<#SJoME(h*(@=dp56454ABLlNL#_!UUDkI@K^k
% r;q#f$t$U_pn*0a[tI$7U(Z,)f*M87?lfL?KG&6e!:"*,iKe=DX)d'Oc>Qb1B]ATHLJi*^fU
% o5QV/:[f@/hWRQM6MhU*oI11YZL6tQZ&Vb@:d&2D_@L=7q)5%*fUPo0U!<SmB?:$nF@g'US!
% 1`go#QOi)x
% EndExpression N 465 1d1 E 26 S bcbc R b256a881
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 34.244446 10.655001 rectclip
0 0 34.244446 10.655001 rectclip
0 nxsetgray
1 1 scale
/Symbol findfont 10 scalefont
78
exch
defineuserobject
78 execuserobject setfont
6.47 2.915 moveto
(\() [0 0] xyshow
1 1 scale
1 1 scale
78 execuserobject setfont
29.474445 2.91 moveto
(\)) [0 0] xyshow
1 1 scale
0 nxsetgray
/Times-Italic findfont 10 scalefont
79
exch
defineuserobject
79 execuserobject setfont
23.184444 2.825 moveto
(Llh) [-12.714444 0 -9.47 0 0 0 0 0] xyshow
78 execuserobject setfont
15.472222 2.825 moveto
(+) [0 0 0 0] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
0 nxsetgray
16 2 228 204 line
7.125226 244 206 arrow
grestore
0 0 0 setup
0 nxsetgray
22 0 210 159 line
0 232 159 arrow
grestore
0 0 0 setup
0 nxsetgray
0 61 261 253 line
grestore
0 0 0 setup
0 nxsetgray
1 83 249 215 line
grestore
0 0 0 setup
0 nxsetgray
0 -54 241 314 line
grestore
0 0 0 setup
218.000000 275.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 9 10 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 16:59:10 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 9 10
%%Baseline: 1 2.02 7.03 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".R+FsSf!!!E/![6f+&4q0<,X_XRS2ihA"VLe`-6WLgVDQ[
% K-Oh*sQ3\5X&jqDA/d.?W9aUk%J[c<T!&,[T+s@+go!B##L.r4?Dq]U:3Wr.o3JS8$-4j=b,
% tXIYq^'$'%Di*Z"/OUC8:]'_TaG$[)*eAE!$FbE7`3i]Jg#9tb]s:.Z!pIrG7sH\C9K&8!ER
% Aj`A^^D"D[Z>m@teT!SN,A:eB,*AIBrD_mmP.@!hW./X"He_^<VFljCs`(K-VoW'C@`KG'M6
% #`/HXJT(nr&WIA*-NJ,FO!+K'x
% EndExpression N 306 132 E 7c S 71c2 R 8e365d47
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 8.03 9.16 rectclip
0 0 8.03 9.16 rectclip
0 nxsetgray
/Symbol findfont 10 scalefont
78
exch
defineuserobject
78 execuserobject setfont
1 3.02 moveto
(h) [0 0 0 0] xyshow
%%Trailer
%%DocumentFonts: Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
0 nxsetgray
13 1 227 281 line
4.398835 240 282 arrow
grestore
0 0 0 setup
0 0 0 setup
247.000000 303.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 9 9 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 16:58:36 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 9 9
%%Baseline: 1 0 7.11 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".R+@-'&!!!E/![6gVV>tl3,X_XRS2ihA"VLe`-6WLgVDQ[
% K-Oh*sQ3\5X&jqDA/d.?W9aUk%J[c<T!&,[T+s@+go!B##L.r4?Dq]U:3Wr.o3JS8$-4j=b,
% tXIYq^'$'%Di*Z"/OUC8:]'_T`SIS)*eAE!$FbEL;MQGJg#9tb]s:.Z!pIrG7sH\C9K&8WWC
% 0f`A^^D"D[Z>m@teT!SN,A:eB,*AIBrD_mmP.@!hW./X"He_^<VFljCs`(K-VoW'C@`KG'M6
% #`/HXJT(nr&WIA*-NJ,FO!+K'x
% EndExpression N 306 132 E f4 S 72d6 R 46f55c08
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 8.110001 8.53 rectclip
0 0 8.110001 8.53 rectclip
0 nxsetgray
/Times-Italic findfont 10 scalefont
79
exch
defineuserobject
79 execuserobject setfont
1 1 moveto
(P) [0 0 -9.47 0] xyshow
%%Trailer
%%DocumentFonts: Times-Italic

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
0 nxsetgray
16 1 223 307 line
3.57644 239 308 arrow
grestore
0 0 0 setup
0 nxsetgray
16 1 262 307 line
183.576447 262 307 arrow
grestore
grestore
0 0 0 setup
0 nxsetgray
10 0 249 282 line
180 249 282 arrow
grestore
0 0 0 setup
0 nxsetgray
39 5 287 251 line
187.305969 287 251 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
19 -54 402 249 line
-70.617561 421 195 arrow
grestore
0 0 0 setup
265.000000 255.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 36 11 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 17:02:35 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 36 11
%%Baseline: 1 1.825 34.314445 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".RJA_L_!!"8]"9_1lSid;k!&A0sO@"L$!/a>R!L,$-1s/C
% B#Cn*e"h)@2@AXE`Ui2FuJ3`%0`&Rf+8YXkFaW!,slN$o42$fa3D=1Mh`0`8d!_h#b$ue*i)
% ?EaFa8jYBYC\3Kg5,Q?(boG%6dULK;`aHG`gQOD!gT+6!22tM"h8(uJ-q/75a2>1`t7,47*;
% `*dj>NpQ`]_hAfR;eli<G`E$hB[0e(eK#%X=1rDV`Ti:E,S]c4b+;o9ik0htSsO>LiUkD9]6
% I!S0G!<>^m]Y,+g!%Sn!*b4D:7iR!F'hAUX^r9[eKEAS`$8%qKF('U1(!'e`\q)%r!%82!+o
% jh-@U]<g\gRga.AY=EM(L(I@>+&gki#k@%8hm#F1f?C@BMJrPCr/jpmtf[J:[c)HOSG[!XT\
% ThZ?b2Vc!n#+;T\NnM/C%)dapX7i9F/&YB,;IOW3BA:P9uN%Y5D":0;@GmOK`N=c:@!-$qY+
% TMKBx
% EndExpression N 461 1cd E df S b74d R c1416c6b
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 35.314445 10.650001 rectclip
0 0 35.314445 10.650001 rectclip
0 nxsetgray
1 1 scale
/Symbol findfont 10 scalefont
78
exch
defineuserobject
78 execuserobject setfont
5.91 2.915 moveto
(\() [0 0] xyshow
1 1 scale
1 1 scale
78 execuserobject setfont
30.544445 2.91 moveto
(\)) [0 0] xyshow
1 1 scale
0 nxsetgray
/Times-Italic findfont 10 scalefont
79
exch
defineuserobject
79 execuserobject setfont
9.91 2.825 moveto
(nx) [-8.91 0 0 0 0 0] xyshow
78 execuserobject setfont
17.132221 2.825 moveto
(+) [0 0 0 0] xyshow
/Times-Roman findfont 10 scalefont
84
exch
defineuserobject
84 execuserobject setfont
24.844444 2.825 moveto
(1) [0 0 2.000008 1.397868e-39] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
51 21 358 49 line
22.380795 409 70 arrow
grestore
0 setgray
0.333333 setgray
0 0 0 setup
0 nxsetgray
27 -24 115 75 line
138.365234 115 75 arrow
grestore
0 0 0 setup
251.000000 12.000000 transform
gsave __NXbasematrix setmatrix itransform translate
0 0 24 9 rectclip

/__NXEPSSave save def /showpage {} def
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
/_NXcimage where{pop}{/_NXcimage /colorimage load def}ifelse /colorimage{dup 3 eq{true 2 index{1 index}{1}ifelse 7 add 1 roll _NXCalibratedImage}{_NXcimage}ifelse}def}if
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath count /__NXEPSOpCount exch def /__NXEPSDictCount countdictstack def
%%BeginDocument: 
%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: EquationBuilder
%%CreationDate: Thu Oct 29 17:06:37 1992
%%For: jos
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 24 9
%%Baseline: 1 0.09 22.044445 0
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
% EquationBuilder(TM) Expression
% +.\Jr(=:/*V[StRFQAYmdjEEA;1nuN+[co.OZ7L#cq3iKboMZEXJ@:d#6;^G;Td47dud<A3@
% 5%MGToUOR5&d`'TuEDU)B-tbR".R!(-f]!!!iQ"9_%hSid;k!&A0sO@"L$!/a>R!L,$-1s/C
% B#Cn*e"h)@2@AXE`Ui2FuJ3`%0`&Rf+8YXkFaW!,slN$o42$fa3D=1Mh`0`8d!_h#b$ue*iR
% K6<qbQ-(FYC\3Kg5,Q?(boG%6dULK;`aHG`gQOD!gT+6!22tM"h8(uJ-q/75a2?<`fOgVC##
% f8e+sP&fWo31,*fb?n):-u7pKL#'6HRIo25gdq`:G;^nDU6SpNDH;QE(]e*D9M*BA2tYWhEb
% nP8T%NE=t`kNS6<-jZKRa&%14OFRAc/O2`CD5bs9'SqJ%L3<u!=Q(5O,XFp;Cnre?Fp`J-Tb
% )^9!D4I8O=*SX6%AsXMu_@P#ltWt&HjH]E8lp%x
% EndExpression N 376 178 E 90 S 9a82 R 84f2873d
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%EndSetup
0 0 23.044445 8.62 rectclip
0 0 23.044445 8.62 rectclip
0 nxsetgray
/Times-Italic findfont 10 scalefont
79
exch
defineuserobject
79 execuserobject setfont
15.934444 1.09 moveto
(Pn) [-14.934444 0 0 0 0 0] xyshow
/Symbol findfont 10 scalefont
78
exch
defineuserobject
78 execuserobject setfont
8.222222 1.09 moveto
(+) [0 0 0 0] xyshow
%%Trailer
%%DocumentFonts: Times-Italic
%%+ Symbol

%%EndDocument
count __NXEPSOpCount sub {pop} repeat countdictstack __NXEPSDictCount sub {end} repeat __NXEPSSave restore
grestore
grestore
0 0 0 setup
0 0 0 setup
gsave
89 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 192] concat
89 execuserobject setfont
0 nxsetgray
417 99 moveto (Time) show
grestore
grestore
0 0 0 setup
0 nxsetgray
11 0 440 96 line
0 451 96 arrow
grestore
grestore
0 setgray
0.333333 setgray
gsave
0 0 540 324 rectclip
[1 0 0 -1 0 324] concat
grestore
grestore
%%Trailer
%%DocumentFonts: Times-Roman
%%+ Times-Roman
%%EndDocument
 @endspecial 325 2729 a Fb(Figure)22 b(7.)f Fk(Illustration)c(of)h(w)n(a)n(v)
n(eforms)f(and)h(parameters)c(in)19 b(the)e(in)n(terp)r(olator.)0
2859 y Fj(When)26 b Fh(\032)20 b(<)h Fk(1)p Fj(,)27 b(more)e(input)h(samples)
f(are)h(required)f(to)h(reac)n(h)g(the)f(end)g(of)i(the)e(\014lter)h(table,)0
2936 y(th)n(us)i(preserving)g(the)f(\014ltering)i(qualit)n(y)-6
b(.)49 b(The)28 b(n)n(um)n(b)r(er)f(of)i(m)n(ultiply-adds)g(p)r(er)e(second)g
(is)0 3013 y(appro)n(ximately)e Fk(\(2)p Fh(N)534 3021 y Ff(z)573
3013 y Fk(+)14 b(1\))9 b Fh(max)o Fg(f)p Fh(F)862 3021 y Ff(s)885
3013 y Fh(;)g(F)953 2993 y Fd(0)945 3027 y Ff(s)969 3013 y
Fg(g)p Fj(.)37 b(Th)n(us)25 b(the)f(higher)h(sampling)g(rate)g(determines)e
(the)0 3090 y(w)n(ork)c(rate.)28 b(Note)18 b(that)h(for)g Fh(\032)c(<)g
Fk(1)k Fj(there)e(m)n(ust)h(b)r(e)g Fg(d)p Fh(N)1348 3098 y
Ff(z)1373 3090 y Fh(F)1409 3098 y Ff(s)1433 3090 y Fh(=F)1505
3070 y Fd(0)1497 3104 y Ff(s)1520 3090 y Fg(e)g Fj(extra)g(input)h(samples)f
(a)n(v)l(ailable)0 3167 y(b)r(efore)25 b(the)h(initial)h(con)n(v)n(ersion)f
(time)g(and)g(after)f(the)h(\014nal)g(con)n(v)n(ersion)g(time)f(in)i(the)e
(input)0 3244 y(bu\013er.)56 b(As)31 b Fh(\032t)399 3252 y
Fc(1)423 3244 y Fk(0)p Fj(,)j(the)c(required)g(extra)h(input)g(data)g(b)r
(ecomes)e(in\014nite,)34 b(and)d(some)f(limit)0 3321 y(m)n(ust)f(b)r(e)f(c)n
(hosen,)j(th)n(us)f(setting)f(a)g(minim)n(um)g(supp)r(orted)f
Fh(\032)p Fj(.)51 b(F)-6 b(or)31 b Fh(\032)25 b Fg(\025)g Fk(1)p
Fj(,)31 b(only)f Fh(N)2195 3329 y Ff(z)2250 3321 y Fj(extra)0
3398 y(input)25 b(samples)f(are)g(required)h(on)f(the)g(left)h(and)g(righ)n
(t)g(of)g(the)f(data)h(to)f(b)r(e)g(resampled,)h(and)1186 3533
y Fk(7)p eop
%%Page: 8 8
7 bop 0 109 a Fj(the)25 b(upp)r(er)f(b)r(ound)h(for)h Fh(\032)f
Fj(is)h(determined)d(only)j(b)n(y)f(the)g(\014xed-p)r(oin)n(t)g(n)n(um)n(b)r
(er)f(format,)i(viz.,)0 184 y Fh(\032)29 194 y Fj(max)170 184
y Fk(=)16 b(2)257 164 y Ff(n)284 170 y Fa(l)300 164 y Fc(+)p
Ff(n)361 170 y Fa(\021)388 184 y Fj(.)0 282 y(As)22 b(sho)n(wn)g(b)r(elo)n
(w,)g(if)g Fh(n)598 290 y Ff(c)643 282 y Fj(denotes)e(the)h(w)n(ord-length)h
(of)g(the)f(stored)g(impulse-resp)r(onse)g(sam-)0 357 y(ples,)j(then)f(one)g
(ma)n(y)h(c)n(ho)r(ose)f Fh(n)820 365 y Ff(l)854 357 y Fk(=)18
b(1)12 b(+)h Fh(n)1044 365 y Ff(c)1067 357 y Fh(=)p Fk(2)p
Fj(,)24 b(and)f Fh(n)1328 365 y Ff(\021)1373 357 y Fk(=)17
b Fh(n)1466 365 y Ff(c)1489 357 y Fh(=)p Fk(2)23 b Fj(to)h(obtain)g
Fh(n)1892 365 y Ff(c)1927 357 y Fg(\000)14 b Fk(1)23 b Fj(e\013ectiv)n(e)f
(bits)0 432 y(of)h(precision)f(in)g(the)g(in)n(terp)r(olated)g(impulse)g
(resp)r(onse.)0 530 y(Note)i(that)g(rational)h(con)n(v)n(ersion)g(factors)g
(of)f(the)g(form)g Fh(\032)18 b Fk(=)h Fh(L=)m(M)6 b Fj(,)24
b(where)f Fh(L)18 b Fk(=)h(2)2070 510 y Ff(n)2097 516 y Fa(l)2140
530 y Fj(and)24 b Fh(M)30 b Fj(is)0 605 y(an)d(arbitrary)g(p)r(ositiv)n(e)g
(in)n(teger,)h(do)e(not)h(use)f(the)f(linear)i(in)n(terp)r(olation)h(feature)
e(\(b)r(ecause)0 680 y Fh(\021)18 b Fg(\021)e Fk(0)p Fj(\).)29
b(In)22 b(this)h(case)f(our)g(metho)r(d)f(reduces)g(to)h(the)f(normal)i(t)n
(yp)r(e)e(of)i(bandlimited)f(in)n(terp)r(o-)0 755 y(lator)k(\(Cro)r(c)n
(hiere)f(and)g(Rabiner)h(1983\).)40 b(With)26 b(the)f(a)n(v)l(ailabilit)n(y)k
(of)d(in)n(terp)r(olated)f(lo)r(okup,)0 830 y(ho)n(w)n(ev)n(er,)g(the)e
(range)h(of)h(con)n(v)n(ersion)f(factors)h(is)g(b)r(o)r(osted)e(to)h(the)g
(order)g(of)g Fk(2)1996 810 y Ff(n)2023 816 y Fa(l)2039 810
y Fc(+)p Ff(n)2100 816 y Fa(\021)2128 830 y Fh(=)m(M)6 b Fj(.)35
b(E.g.,)0 906 y(for)23 b Fh(\032)15 b Fg(\031)g Fk(1)p Fj(,)23
b Fh(n)306 914 y Ff(l)338 906 y Fk(=)16 b(9)p Fh(;)9 b(n)482
914 y Ff(\021)525 906 y Fk(=)15 b(8)p Fj(,)23 b(this)f(is)h(ab)r(out)f
Fk(5)p Fh(:)p Fk(1)g Fj(decimal)g(digits)h(of)g(accuracy)e(in)h(the)g(con)n
(v)n(ersion)0 981 y(factor)f Fh(\032)p Fj(.)29 b(Without)21
b(in)n(terp)r(olation,)i(the)d(n)n(um)n(b)r(er)g(of)h(signi\014can)n(t)h
(\014gures)e(in)i Fh(\032)e Fj(is)i(only)f(ab)r(out)0 1056
y Fk(2)p Fh(:)p Fk(7)p Fj(.)0 1154 y(The)k(n)n(um)n(b)r(er)g
Fh(N)430 1162 y Ff(z)481 1154 y Fj(of)i(zero-crossings)f(stored)f(in)h(the)f
(table)h(is)g(an)g(indep)r(enden)n(t)e(design)i(pa-)0 1229
y(rameter.)35 b(F)-6 b(or)25 b(example,)f(w)n(e)g(use)g Fh(N)943
1237 y Ff(z)987 1229 y Fk(=)18 b(13)24 b Fj(in)g(a)h(system)e(designed)h(for)
h(audio)g(qualit)n(y)g(with)0 1304 y Fk(20)p Fj(\045)d(o)n(v)n(ersampling.)0
1402 y(F)-6 b(or)31 b(a)f(giv)n(en)h(qualit)n(y)g(sp)r(eci\014cation)f(in)g
(terms)f(of)i(aliasing)h(rejection,)g(a)e(trade-o\013)g(exists)0
1477 y(b)r(et)n(w)n(een)24 b Fh(N)304 1485 y Ff(z)355 1477
y Fj(and)i(sacri\014ced)e(bandwidth.)40 b(The)25 b(lost)h(bandwidth)f(is)h
(due)f(to)h(the)e(so-called)0 1552 y(\\transition)h(band")g(of)f(the)g(lo)n
(wpass)h(\014lter)f(\(Rabiner)g(and)g(Gold)h(1975\).)37 b(In)24
b(general,)h(for)g(a)0 1627 y(giv)n(en)j(stop-band)g(sp)r(eci\014cation)g
(\(suc)n(h)f(as)h(\\80)h(dB)e(atten)n(uation"\),)j(lo)n(wpass)f(\014lters)f
(need)0 1702 y(appro)n(ximately)33 b(t)n(wice)f(as)h(man)n(y)g(m)n
(ultiply-adds)g(p)r(er)f(sample)g(for)i(eac)n(h)e(halving)i(of)f(the)0
1777 y(transition)23 b(band)f(width.)0 1875 y(It)28 b(is)h(w)n(orth)g(noting)
f(that)h(a)f(giv)n(en)h(p)r(ercen)n(tage)d(increase)i(in)h(the)e(original)j
(sampling)f(rate)0 1950 y(\(\\o)n(v)n(ersampling"\))22 b(giv)n(es)f(a)g
(larger)g(p)r(ercen)n(tage)e(sa)n(vings)j(in)f(\014lter)f(computation)g
(time,)h(for)g(a)0 2025 y(giv)n(en)j(qualit)n(y)i(sp)r(eci\014cation,)e(b)r
(ecause)f(the)g(added)h(bandwidth)g(is)g(a)h(larger)f(p)r(ercen)n(tage)e(of)0
2101 y(the)c(\014lter)g(transition)h(bandwidth)g(than)f(it)h(is)g(of)g(the)e
(original)k(sampling)e(rate.)28 b(F)-6 b(or)20 b(example,)0
2176 y(giv)n(en)31 b(a)g(cut-o\013)g(frequency)e(of)j Fk(20)e
Fj(kHz,)j(\(ideal)e(for)h(audio)f(w)n(ork\),)j(the)c(transition)i(band)0
2251 y(a)n(v)l(ailable)27 b(with)f(a)f(sampling)h(rate)f(of)g
Fk(44)g Fj(kHz)g(is)g(ab)r(out)g Fk(2)g Fj(kHz,)h(while)g(a)f
Fk(48)g Fj(kHz)f(sampling)0 2326 y(rate)19 b(pro)n(vides)i(a)f
Fk(4)f Fj(kHz)g(transition)i(band.)29 b(Th)n(us,)21 b(a)f Fk(10)p
Fj(\045)g(increase)f(in)h(sampling)g(rate)g Fi(halves)0 2401
y Fj(the)h(w)n(ork)i(p)r(er)e(sample)h(in)h(the)e(digital)j(lo)n(wpass)f
(\014lter.)0 2522 y Fl(5.)j(Quan)n(tization)h(Issues)0 2620
y Fj(In)j(this)g(section,)i(w)n(e)d(in)n(v)n(estigate)h(the)f(requiremen)n
(ts)f(on)i(the)f(sampling)i(densit)n(y)e Fh(L)d Fk(=)g(2)2354
2600 y Ff(n)2381 2606 y Fa(l)0 2695 y Fj(of)i(the)f(lo)n(wpass-\014lter)i
(impulse)f(resp)r(onse,)h(and)f(the)f(n)n(um)n(b)r(er)f(of)i(bits)h
Fh(n)1904 2703 y Ff(\021)1958 2695 y Fj(required)f(in)g(the)0
2770 y(in)n(terp)r(olation)h(factor)e Fh(\021)r Fj(.)47 b(These)27
b(quan)n(tities)h(are)f(determined)f(b)n(y)i(computing)f(the)f(w)n(orst-)0
2845 y(case)c(error)f(and)i(comparing)f(it)g(to)g(the)g(\014lter)f(co)r
(e\016cien)n(t)g(quan)n(tization)i(error.)0 2966 y Fl(Choice)j(of)g(T)-6
b(able)26 b(Size)0 3064 y Fj(It)19 b(is)g(desirable)g(that)g(the)f(stored)g
(\014lter)h(impulse)g(resp)r(onse)f(b)r(e)g(sampled)g(su\016cien)n(tly)h
(densely)0 3139 y(so)f(that)g(in)n(terp)r(olating)g(linearly)h(b)r(et)n(w)n
(een)d(samples)i(do)r(es)g(not)f(in)n(tro)r(duce)g(error)h(greater)f(than)0
3214 y(the)24 b(quan)n(tization)i(error.)37 b(W)-6 b(e)25 b(will)i(sho)n(w)e
(that)f(this)i(condition)f(is)g(satis\014ed)g(whenev)n(er)f(the)0
3289 y(\014lter)k(table)h(con)n(tains)g(at)f(least)h Fh(L)24
b Fk(=)g(2)1011 3269 y Fc(1+)p Ff(n)1094 3275 y Fa(c)1115 3269
y Ff(=)p Fc(2)1191 3289 y Fj(en)n(tries)k(p)r(er)g(zero-crossing,)j(where)c
Fh(n)2183 3297 y Ff(c)2235 3289 y Fj(is)i(the)0 3364 y(n)n(um)n(b)r(er)21
b(of)i(bits)f(allo)r(cated)g(to)g(eac)n(h)g(table)g(en)n(try)-6
b(.)1186 3533 y Fk(8)p eop
%%Page: 9 9
8 bop 0 136 a Fj(Linear)22 b(In)n(terp)r(olation)g(Error)h(Bound)p
0 162 978 3 v 0 282 a(Let)h Fh(h)p Fk(\()p Fh(t)p Fk(\))g Fj(denote)g(the)g
(lo)n(wpass)j(\014lter)d(impulse)h(resp)r(onse,)h(and)f(assume)f(it)i(is)f(t)
n(wice)g(con)n(tin-)0 359 y(uously)k(di\013eren)n(tiable)g(for)g(all)h
Fh(t)p Fj(.)50 b(By)29 b(T)-6 b(a)n(ylor's)31 b(theorem)c(\(Goldstein)i
(1967,)j(p.)d(119\),)i(w)n(e)0 437 y(ha)n(v)n(e)646 529 y Fh(h)p
Fk(\()p Fh(t)720 537 y Fc(0)757 529 y Fk(+)12 b Fh(\021)r Fk(\))j(=)h
Fh(h)p Fk(\()p Fh(t)1011 537 y Fc(0)1035 529 y Fk(\))c(+)g
Fh(\021)r(h)1185 506 y Fd(0)1201 529 y Fk(\()p Fh(t)1243 537
y Fc(0)1267 529 y Fk(\))g(+)1363 491 y(1)p 1363 516 28 3 v
1363 567 a(2)1398 529 y Fh(\021)1427 506 y Fc(2)1452 529 y
Fh(h)1484 506 y Fd(00)1512 529 y Fk(\()p Fh(t)1554 537 y Fc(0)1591
529 y Fk(+)g Fh(\025\021)r Fk(\))d Fh(;)549 b Fk(\()p Fj(4)o
Fk(\))0 677 y Fj(for)22 b(some)f Fh(\025)16 b Fg(2)f Fk([0)p
Fh(;)9 b Fk(1])p Fj(,)23 b(where)d Fh(h)741 657 y Fd(0)757
677 y Fk(\()p Fh(t)799 685 y Fc(0)823 677 y Fk(\))h Fj(denotes)g(the)g(time)f
(deriv)l(ativ)n(e)i(of)g Fh(h)p Fk(\()p Fh(t)p Fk(\))f Fj(ev)l(aluated)g(at)h
Fh(t)15 b Fk(=)h Fh(t)2357 685 y Fc(0)2382 677 y Fj(,)0 755
y(and)22 b Fh(h)161 735 y Fd(00)189 755 y Fk(\()p Fh(t)231
763 y Fc(0)256 755 y Fk(\))f Fj(is)i(the)f(second)f(deriv)l(ativ)n(e)h(at)h
Fh(t)1101 763 y Fc(0)1125 755 y Fj(.)0 875 y(The)f(linear)g(in)n(terp)r
(olation)h(error)f(is)h(de\014ned)e(as)975 1019 y Fk(~)975
1033 y Fh(h)o Fk(\()p Fh(t)p Fk(\))1088 1002 y Fc(\001)1085
1033 y Fk(=)15 b Fh(h)p Fk(\()p Fh(t)p Fk(\))d Fg(\000)1306
1019 y Fk(^)1306 1033 y Fh(h)p Fk(\()p Fh(t)p Fk(\))d Fh(;)898
b Fk(\()p Fj(5)o Fk(\))0 1192 y Fj(where)21 b Fh(t)15 b Fk(=)h
Fh(t)306 1200 y Fc(0)343 1192 y Fk(+)c Fh(\021)r Fj(,)23 b
Fh(t)488 1200 y Fc(0)529 1192 y Fk(=)15 b Fg(b)p Fh(t)p Fg(c)p
Fj(,)22 b Fh(\021)c Fk(=)d Fh(t)d Fg(\000)h Fh(t)908 1200 y
Fc(0)932 1192 y Fj(,)23 b(and)1103 1177 y Fk(^)1102 1192 y
Fh(h)p Fk(\()p Fh(t)p Fk(\))e Fj(is)i(the)e(in)n(terp)r(olated)h(v)l(alue)h
(giv)n(en)f(b)n(y)921 1336 y Fk(^)920 1350 y Fh(h)p Fk(\()p
Fh(t)p Fk(\))1034 1319 y Fc(\001)1031 1350 y Fk(=)p 1089 1320
30 3 v 15 w Fh(\021)r(h)p Fk(\()p Fh(t)1192 1358 y Fc(0)1217
1350 y Fk(\))12 b(+)g Fh(\021)r(h)p Fk(\()p Fh(t)1409 1358
y Fc(1)1434 1350 y Fk(\))d Fh(;)822 b Fk(\()p Fj(6)o Fk(\))0
1509 y Fj(where)p 192 1478 V 21 w Fh(\021)240 1477 y Fc(\001)237
1509 y Fk(=)16 b(1)c Fg(\000)g Fh(\021)25 b Fj(and)d Fh(t)592
1517 y Fc(1)636 1477 y(\001)632 1509 y Fk(=)16 b Fh(t)711 1517
y Fc(0)748 1509 y Fk(+)c(1)p Fj(.)30 b(Th)n(us)22 b Fh(t)1067
1517 y Fc(0)1114 1509 y Fj(and)h Fh(t)1264 1517 y Fc(1)1311
1509 y Fj(are)f(successiv)n(e)f(time)h(instan)n(ts)g(for)h(whic)n(h)0
1586 y(samples)28 b(of)g Fh(h)p Fk(\()p Fh(t)p Fk(\))f Fj(are)g(a)n(v)l
(ailable,)32 b(and)c Fh(\021)d Fg(2)f Fk([0)p Fh(;)9 b Fk(1\))27
b Fj(is)i(the)e(linear)h(in)n(terp)r(olation)h(factor.)47 b(\(W)-6
b(e)0 1664 y(ignore)22 b(errors)h(in)f(the)f(linear)i(in)n(terp)r(olation)g
(itself)g(at)f(this)h(p)r(oin)n(t.\))0 1784 y(Expressing)g
Fh(h)p Fk(\()p Fh(t)p Fk(\))e Fj(as)775 1876 y Fh(h)p Fk(\()p
Fh(t)849 1884 y Fc(0)885 1876 y Fk(+)12 b Fh(\021)r Fk(\))k(=)p
1065 1845 V 15 w Fh(\021)s(h)p Fk(\()p Fh(t)1169 1884 y Fc(0)1205
1876 y Fk(+)d Fh(\021)r Fk(\))f(+)g Fh(\021)r(h)p Fk(\()p Fh(t)1482
1884 y Fc(1)1519 1876 y Fg(\000)p 1575 1845 V 13 w Fh(\021)r
Fk(\))698 b(\()p Fj(7)o Fk(\))0 2007 y Fj(applying)23 b(\(4\))f(to)g(b)r(oth)
g(terms)f(on)i(the)e(righ)n(t-hand)i(side,)f(and)g(subtracting)h(\(6\))f(giv)
n(es)550 2181 y Fk(~)549 2195 y Fh(h)p Fk(\()p Fh(t)623 2203
y Fc(0)660 2195 y Fk(+)12 b Fh(\021)r Fk(\))k(=)f Fh(\021)p
869 2165 V 2 w(\021)908 2117 y Fe(\024)937 2195 y Fh(h)969
2173 y Fd(0)985 2195 y Fk(\()p Fh(t)1027 2203 y Fc(0)1051 2195
y Fk(\))d Fg(\000)g Fh(h)1172 2173 y Fd(0)1188 2195 y Fk(\()p
Fh(t)1230 2203 y Fc(1)1254 2195 y Fk(\))g(+)1350 2158 y Fh(\021)r(h)1411
2138 y Fd(00)1440 2158 y Fk(\()p Fh(\030)1486 2166 y Fc(0)1510
2158 y Fk(\))g(+)p 1599 2128 V 12 w Fh(\021)s(h)1661 2138 y
Fd(00)1689 2158 y Fk(\()p Fh(\030)1735 2166 y Fc(1)1759 2158
y Fk(\))p 1350 2183 432 3 v 1552 2233 a(2)1788 2117 y Fe(\025)1835
2195 y Fh(;)474 b Fk(\()p Fj(8)o Fk(\))0 2386 y Fj(where)21
b(b)r(oth)h Fh(\030)373 2394 y Fc(0)420 2386 y Fj(and)g Fh(\030)573
2394 y Fc(1)620 2386 y Fj(are)g(in)h Fk([)p Fh(t)844 2394 y
Fc(0)869 2386 y Fh(;)9 b(t)913 2394 y Fc(1)938 2386 y Fk(])p
Fj(.)31 b(De\014ning)988 2545 y Fh(M)1042 2553 y Fc(2)1085
2513 y(\001)1081 2545 y Fk(=)16 b Fh(max)1186 2578 y Ff(t)1259
2545 y Fg(j)p Fh(h)1306 2522 y Fd(00)1334 2545 y Fk(\()p Fh(t)p
Fk(\))p Fg(j)911 b Fk(\()p Fj(9)o Fk(\))0 2722 y Fj(and)22
b(noting)h(that)f Fh(h)512 2702 y Fd(0)527 2722 y Fk(\()p Fh(t)569
2730 y Fc(1)593 2722 y Fk(\))15 b(=)h Fh(h)721 2702 y Fd(0)736
2722 y Fk(\()p Fh(t)778 2730 y Fc(0)803 2722 y Fk(\))11 b(+)i
Fh(h)924 2702 y Fd(00)952 2722 y Fk(\()p Fh(t)994 2730 y Fc(0)1031
2722 y Fk(+)f Fh(\025)p Fk(\))22 b Fj(for)g(some)g Fh(\025)16
b Fg(2)f Fk([0)p Fh(;)9 b Fk(1])23 b Fj(whic)n(h)f(implies)927
2880 y Fg(j)p Fh(h)974 2857 y Fd(0)990 2880 y Fk(\()p Fh(t)1032
2888 y Fc(0)1056 2880 y Fk(\))12 b Fg(\000)g Fh(h)1177 2857
y Fd(0)1193 2880 y Fk(\()p Fh(t)1235 2888 y Fc(1)1259 2880
y Fk(\))p Fg(j)j(\024)h Fh(M)1424 2888 y Fc(2)1458 2880 y Fh(;)818
b Fk(\()p Fj(10)o Fk(\))0 3039 y Fj(w)n(e)22 b(obtain)g(the)g(upp)r(er)f(b)r
(ound)745 3160 y Fe(\014)745 3194 y(\014)745 3227 y(\014)764
3209 y Fk(~)763 3224 y Fh(h)p Fk(\()p Fh(t)837 3232 y Fc(0)874
3224 y Fk(+)12 b Fh(\021)r Fk(\))980 3160 y Fe(\014)980 3194
y(\014)980 3227 y(\014)1014 3224 y Fg(\024)k Fh(\021)p 1102
3194 30 3 v 2 w(\021)1141 3146 y Fe(\024)1170 3224 y Fh(M)1224
3232 y Fc(2)1261 3224 y Fk(+)1323 3187 y Fh(M)1377 3195 y Fc(2)p
1323 3211 79 3 v 1348 3262 a Fk(2)1408 3146 y Fe(\025)1452
3224 y Fg(\024)1518 3187 y Fk(3)p 1518 3211 28 3 v 1518 3262
a(8)1552 3224 y Fh(M)1606 3232 y Fc(2)1640 3224 y Fh(:)613
b Fk(\()p Fj(11)p Fk(\))1186 3533 y(9)p eop
%%Page: 10 10
9 bop 0 102 a Fj(Application)23 b(to)f(the)f(Ideal)i(Lo)n(wpass)f(Filter)p
0 128 1147 3 v 0 232 a(F)-6 b(or)23 b(the)f(ideal)g(lo)n(wpass)i(\014lter,)e
(w)n(e)g(ha)n(v)n(e)531 400 y Fh(h)p Fk(\()p Fh(t)p Fk(\))15
b(=)g Fj(sinc)p Fk(\()p Fh(!)867 408 y Ff(L)900 400 y Fh(t=\031)r
Fk(\))1022 369 y Fc(\001)1018 400 y Fk(=)1083 363 y Fj(sin)q
Fk(\()p Fh(!)1221 371 y Ff(L)1254 363 y Fh(t)p Fk(\))p 1083
388 213 3 v 1146 438 a Fh(!)1180 446 y Ff(L)1213 438 y Fh(t)1318
400 y Fk(=)1403 363 y(1)p 1383 388 68 3 v 1383 438 a Fh(!)1417
446 y Ff(L)1466 325 y Fe(Z)1521 339 y Ff(!)1549 345 y Fa(L)1497
451 y Fc(0)1590 400 y Fj(cos)p Fk(\()p Fh(!)r(t)p Fk(\))p Fh(d!)c(;)400
b Fk(\()p Fj(12)p Fk(\))0 571 y Fj(where)23 b Fh(!)228 579
y Ff(L)280 571 y Fk(=)18 b Fh(\031)r(=L)p Fj(,)24 b(and)g Fh(L)18
b Fk(=)g(2)759 550 y Ff(n)786 556 y Fa(l)829 571 y Fj(is)25
b(the)f(n)n(um)n(b)r(er)f(of)h(table)g(en)n(tries)g(p)r(er)f(zero-crossing.)
37 b(Note)0 648 y(that)21 b(the)g(righ)n(tmost)g(form)h(in)g(\(12\))f(is)h
(simply)g(the)f(in)n(v)n(erse)g(F)-6 b(ourier)22 b(transform)g(of)g(the)e
(ideal)0 725 y(lo)n(wpass-\014lter)h(frequency)d(resp)r(onse.)29
b(Twice)19 b(di\013eren)n(tiating)g(with)h(resp)r(ect)e(to)i
Fh(t)p Fj(,)g(w)n(e)g(obtain)803 889 y Fh(h)835 867 y Fd(00)863
889 y Fk(\()p Fh(t)p Fk(\))15 b(=)g Fg(\000)1070 852 y Fk(1)p
1050 877 V 1050 927 a Fh(!)1084 935 y Ff(L)1133 814 y Fe(Z)1188
828 y Ff(!)1216 834 y Fa(L)1164 940 y Fc(0)1258 889 y Fh(!)1294
867 y Fc(2)1319 889 y Fj(cos)p Fk(\()p Fh(!)r(t)p Fk(\))p Fh(d!)c(;)671
b Fk(\()p Fj(13)p Fk(\))0 1059 y Fj(from)22 b(whic)n(h)g(it)g(follo)n(ws)j
(that)c(the)h(maxim)n(um)f(magnitude)g(is)982 1228 y Fh(M)1036
1236 y Fc(2)1076 1228 y Fk(=)1141 1191 y Fh(!)1177 1171 y Fc(2)1175
1206 y Ff(L)p 1141 1216 V 1161 1266 a Fk(3)1231 1228 y(=)1312
1191 y Fh(\031)1346 1171 y Fc(2)p 1296 1216 91 3 v 1296 1266
a Fk(3)p Fh(L)1362 1250 y Fc(2)1402 1228 y Fh(:)851 b Fk(\()p
Fj(14)p Fk(\))0 1390 y Fj(Note)19 b(that)h(this)g(b)r(ound)g(is)h(attained)e
(at)h Fh(t)c Fk(=)f(0)p Fj(.)29 b(Substituting)20 b(\(14\))g(in)n(to)h
(\(11\),)g(w)n(e)e(obtain)i(the)0 1467 y(error)h(b)r(ound)680
1497 y Fe(\014)680 1530 y(\014)680 1563 y(\014)699 1546 y Fk(~)699
1560 y Fh(h)p Fk(\()p Fh(t)773 1568 y Fc(0)809 1560 y Fk(+)13
b Fh(\021)r Fk(\))916 1497 y Fe(\014)916 1530 y(\014)916 1563
y(\014)950 1560 y Fg(\024)1031 1523 y Fh(\031)1065 1503 y Fc(2)p
1015 1548 V 1015 1598 a Fk(8)p Fh(L)1081 1582 y Fc(2)1127 1560
y Fh(<)1192 1523 y Fk(1)p Fh(:)p Fk(234)p 1192 1548 127 3 v
1224 1598 a Fh(L)1262 1582 y Fc(2)1340 1560 y Fk(=)i(1)p Fh(:)p
Fk(234)d Fg(\001)g Fk(2)1592 1537 y Fd(\000)p Fc(2)p Ff(n)1676
1543 y Fa(l)1704 1560 y Fh(:)549 b Fk(\()p Fj(15)p Fk(\))0
1692 y Fj(Th)n(us)28 b(for)h(the)e(ideal)h(lo)n(wpass)h(\014lter)f
Fh(h)p Fk(\()p Fh(t)p Fk(\))22 b(=)i Fj(sinc)p Fk(\()p Fh(t=L)p
Fk(\))p Fj(,)k(the)f(p)r(oin)n(t)n(wise)i(error)f(in)g(the)f(in)n(ter-)0
1769 y(p)r(olated)f(lo)r(okup)h(of)f Fh(h)p Fk(\()p Fh(t)p
Fk(\))f Fj(is)i(b)r(ounded)e(b)n(y)h Fk(1)p Fh(:)p Fk(234)p
Fh(=L)1299 1749 y Fc(2)1322 1769 y Fj(.)42 b(This)27 b(means)e(that)h
Fh(n)1926 1777 y Ff(l)1969 1769 y Fj(m)n(ust)g(b)r(e)f(ab)r(out)0
1846 y(half)j(the)f(co)r(e\016cien)n(t)f(w)n(ord-length)i Fh(n)977
1854 y Ff(c)1027 1846 y Fj(used)f(for)g(the)g(\014lter)g(co)r(e\016cien)n
(ts.)45 b(F)-6 b(or)28 b(example,)g(if)0 1924 y Fh(h)p Fk(\()p
Fh(t)p Fk(\))e Fj(is)h(quan)n(tized)f(to)g Fk(16)g Fj(bits,)j
Fh(L)d Fj(m)n(ust)g(b)r(e)g(of)h(the)f(order)g(of)h Fk(2)1634
1903 y Fc(16)p Ff(=)p Fc(2)1747 1924 y Fk(=)22 b(256)p Fj(.)42
b(In)26 b(con)n(trast,)i(w)n(e)0 2001 y(will)c(sho)n(w)g(that)f(without)g
(linear)h(in)n(terp)r(olation,)g Fh(n)1318 2009 y Ff(l)1358
2001 y Fj(m)n(ust)f(increase)f(prop)r(ortional)j(to)e Fh(n)2275
2009 y Ff(c)2320 2001 y Fj(for)0 2078 y Fh(n)33 2086 y Ff(c)56
2078 y Fj(-bit)e(samples)g(of)h Fh(h)p Fk(\()p Fh(t)p Fk(\))p
Fj(.)28 b(In)21 b(the)g Fk(16)p Fj(-bit)f(case,)i(this)f(giv)n(es)h
Fh(L)15 b Fg(\030)g Fk(2)1607 2058 y Fc(16)1669 2078 y Fk(=)h(65536)p
Fj(.)28 b(The)20 b(use)h(of)g(linear)0 2155 y(in)n(terp)r(olation)c(of)f(the)
f(\014lter)h(co)r(e\016cien)n(ts)f(reduces)f(the)h(memory)f(requiremen)n(ts)h
(considerably)-6 b(.)0 2259 y(The)18 b(error)h(b)r(ounds)g(obtained)g(for)h
(the)e(ideal)i(lo)n(wpass)g(\014lter)f(are)f(t)n(ypically)j(accurate)c(also)j
(for)0 2336 y(lo)n(wpass)h(\014lters)f(used)f(in)h(practice.)28
b(This)20 b(is)h(b)r(ecause)d(the)h(error)g(b)r(ound)h(is)g(a)g(function)g
(of)g Fh(M)2357 2344 y Fc(2)2382 2336 y Fj(,)0 2413 y(the)f(maxim)n(um)g
(curv)l(ature)g(of)h(the)f(impulse)h(resp)r(onse)f Fh(h)p Fk(\()p
Fh(t)p Fk(\))p Fj(,)h(and)g(most)f(lo)n(wpass)i(designs)g(will)0
2490 y(ha)n(v)n(e)27 b(a)g(v)l(alue)g(of)g Fh(M)528 2498 y
Fc(2)579 2490 y Fj(v)n(ery)f(close)h(to)g(that)f(of)h(the)f(ideal)h(case.)43
b(The)26 b(maxim)n(um)g(curv)l(ature)0 2567 y(is)c(determined)c(primarily)k
(b)n(y)f(the)f(bandwidth)h(of)h(the)e(\014lter)g(since,)h(generalizing)h
(equations)0 2644 y(\(12\))g(and)g(\(13\),)860 2750 y Fh(h)892
2727 y Fd(00)920 2750 y Fk(\(0\))15 b(=)g Fg(\000)1118 2712
y Fk(1)p 1115 2737 34 3 v 1115 2788 a Fh(\031)1164 2674 y Fe(Z)1219
2688 y Ff(\031)1195 2800 y Fc(0)1259 2750 y Fh(!)1295 2727
y Fc(2)1320 2750 y Fh(H)t Fk(\()p Fh(!)r Fk(\))p Fh(d!)c(;)0
2898 y Fj(whic)n(h)k(is)i(just)e(the)g(second)g(momen)n(t)e(of)j(the)f(lo)n
(wpass-\014lter)i(frequency)d(resp)r(onse)h Fh(H)t Fk(\()p
Fh(!)r Fk(\))g Fj(\(whic)n(h)0 2975 y(is)30 b(real)g(for)g(symmetric)d(FIR)j
(\014lters)f(obtained)h(b)n(y)f(symmetrically)g(windo)n(wing)i(the)d(ideal)0
3052 y(sinc)22 b(function)h(\(Rabiner)f(and)g(Gold)h(1975\)\).)31
b(A)22 b(lo)n(wpass-\014lter)h(design)g(will)g(mo)n(v)n(e)f(the)g(cut-)0
3129 y(o\013)28 b(frequency)g(sligh)n(tly)i(b)r(elo)n(w)e(that)g(of)h(the)f
(ideal)h(lo)n(wpass)h(\014lter)e(in)h(order)f(to)g(pro)n(vide)h(a)0
3206 y(\\transition)23 b(band")e(whic)n(h)h(allo)n(ws)h(the)e(\014lter)g
(resp)r(onse)g(to)h(giv)n(e)g(su\016cien)n(t)f(rejection)g(at)h(the)0
3283 y(ideal)f(cut-o\013)e(frequency)g(whic)n(h)h(is)h(where)e(aliasing)j(b)r
(egins.)29 b(Therefore,)20 b(in)g(a)h(w)n(ell)f(designed)0
3360 y(practical)i(lo)n(wpass)i(\014lter,)e(the)f(error)h(b)r(ound)g
Fh(M)1229 3368 y Fc(2)1276 3360 y Fj(should)g(b)r(e)g(lo)n(w)n(er)g(than)g
(in)h(the)e(ideal)i(case.)1172 3533 y Fk(10)p eop
%%Page: 11 11
10 bop 0 71 a Fj(Relation)23 b(of)f(In)n(terp)r(olation)h(Error)f(to)h(Quan)n
(tization)f(Error)p 0 97 1560 3 v 0 191 a(If)h Fh(h)p Fk(\()p
Fh(t)p Fk(\))15 b Fg(2)i Fk([)p Fg(\000)p Fk(1)p Fh(;)9 b Fk(1)k
Fg(\000)f Fk(2)466 171 y Fd(\000)p Ff(n)528 177 y Fa(c)552
191 y Fk(])23 b Fj(is)g(appro)n(ximated)g(b)n(y)g Fh(h)1204
199 y Ff(q)1228 191 y Fk(\()p Fh(t)p Fk(\))f Fj(whic)n(h)h(is)g(represen)n
(ted)e(in)i(t)n(w)n(o's)h(comple-)0 265 y(men)n(t)d(\014xed-p)r(oin)n(t)h
(arithmetic,)f(then)881 423 y Fh(h)913 431 y Ff(q)937 423 y
Fk(\()p Fh(t)979 431 y Fc(0)1003 423 y Fk(\))15 b(=)h Fg(\000)p
Fh(b)1166 431 y Fc(0)1203 423 y Fk(+)1258 353 y Ff(n)1285 359
y Fa(c)1306 353 y Fd(\000)p Fc(1)1270 371 y Fe(X)1274 488 y
Ff(i)p Fc(=1)1372 423 y Fh(b)1396 431 y Ff(i)1414 423 y Fk(2)1442
400 y Fd(\000)p Ff(i)1504 423 y Fh(;)772 b Fk(\()p Fj(16)o
Fk(\))0 585 y Fj(where)21 b Fh(b)216 593 y Ff(i)250 585 y Fg(2)15
b(f)p Fk(0)p Fh(;)9 b Fk(1)p Fg(g)21 b Fj(is)i(the)e Fh(i)p
Fj(th)h(bit,)h(and)f(the)g(w)n(orst-case)g(rounding)g(error)g(is)938
693 y Fg(j)p Fh(h)p Fk(\()p Fh(t)p Fk(\))11 b Fg(\000)i Fh(h)1148
701 y Ff(q)1172 693 y Fk(\()p Fh(t)p Fk(\))p Fg(j)i(\024)g
Fk(2)1352 670 y Fd(\000)p Ff(n)1414 676 y Fa(c)1447 693 y Fh(:)829
b Fk(\()p Fj(17)o Fk(\))0 801 y Fj(Letting)21 b Fh(h)265 809
y Ff(q)290 801 y Fk(\()p Fh(t)332 809 y Ff(i)350 801 y Fk(\))15
b(=)g Fh(h)p Fk(\()p Fh(t)519 809 y Ff(i)537 801 y Fk(\))d(+)g
Fh(\017)648 809 y Ff(i)667 801 y Fj(,)22 b(where)g Fg(j)p Fh(\017)937
809 y Ff(i)956 801 y Fg(j)16 b(\024)f Fk(2)1073 781 y Fd(\000)p
Ff(n)1135 787 y Fa(c)1158 801 y Fj(,)23 b(the)e(in)n(terp)r(olated)h(lo)r
(ok-up)h(b)r(ecomes)533 894 y Fk(^)533 908 y Fh(h)565 916 y
Ff(q)589 908 y Fk(\()p Fh(t)631 916 y Fc(0)668 908 y Fk(+)12
b Fh(\021)r Fk(\))k(=)p 848 878 30 3 v 15 w Fh(\021)r(h)909
916 y Ff(q)934 908 y Fk(\()p Fh(t)976 916 y Fc(0)1000 908 y
Fk(\))c(+)g Fh(\021)r(h)1150 916 y Ff(q)1175 908 y Fk(\()p
Fh(t)1217 916 y Fc(1)1241 908 y Fk(\))j(=)1337 894 y(^)1337
908 y Fh(h)p Fk(\()p Fh(t)1411 916 y Fc(0)1447 908 y Fk(+)e
Fh(\021)r Fk(\))f(+)p 1621 878 V 12 w Fh(\021)s(\017)1673 916
y Fc(0)1710 908 y Fk(+)h Fh(\021)r(\017)1817 916 y Fc(1)1852
908 y Fh(:)424 b Fk(\()p Fj(18)o Fk(\))0 1016 y Fj(Th)n(us)29
b(the)f(error)h(in)g(the)f(in)n(terp)r(olated)g(lo)r(okup)i(b)r(et)n(w)n(een)
d(quan)n(tized)h(\014lter)h(co)r(e\016cien)n(ts)e(is)0 1090
y(b)r(ounded)21 b(b)n(y)923 1124 y Fe(\014)923 1157 y(\014)923
1190 y(\014)942 1173 y Fk(~)941 1187 y Fh(h)973 1195 y Ff(q)997
1187 y Fk(\()p Fh(t)p Fk(\))1061 1124 y Fe(\014)1061 1157 y(\014)1061
1190 y(\014)1094 1187 y Fg(\024)1159 1150 y Fk(3)p 1159 1174
28 3 v 1159 1225 a(8)1194 1187 y Fh(M)1248 1195 y Fc(2)1284
1187 y Fk(+)13 b(2)1368 1164 y Fd(\000)p Ff(n)1430 1170 y Fa(c)1462
1187 y Fh(;)814 b Fk(\()p Fj(19)o Fk(\))0 1307 y Fj(whic)n(h,)22
b(in)h(the)e(case)h(of)h Fh(h)p Fk(\()p Fh(t)p Fk(\))14 b(=)h
Fj(sinc)p Fk(\()p Fh(t=L)p Fk(\))p Fj(,)21 b(can)h(b)r(e)f(written)637
1375 y Fe(\014)637 1408 y(\014)637 1441 y(\014)656 1424 y Fk(~)655
1439 y Fh(h)687 1447 y Ff(q)712 1439 y Fk(\()p Fh(t)p Fk(\))776
1375 y Fe(\014)776 1408 y(\014)776 1441 y(\014)809 1439 y Fh(<)874
1401 y Fk(1)p Fh(:)p Fk(234)p 874 1426 127 3 v 906 1477 a Fh(L)944
1461 y Fc(2)1019 1439 y Fk(+)12 b(2)1102 1416 y Fd(\000)p Ff(n)1164
1422 y Fa(c)1203 1439 y Fk(=)j(1)p Fh(:)p Fk(234)c Fg(\001)i
Fk(2)1455 1416 y Fd(\000)p Fc(2)p Ff(n)1539 1422 y Fa(l)1570
1439 y Fk(+)f(2)1653 1416 y Fd(\000)p Ff(n)1715 1422 y Fa(c)1748
1439 y Fh(:)528 b Fk(\()p Fj(20)o Fk(\))0 1573 y Fj(If)29 b
Fh(L)c Fk(=)g(2)232 1553 y Fc(1+)p Ff(n)315 1559 y Fa(c)336
1553 y Ff(=)p Fc(2)383 1573 y Fj(,)31 b(then)d Fg(j)606 1558
y Fk(~)605 1573 y Fh(h)637 1581 y Ff(q)662 1573 y Fk(\()p Fh(t)p
Fk(\))p Fg(j)c Fh(<)h Fk(1)p Fh(:)p Fk(5)16 b Fg(\001)h Fk(2)980
1553 y Fd(\000)p Ff(n)1042 1559 y Fa(c)1065 1573 y Fj(,)31
b(and)e(the)f(in)n(terp)r(olation)i(error)f(is)h(less)f(than)g(the)0
1647 y(quan)n(tization)23 b(error)f(b)n(y)g(more)f(than)h(a)g(factor)h(of)f
Fk(2)p Fj(.)0 1738 y(Error)h(in)f(the)f(Absence)g(of)i(In)n(terp)r(olation)p
0 1764 1086 3 v 0 1858 a(F)-6 b(or)21 b(comparison)f(purp)r(oses,)g(w)n(e)g
(deriv)n(e)f(the)h(error)f(incurred)g(when)h(no)g(in)n(terp)r(olation)g(of)h
(the)0 1932 y(\014lter)e(table)h(is)g(p)r(erformed.)28 b(In)19
b(this)h(case,)g(assuming)g(rounding)g(to)g(the)e(nearest)h(table)h(en)n(try)
-6 b(,)0 2006 y(w)n(e)22 b(ha)n(v)n(e)906 2090 y Fh(t)16 b
Fk(=)f Fh(t)1020 2098 y Fc(0)1057 2090 y Fk(+)e Fh(\021)r(;)143
b Fg(j)p Fh(\021)r Fg(j)16 b(\024)1440 2053 y Fk(1)p 1440 2077
28 3 v 1440 2128 a(2)832 2216 y(^)832 2231 y Fh(h)o Fk(\()p
Fh(t)p Fk(\))f(=)g Fh(h)p Fk(\()p Fh(t)1074 2239 y Fc(0)1098
2231 y Fk(\))832 2332 y(~)832 2347 y Fh(h)o Fk(\()p Fh(t)p
Fk(\))g(=)g Fh(h)p Fk(\()p Fh(t)p Fk(\))c Fg(\000)i Fh(h)p
Fk(\()p Fh(t)1237 2355 y Fc(0)1261 2347 y Fk(\))942 2489 y(=)i
Fh(\021)r(h)1061 2466 y Fd(0)1077 2489 y Fk(\()p Fh(t)1119
2497 y Fc(0)1143 2489 y Fk(\))d(+)1239 2452 y(1)p 1239 2477
V 1239 2527 a(2)1274 2489 y Fh(\021)1303 2466 y Fc(2)1328 2489
y Fh(h)1360 2466 y Fd(00)1388 2489 y Fk(\()p Fh(t)1430 2497
y Fc(0)1467 2489 y Fk(+)g Fh(\025\021)r Fk(\))795 2589 y Fe(\014)795
2622 y(\014)795 2655 y(\014)814 2638 y Fk(~)813 2652 y Fh(h)p
Fk(\()p Fh(t)p Fk(\))909 2589 y Fe(\014)909 2622 y(\014)909
2655 y(\014)942 2652 y Fg(\024)1007 2615 y Fh(M)1061 2623 y
Fc(1)p 1007 2640 79 3 v 1032 2690 a Fk(2)1104 2652 y(+)1166
2615 y Fh(M)1220 2623 y Fc(2)p 1166 2640 V 1192 2690 a Fk(8)1261
2652 y Fh(;)2291 2379 y Fk(\()p Fj(21)o Fk(\))0 2811 y Fj(where)21
b Fh(M)246 2819 y Fc(1)289 2780 y(\001)286 2811 y Fk(=)15 b
Fh(max)454 2819 y Ff(t)483 2811 y Fg(j)p Fh(h)530 2791 y Fd(0)545
2811 y Fk(\()p Fh(t)p Fk(\))p Fg(j)p Fj(.)30 b(F)-6 b(or)23
b(the)e(ideal)i(lo)n(wpass,)h(w)n(e)e(ha)n(v)n(e)488 2952 y
Fh(h)520 2929 y Fd(0)536 2952 y Fk(\()p Fh(t)p Fk(\))14 b(=)i
Fg(\000)742 2914 y Fk(1)p 723 2939 68 3 v 723 2990 a Fh(!)757
2998 y Ff(L)806 2877 y Fe(Z)861 2890 y Ff(!)889 2896 y Fa(L)837
3002 y Fc(0)930 2952 y Fh(!)r Fj(sin)q Fk(\()p Fh(!)r(t)p Fk(\))p
Fh(d!)h Fk(=)1293 2914 y Fh(!)1327 2922 y Ff(L)1361 2914 y
Fh(t)p Fj(cos)p Fk(\()p Fh(!)1526 2922 y Ff(L)1559 2914 y Fh(t)p
Fk(\))12 b Fg(\000)g Fj(sin)q Fk(\()p Fh(!)1806 2922 y Ff(L)1839
2914 y Fh(t)p Fk(\))p 1293 2939 587 3 v 1531 2990 a Fh(!)1565
2998 y Ff(L)1598 2990 y Fh(t)1618 2974 y Fc(2)1896 2952 y Fh(:)380
b Fk(\()p Fj(22)o Fk(\))0 3093 y Fj(Note)19 b(that)g Fh(h)331
3073 y Fd(0)346 3093 y Fk(\()p Fh(L)p Fk(\))14 b(=)i(1)p Fh(=L)i
Fj(and)h Fg(j)p Fh(h)786 3073 y Fd(0)802 3093 y Fk(\()p Fh(t)p
Fk(\))p Fg(j)c Fh(<)g(!)988 3101 y Ff(L)1022 3093 y Fh(=)p
Fk(2)f(=)i Fh(\031)r(=)p Fk(2)p Fh(L)p Fj(.)27 b(Th)n(us)20
b Fh(M)1544 3101 y Fc(1)1584 3093 y Fk(=)15 b Fh(a=L)k Fj(where)f
Fk(1)d Fg(\024)h Fh(a)f(<)h(\031)r(=)p Fk(2)p Fj(.)28 b(The)0
3167 y(no-in)n(terp)r(olation)23 b(error)f(b)r(ound)g(is)h(then)704
3308 y Fg(j)p Fh(h)751 3285 y Fd(0)767 3308 y Fk(\()p Fh(t)p
Fk(\))p Fg(j)14 b(\024)943 3270 y Fh(a)p 925 3295 66 3 v 925
3346 a Fk(2)p Fh(L)1010 3308 y Fk(+)1101 3270 y Fh(\031)1135
3250 y Fc(2)p 1072 3295 118 3 v 1072 3346 a Fk(24)p Fh(L)1166
3330 y Fc(2)1212 3308 y Fh(<)1277 3270 y Fk(0)p Fh(:)p Fk(7854)p
1277 3295 154 3 v 1335 3346 a Fh(L)1449 3308 y Fk(+)1511 3270
y(0)p Fh(:)p Fk(4113)p 1511 3295 V 1557 3346 a Fh(L)1595 3330
y Fc(2)1681 3308 y Fh(:)595 b Fk(\()p Fj(23)o Fk(\))1172 3533
y(11)p eop
%%Page: 12 12
11 bop 0 138 a Fl(Choice)26 b(of)g(In)n(terp)r(olation)i(Resolution)0
245 y Fj(W)-6 b(e)19 b(no)n(w)f(consider)g(the)g(error)g(due)g(to)g(\014nite)
g(precision)h(in)g(the)e(linear)i(in)n(terp)r(olation)h(b)r(et)n(w)n(een)0
323 y(stored)e(\014lter)h(co)r(e\016cien)n(ts.)28 b(W)-6 b(e)19
b(will)h(\014nd)e(that)h(the)e(n)n(um)n(b)r(er)h(of)h(bits)g
Fh(n)1796 331 y Ff(\021)1842 323 y Fj(in)g(the)f(in)n(terp)r(olation)0
400 y(factor)k(should)h(b)r(e)e(ab)r(out)h(half)h(the)f(\014lter)g(co)r
(e\016cien)n(t)f(w)n(ord-length)h Fh(n)1796 408 y Ff(c)1819
400 y Fj(.)0 501 y(Quan)n(tized)f(In)n(terp)r(olation)i(Error)f(Bound)p
0 527 1090 3 v 0 634 a(The)g(quan)n(tized)f(in)n(terp)r(olation)i(factor)f
(and)g(its)h(complemen)n(t)d(are)i(represen)n(table)f(as)1074
774 y Fh(\021)1101 782 y Ff(q)1141 774 y Fk(=)16 b Fh(\021)f
Fk(+)d Fh(\027)p 1072 860 30 3 v 1072 890 a(\021)1102 904 y
Ff(q)1141 890 y Fk(=)p 1200 860 V 16 w Fh(\021)j Fg(\000)d
Fh(\027)2291 844 y Fk(\()p Fj(24)o Fk(\))0 1063 y Fj(where,)29
b(since)f Fh(\021)r(;)p 440 1032 V 9 w(\021)k Fj(are)c(unsigned,)i
Fg(j)p Fh(\027)t Fg(j)24 b(\024)g Fk(2)1099 1043 y Fd(\000)p
Fc(\()p Ff(n)1178 1049 y Fa(\021)1202 1043 y Fc(+1\))1278 1063
y Fj(.)49 b(The)27 b(in)n(terp)r(olated)h(co)r(e\016cien)n(t)f(lo)r(ok-up)0
1140 y(then)21 b(giv)n(es)623 1205 y Fk(^)622 1220 y Fh(h)654
1228 y Ff(q)q(q)700 1220 y Fk(\()p Fh(t)p Fk(\))15 b(=)g(\()p
859 1189 V Fh(\021)f Fg(\000)f Fh(\027)t Fk(\)[)p Fh(h)p Fk(\()p
Fh(t)1098 1228 y Fc(0)1122 1220 y Fk(\))f(+)g Fh(\017)1233
1228 y Fc(0)1258 1220 y Fk(])h(+)f(\()p Fh(\021)j Fk(+)d Fh(\027)t
Fk(\)[)p Fh(h)p Fk(\()p Fh(t)1602 1228 y Fc(1)1626 1220 y Fk(\))g(+)g
Fh(\017)1737 1228 y Fc(1)1762 1220 y Fk(])779 1336 y(=)838
1321 y(^)837 1336 y Fh(h)p Fk(\()p Fh(t)p Fk(\))f(+)p 1000
1305 V 13 w Fh(\021)r(\017)1051 1344 y Fc(0)1089 1336 y Fk(+)h
Fh(\021)r(\017)1195 1344 y Fc(1)1233 1336 y Fk(+)h Fh(\027)t
Fk([)p Fh(h)p Fk(\()p Fh(t)1409 1344 y Fc(1)1433 1336 y Fk(\))f
Fg(\000)g Fh(h)p Fk(\()p Fh(t)1596 1344 y Fc(0)1620 1336 y
Fk(\)])d Fh(;)2291 1286 y Fk(\()p Fj(25)o Fk(\))0 1476 y Fj(where)29
b(second-order)g(errors)g Fh(\027)t(\017)845 1484 y Fc(0)900
1476 y Fj(and)h Fh(\027)t(\017)1090 1484 y Fc(1)1145 1476 y
Fj(are)g(dropp)r(ed.)52 b(Since)29 b Fg(j)p Fh(h)p Fk(\()p
Fh(t)1843 1484 y Fc(1)1868 1476 y Fk(\))16 b Fg(\000)g Fh(h)p
Fk(\()p Fh(t)2039 1484 y Fc(0)2064 1476 y Fk(\))p Fg(j)26 b(\024)g
Fh(M)2250 1484 y Fc(1)2274 1476 y Fj(,)32 b(w)n(e)0 1553 y(obtain)23
b(the)e(error)h(b)r(ound)735 1636 y Fe(\014)735 1669 y(\014)735
1702 y(\014)754 1685 y Fk(~)753 1700 y Fh(h)785 1708 y Ff(q)q(q)831
1700 y Fk(\()p Fh(t)p Fk(\))895 1636 y Fe(\014)895 1669 y(\014)895
1702 y(\014)928 1700 y Fg(\024)16 b Fk(2)1015 1677 y Fd(\000)p
Ff(n)1077 1683 y Fa(c)1112 1700 y Fk(+)c(2)1195 1677 y Fd(\000)p
Fc(\()p Ff(n)1274 1683 y Fa(\021)1299 1677 y Fc(+1\))1375 1700
y Fh(M)1429 1708 y Fc(1)1466 1700 y Fk(+)1528 1662 y(3)p 1528
1687 28 3 v 1528 1738 a(8)1562 1700 y Fh(M)1616 1708 y Fc(2)1650
1700 y Fh(:)603 b Fk(\()p Fj(26)p Fk(\))0 1867 y Fj(The)22
b(three)f(terms)g(in)i(\(26\))f(are)g(caused)g(b)n(y)g(co)r(e\016cien)n(t)f
(quan)n(tization,)j(in)n(terp)r(olation)f(quan-)0 1945 y(tization,)g(and)f
(linear-appro)n(ximation)i(error,)e(resp)r(ectiv)n(ely)-6 b(.)0
2045 y(Ideal)22 b(Lo)n(wpass)h(Filter)p 0 2071 592 3 v 0 2179
a(F)-6 b(or)23 b(the)f(ideal)g(lo)n(wpass,)i(the)d(error)h(b)r(ound)g(is)691
2291 y Fe(\014)691 2324 y(\014)691 2357 y(\014)710 2340 y Fk(~)709
2354 y Fh(h)741 2362 y Ff(q)q(q)787 2354 y Fk(\()p Fh(t)p Fk(\))851
2291 y Fe(\014)851 2324 y(\014)851 2357 y(\014)884 2354 y Fg(\024)15
b Fk(2)970 2331 y Fd(\000)p Ff(n)1032 2337 y Fa(c)1068 2354
y Fk(+)d Fh(a)p Fk(2)1180 2331 y Fd(\000)p Fc(\()p Ff(n)1259
2337 y Fa(l)1275 2331 y Fc(+)p Ff(n)1336 2337 y Fa(\021)1361
2331 y Fc(+1\))1449 2354 y Fk(+)1511 2317 y Fh(\031)1545 2297
y Fc(2)p 1511 2342 59 3 v 1527 2392 a Fk(8)1576 2354 y(2)1604
2331 y Fd(\000)p Ff(n)1666 2337 y Fa(l)1694 2354 y Fh(:)0 2519
y Fj(Let)22 b Fh(n)153 2527 y Ff(l)186 2519 y Fk(=)17 b(1)12
b(+)h Fh(n)375 2527 y Ff(c)398 2519 y Fh(=)p Fk(2)22 b Fj(and)h(require)f
(that)h(the)f(added)g(error)h(is)g(at)g(most)1769 2497 y Fc(1)p
1769 2506 23 3 v 1769 2538 a(2)1798 2519 y Fk(2)1826 2499 y
Fd(\000)p Ff(n)1888 2505 y Fa(c)1911 2519 y Fj(.)32 b(Then)22
b(w)n(e)h(arriv)n(e)0 2596 y(at)f(the)g(requiremen)n(t)1086
2676 y Fh(n)1119 2684 y Ff(\021)1162 2676 y Fg(\025)1227 2639
y Fh(n)1260 2647 y Ff(c)p 1227 2664 56 3 v 1241 2714 a Fk(2)1298
2676 y Fh(:)978 b Fk(\()p Fj(27)o Fk(\))0 2873 y Fl(6.)26 b(Conclusions)0
2981 y Fj(A)16 b(digital)h(resampling)f(metho)r(d)f(has)h(b)r(een)e(describ)r
(ed)h(whic)n(h)h(is)g(con)n(v)n(enien)n(t)f(for)i(non-uniform)0
3058 y(or)25 b(time-v)l(arying)g(resampling,)i(and)e(whic)n(h)f(is)i
(attractiv)n(e)e(for)i(hardw)n(are)f(implemen)n(tation.)0 3136
y(W)-6 b(e)27 b(ha)n(v)n(e)f(presen)n(ted)f(the)h(case)g(whic)n(h)g(assumes)g
(uniform)h(sampling)g(of)g(the)f(input)g(signal;)0 3213 y(ho)n(w)n(ev)n(er,)c
(extension)g(to)g(non-uniformly)h(sampled)f(input)g(signals)i(is)e(straigh)n
(tforw)n(ard.)0 3321 y(A)f(quan)n(tization)h(error)f(analysis)i(led)e(to)g
(the)g(conclusion)g(that)g(for)h Fh(n)1762 3329 y Ff(c)1785
3321 y Fj(-bit)g(\014lter)f(co)r(e\016cien)n(ts,)0 3398 y(the)29
b(n)n(um)n(b)r(er)g(of)h(impulse-resp)r(onse)f(samples)h(stored)f(in)i(the)e
(\014lter)g(lo)r(okup)i(table)e(should)1172 3533 y Fk(12)p
eop
%%Page: 13 13
12 bop 0 133 a Fj(b)r(e)29 b(on)g(the)g(order)g(of)g Fk(2)610
113 y Ff(n)637 119 y Fa(c)658 113 y Ff(=)p Fc(2)735 133 y Fj(times)g(the)f(n)
n(um)n(b)r(er)g(of)i(\\zero-crossings")g(in)g(the)e(impulse)h(re-)0
210 y(sp)r(onse,)21 b(and)g(the)f(n)n(um)n(b)r(er)g(of)h(bits)g(in)g(the)f
(in)n(terp)r(olation)i(b)r(et)n(w)n(een)d(impulse-resp)r(onse)h(sam-)0
288 y(ples)e(should)h(b)r(e)f(ab)r(out)g Fh(n)642 296 y Ff(c)665
288 y Fh(=)p Fk(2)p Fj(.)28 b(With)19 b(these)e(c)n(hoices,)i(the)f(linear)h
(in)n(terp)r(olation)g(error)f(and)h(the)0 365 y(error)k(due)f(to)g(quan)n
(tized)h(in)n(terp)r(olation)g(factors)g(are)g(eac)n(h)f(ab)r(out)g(equal)h
(to)g(the)f(co)r(e\016cien)n(t)0 443 y(quan)n(tization)i(error.)35
b(A)24 b(signal)h(resampler)e(designed)h(according)g(to)g(these)e(rules)i
(will)h(t)n(ypi-)0 520 y(cally)e(b)r(e)e(limited)i(primarily)g(b)n(y)f(the)f
(lo)n(wpass)j(\014lter)e Fi(design)p Fj(,)g(rather)g(than)g(b)n(y)g(quan)n
(tization)0 598 y(e\013ects.)0 703 y(W)-6 b(e)28 b(note)e(that)i(the)e(error)
h(analysis)i(presen)n(ted)d(here)g(is)i(p)r(essimistic)g(in)f(the)g(sense)g
(that)g(it)0 780 y(assumes)17 b(w)n(orst-case)g(input)h(signal)g(conditions)g
(\(e.g.,)i(a)d(sin)n(usoid)i(at)e(half)i(the)d(sampling)i(rate)0
858 y(or)25 b(white)f(noise\).)37 b(A)24 b(di\013eren)n(t)f(t)n(yp)r(e)h(of)h
(error)f(analysis)i(is)g(p)r(ossible)f(b)n(y)f(treating)h(the)e(\014lter)0
935 y(co)r(e\016cien)n(ts)h(as)h(exact)f(but)g(sub)t(ject)g(to)h(time)f
(jitter.)38 b(In)25 b(this)g(approac)n(h,)h(the)e(error)g(can)h(b)r(e)0
1013 y(expressed)20 b(in)i(terms)f(of)h(the)e(input)i(signal)h(T)-6
b(a)n(ylor)23 b(series)e(expansion,)h(and)g(consequen)n(tly)f(in)0
1090 y(terms)f(of)i(the)f(input)g(signal)i(bandwidth)e(\(or)h(maxim)n(um)e
(slop)r(e\).)30 b(Suc)n(h)20 b(an)i(analysis)h(rev)n(eals)0
1168 y(that)f(for)h(most)g(practical)f(signals,)j(the)d(quan)n(tization)h
(error)f(is)i(considerably)e(less)h(than)g(the)0 1245 y(lev)n(els)f(deriv)n
(ed)g(here.)0 1378 y Fl(References)0 1511 y Fj(R.)k(E.)h(Cro)r(c)n(hiere)e
(and)h(L.)f(R.)i(Rabiner,)g Fi(Multir)m(ate)f(Digital)h(Signal)h(Pr)m(o)m(c)m
(essing,)e Fj(Pren)n(tice-)0 1588 y(Hall)d(Inc.,)g(Englew)n(o)r(o)r(d)f
(Cli\013s,)h(NJ,)g(1983.)0 1721 y(Digital)j(Signal)g(Pro)r(cessing)f
(Committee,)f(ed.,)i Fi(Pr)m(o)m(gr)m(ams)f(for)i(Digital)f(Signal)h(Pr)m(o)m
(c)m(essing,)0 1799 y Fj(IEEE)c(Press,)f(New)g(Y)-6 b(ork,)23
b(1979.)0 1932 y(A.)f(A.)h(Goldstein,)g Fi(Constructive)f(R)m(e)m(al)h(A)n
(nalysis,)i Fj(Harp)r(er)c(and)h(Ro)n(w,)h(New)f(Y)-6 b(ork,)23
b(1967.)0 2064 y(L.)k(R.)f(Rabiner)h(and)f(B.)i(Gold,)g Fi(The)m(ory)f(and)h
(Applic)m(ation)g(of)h(Digital)f(Signal)g(Pr)m(o)m(c)m(essing,)0
2142 y Fj(Pren)n(tice-Hall)22 b(Inc.,)h(Englew)n(o)r(o)r(d)f(Cli\013s,)i(NJ,)
e(1975.)0 2275 y(R.)g(W.)h(Sc)n(hafer)f(and)g(L.)f(R.)i(Rabiner,)f(\\A)g
(Digital)h(Signal)h(Pro)r(cessing)e(Approac)n(h)f(to)h(In)n(ter-)0
2352 y(p)r(olation,")i Fi(Pr)m(o)m(c.)f(IEEE)p Fj(,)f(v)n(ol.)i(61,)f(pp.)f
(692{702,)i(June)e(1973.)0 2485 y(J.)e(O.)f(Smith)g(and)g(P)-6
b(.)20 b(Gossett,)g(\\A)f(Flexible)h(Sampling-Rate)f(Con)n(v)n(ersion)h
(Metho)r(d,")g Fi(Pr)m(o)m(c.)0 2563 y(IEEE)h(Conf.)g(A)m(c)m(oust.)g(Sp.)g
(and)g(Sig.)h(Pr)m(o)m(c.,)f(vol.)g(2,)h(pp.)f(19.4.1-19.4.2,)i(San)e(Die)m
(go,)g(Mar)m(ch)0 2640 y(1984.)30 b Fj(\(Original)23 b(v)n(ersion)g(of)f
(this)h(pap)r(er.\))0 2773 y(Note:)37 b(A)26 b(UNIX-compressed,)g(P)n
(ostscript-format)h(v)n(ersion)f(of)h(this)f(pap)r(er)g(and)g(a)h(related)0
2850 y(Mathematica)g(noteb)r(o)r(ok)h(\(co)n(v)n(ering)h(use)f(of)g(the)g
(Kaiser)h(windo)n(w\))f(can)g(b)r(e)g(obtained)g(via)0 2928
y(anon)n(ymous)22 b(FTP)h(to)f(ccrma-ftp.stanford.edu,)g(sub)r(directory)g
(pub/DSP/.)1172 3533 y Fk(13)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
